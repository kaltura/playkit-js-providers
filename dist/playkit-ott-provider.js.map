{"version":3,"sources":["./providers/webpack/universalModuleDefinition","./providers/webpack/bootstrap f8fa0b8048a2d9c44349","./providers/./util/request-builder.js","./providers/./util/logger.js","./providers/./k-provider/common/base-service-result.js","./providers/./entities/media-entry.js","./providers/./entities/media-format.js","./providers/./entities/media-source.js","./providers/./entities/media-sources.js","./providers/./entities/drm.js","./providers/./k-provider/common/data-loader-manager.js","./providers/./k-provider/common/multi-request-builder.js","./providers/./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js","./providers/./k-provider/ott/response-types/kaltura-asset.js","./providers/./k-provider/ott/response-types/kaltura-playback-context.js","./providers/./k-provider/ott/config.js","./providers/./k-provider/common/base-provider-parser.js","./providers/./k-provider/common/base-provider.js","./providers/./k-provider/common/response-types/kaltura-access-control-message.js","./providers/./k-provider/common/response-types/kaltura-rule-action.js","./providers/./k-provider/ott/services/ott-service.js","./providers/./util/clone.js","./providers/../~/js-logger/src/logger.js","./providers/./k-provider/ott/response-types/kaltura-playback-source.js","./providers/./k-provider/ott/provider.js","./providers/./k-provider/ott/index.js","./providers/./k-provider/ott/loaders/asset-loader.js","./providers/./k-provider/ott/loaders/data-loader-manager.js","./providers/./k-provider/ott/loaders/session-loader.js","./providers/./k-provider/ott/provider-parser.js","./providers/./k-provider/ott/services/asset-service.js","./providers/./k-provider/ott/services/user-service.js"],"names":["RequestBuilder","headers","Map","serviceUrl","service","action","url","Error","request","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","status","jsonResponse","JSON","parse","responseText","code","message","open","method","forEach","value","key","setRequestHeader","send","params","JsLogger","LogLevel","DEBUG","INFO","TIME","WARN","ERROR","OFF","useDefaults","defaultLevel","getLogger","name","get","getLogLevel","getLevel","setLogLevel","level","setLevel","ServiceResult","response","hasError","objectType","error","ServiceError","data","MediaEntry","metadata","sources","type","Type","UNKNOWN","id","toJSON","duration","dvrStatus","VOD","LIVE","IMAGE","AUDIO","MediaFormat","DASH","mimeType","pathExt","HLS","WVM","MP4","MP3","SupportedStreamFormat","MediaSource","mimetype","bandwidth","width","height","label","drmData","length","Array","isArray","push","d","MediaSources","progressive","dash","hls","source","mediaFormat","p","h","Drm","licenseUrl","scheme","certificate","DataLoaderManager","_loaders","loader","execution_loader","isValid","set","startIndex","_multiRequest","requests","add","executionLoaderResponseMap","from","val","index","_loadersResponseMap","execute","then","_multiResponse","success","preparedData","prepareData","err","loaderDataIndexes","results","slice","MultiRequestBuilder","requestParams","serviceDef","Object","assign","stringify","_logger","doHttpRequest","MultiRequestResult","errorText","responseArr","result","serviceResult","KalturaDrmPlaybackPluginData","drm","licenseURL","Scheme","KalturaAsset","description","tags","metas","pictures","_formatTagsMetas","images","objectToParse","parsed","keys","objects","object","MEDIA","RECORDING","EPG","KalturaPlaybackContext","actions","messages","map","TRAILER","CATCHUP","START_OVER","PLAYBACK","defaultConfig","cdnUrl","serviceParams","apiVersion","OTTConfiguration","clientConfig","BaseProviderParser","TypeError","sourceFormat","format","assetResponse","playBackContextResult","playbackContext","actionIndex","messagesIndex","BaseProvider","_partnerId","_uiConfId","_ks","_playerVersion","_isAnonymous","options","playerVersion","partnerId","uiConfId","ks","logLevel","mediaInfo","KalturaAccessControlMessage","KalturaRuleAction","DRM_POLICY","BLOCK","PREVIEW","LIMIT_FLAVORS","ADD_TO_STORAGE","LIMIT_DELIVERY_PROFILES","SERVE_FROM_REMOTE_SERVER","REQUEST_HOST_REGEX","LIMIT_THUMBNAIL_CAPTURE","SERVICE_NAME","OTTService","config","ottParams","multiReq","getUrl","clone","node","e","i","KalturaPlaybackSource","adsPolicy","adsParam","fileId","protocols","protocol","returnValue","protocolsArr","split","OTTProvider","env","_dataLoader","entryId","contextType","mediaType","mediaProtocol","assetFileIds","fileIds","context","requestData","formats","fetchData","_parseDataFromResponse","debug","mediaConfig","session","dvr","plugins","has","sessionLoader","assetLoader","blockedAction","hasBlockActions","errorMessage","hasErrorMessage","mediaEntry","getMediaEntry","NAME","__NAME__","VERSION","ContextType","MediaType","Provider","OTTAssetLoader","_response","buildRequests","_entryId","getPlaybackContext","_requests","mediaDataResult","OTTDataLoaderManager","getMultiRequest","OTTSessionLoader","anonymousLogin","udid","LIVE_ASST_OBJECT_TYPE","MediaTypeCombinations","mediaAssetData","externalIds","OTTProviderParser","mediaAsset","kalturaSources","metaData","poster","_getPoster","filteredKalturaSources","_filterSourcesByFormats","_getParsedSources","typeData","_getMediaType","Math","max","apply","picObj","regex","end","search","filter","includes","addAdaptiveSource","parsedSource","_parseAdaptiveSource","parseAdaptiveSources","_isProgressiveSource","parseProgressiveSources","kalturaSource","mediaSource","playUrl","hasDrmData","drmParams","OTTAssetService","assetId","playbackContextOptions","contextDataParams","assetType","assetReferenceType","OTTUserService"],"mappings":"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;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;AC3QD;;;;;;;;IAIqBI,qB;;AAWnB;;;;AAIA,iCAAY1H,MAAZ,EAA4B;AAAA;;AAAA;;AAAA,SAZ5B+C,GAY4B,GAZe,EAYf;;AAC1B,SAAKmC,MAAL,GAAclF,OAAOkF,MAArB;AACA,SAAKyC,SAAL,GAAiB3H,OAAO2H,SAAxB;AACA,SAAKC,QAAL,GAAgB5H,OAA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","file":"playkit-ott-provider.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ott\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"providers\"] = root[\"playkit\"][\"providers\"] || {}, root[\"playkit\"][\"providers\"][\"ott\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f8fa0b8048a2d9c44349","//@flow\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @member - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @member - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @member - Service tag\n   * @type {string}\n   */\n  tag: string;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    if (!this.url) {\n      throw new Error(\"serviceUrl is mandatory for request builder\");\n    }\n    let request = new XMLHttpRequest();\n    return new Promise((resolve, reject) => {\n      request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n          if (request.status === 200) {\n            let jsonResponse = JSON.parse(request.responseText);\n            if (jsonResponse && typeof(jsonResponse) === 'object' && jsonResponse.code && jsonResponse.message)\n              reject(jsonResponse);\n            else\n              resolve(jsonResponse);\n          } else {\n            reject(request.responseText);\n          }\n        }\n      };\n      request.open(this.method, this.url);\n      this.headers.forEach((value, key) => {\n        request.setRequestHeader(key, value);\n      });\n      request.send(this.params);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/request-builder.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nexport type LogLevelObject = { value: number, name: string };\nexport type LogLevelType = { [level: string]: LogLevelObject };\n\nconst LogLevel: LogLevelType = {\n  DEBUG: JsLogger.DEBUG,\n  INFO: JsLogger.INFO,\n  TIME: JsLogger.TIME,\n  WARN: JsLogger.WARN,\n  ERROR: JsLogger.ERROR,\n  OFF: JsLogger.OFF\n};\n\nJsLogger.useDefaults({defaultLevel: JsLogger.ERROR});\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  if (!name) {\n    return JsLogger;\n  }\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name?: string): LogLevelObject {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: LogLevelObject, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {LogLevel, getLogLevel, setLogLevel};\n\n\n\n// WEBPACK FOOTER //\n// ./util/logger.js","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else if (response.error && response.error.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.error.code, response.error.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-service-result.js","//@flow\nimport MediaSources from './media-sources'\n\nexport default class MediaEntry {\n  static Type: { [type: string]: string } = {\n    VOD: 'Vod',\n    LIVE: 'Live',\n    IMAGE: 'Image',\n    AUDIO: 'Audio',\n    UNKNOWN: 'Unknown'\n  };\n\n  /**\n   * @member - entry id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - entry name\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - entry sources\n   * @type {MediaSources}\n   */\n  sources: MediaSources;\n  /**\n   * @member - entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - entry type\n   * @type {string}\n   */\n  type: string;\n  /**\n   * @member - entry metadata\n   * @type {Object}\n   */\n  metadata: Object;\n  /**\n   * @member - DVR status\n   * @type {number}\n   */\n  dvrStatus: number;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.metadata = new Map();\n    this.sources = new MediaSources();\n    this.type = MediaEntry.Type.UNKNOWN;\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderMediaEntryObject} - The json class object.\n   */\n  toJSON(): ProviderMediaEntryObject {\n    return {\n      id: this.id,\n      name: this.name,\n      sources: this.sources.toJSON(),\n      duration: this.duration,\n      dvrStatus: this.dvrStatus,\n      metadata: this.metadata,\n      type: this.type\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-entry.js","//@flow\nexport const MediaFormat: { [name: string]: ProviderMediaFormatType } = {\n  DASH: {\n    name: 'dash',\n    mimeType: 'application/dash+xml',\n    pathExt: 'mpd'\n  },\n  HLS: {\n    name: 'hls',\n    mimeType: 'application/x-mpegURL',\n    pathExt: 'm3u8'\n  },\n  WVM: {\n    name: 'wvm',\n    mimeType: 'video/wvm',\n    pathExt: 'wvm'\n  },\n  MP4: {\n    name: 'mp4',\n    mimeType: 'video/mp4',\n    pathExt: 'mp4'\n  },\n  MP3: {\n    name: 'mp3',\n    mimeType: 'audio/mpeg',\n    pathExt: 'mp3'\n  }\n};\n\nexport const SupportedStreamFormat: Map<string, ProviderMediaFormatType> = new Map([\n  [\"mpegdash\", MediaFormat.DASH],\n  [\"applehttp\", MediaFormat.HLS],\n  [\"url\", MediaFormat.MP4]\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-format.js","//@flow\nimport Drm from './drm'\n\nexport default class MediaSource {\n  /**\n   * @member - media source id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - media source url\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - media source mimetype\n   * @type {string}\n   */\n  mimetype: string;\n  /**\n   * @member - media source drm data\n   * @type {Array<Drm>}\n   */\n  drmData: Array<Drm>;\n  /**\n   * @member - media source bandwidth\n   * @type {number}\n   */\n  bandwidth: number;\n  /**\n   * @member - media source width\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - media source height\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - media source label\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderMediaSourceObject} - The json class object.\n   */\n  toJSON(): ProviderMediaSourceObject {\n    const response: ProviderMediaSourceObject = {\n      id: this.id,\n      url: this.url,\n      mimetype: this.mimetype\n    };\n    if (this.bandwidth) response.bandwidth = this.bandwidth;\n    if (this.width) response.width = this.width;\n    if (this.height) response.height = this.height;\n    if (this.label) response.label = this.label;\n    if (this.drmData && this.drmData.length > 0) {\n      response.drmData = [];\n      this.drmData.forEach(d => {\n        if (Array.isArray(response.drmData)) {\n          response.drmData.push(d.toJSON());\n        }\n      });\n    }\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-source.js","// @flow\nimport MediaSource from './media-source'\nimport {MediaFormat} from './media-format'\n\nexport default class MediaSources {\n  /**\n   * Progressive download media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  progressive: Array<MediaSource>;\n  /**\n   * Dash media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  dash: Array<MediaSource>;\n  /**\n   * Hls media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  hls: Array<MediaSource>;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.progressive = [];\n    this.dash = [];\n    this.hls = [];\n  }\n\n  /**\n   * Maps the source to one of the containers according to his media format.\n   * @param {MediaSource} source - The source to add to one of the containers.\n   * @param {MediaFormat} mediaFormat - The media format of the source.\n   * @returns {void}\n   */\n  map(source: MediaSource, mediaFormat: ?ProviderMediaFormatType) {\n    if (mediaFormat) {\n      switch (mediaFormat.name) {\n        case MediaFormat.MP4.name:\n          this.progressive.push(source);\n          break;\n        case MediaFormat.DASH.name:\n          this.dash.push(source);\n          break;\n        case MediaFormat.HLS.name:\n          this.hls.push(source);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderMediaSourcesObject} - The json class object.\n   */\n  toJSON(): ProviderMediaSourcesObject {\n    const response: ProviderMediaSourcesObject = {\n      progressive: [],\n      dash: [],\n      hls: []\n    };\n    this.progressive.forEach(p => response.progressive.push(p.toJSON()));\n    this.hls.forEach(h => response.hls.push(h.toJSON()));\n    this.dash.forEach(d => response.dash.push(d.toJSON()));\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-sources.js","//@flow\nexport default class Drm {\n  /**\n   * @member - license url\n   * @type {string}\n   */\n  licenseUrl: string;\n  /**\n   * @member - drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - drm certificate\n   * @type {string}\n   */\n  certificate: string;\n\n  /**\n   * @constructor\n   * @param {string} licenseUrl - the license url\n   * @param {string} scheme - the drm scheme\n   * @param {?string} certificate - the drm certificate\n   */\n  constructor(licenseUrl: string, scheme: string, certificate: ?string) {\n    this.licenseUrl = licenseUrl;\n    this.scheme = scheme;\n    if (certificate) {\n      this.certificate = certificate;\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderDrmDataObject} - The json class object.\n   */\n  toJSON(): ProviderDrmDataObject {\n    const response: ProviderDrmDataObject = {\n      licenseUrl: this.licenseUrl,\n      scheme: this.scheme\n    };\n    if (this.certificate) response.certificate = this.certificate;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/drm.js","// @flow\nimport MultiRequestBuilder, {MultiRequestResult} from './multi-request-builder'\n\nexport default class DataLoaderManager {\n  /**\n   * @member - Loaders response map index\n   * @type {Map<string,Array<number>>}\n   * @private\n   * @static\n   */\n  static _loadersResponseMap: Map<string, Array<number>> = new Map();\n  /**\n   * @member - Loaders multi request\n   * @type {MultiRequestBuilder}\n   * @protected\n   */\n  _multiRequest: MultiRequestBuilder;\n  /**\n   * @member - Loaders multi response\n   * @type {MultiRequestResult}\n   * @private\n   */\n  _multiResponse: MultiRequestResult;\n  /**\n   * @member - Loaders to execute\n   * @type {Map<string,Function>}\n   * @private\n   */\n  _loaders: Map<string, ILoader> = new Map();\n\n  /**\n   * Add loader too execution loaders map\n   * @function\n   * @param {Function} loader Loader to add\n   * @param {Object} params Loader params\n   * @returns {void}\n   */\n  add(loader: Function, params: Object): void {\n    let execution_loader = new loader(params);\n    if (execution_loader.isValid()) {\n      this._loaders.set(loader.id, execution_loader);\n      // Get the start index from the multiReqeust before adding current execution_loader requests\n      let startIndex = this._multiRequest.requests.length;\n      // Get the requests\n      let requests = execution_loader.requests;\n      // Add requests to muktiRequest queue\n      requests.forEach((request) => {\n        this._multiRequest.add(request);\n      });\n      // Create range array of current execution_loader requests\n      let executionLoaderResponseMap = Array.from(new Array(requests.length), (val, index) => index + startIndex);\n      // Add to map\n      DataLoaderManager._loadersResponseMap.set(loader.id, executionLoaderResponseMap);\n    }\n  }\n\n  /**\n   * Get data from all loaders using multi request\n   * @function\n   * @returns {Promise} Promise\n   */\n  fetchData(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._multiRequest.execute()\n        .then(response => {\n          this._multiResponse = response;\n          if (!response.success) {\n            reject(response);\n          } else {\n            let preparedData: Object = this.prepareData(response);\n            if (preparedData.success) {\n              resolve(this._loaders);\n            } else {\n              reject({success: false, data: preparedData.error});\n            }\n          }\n        }, err => {\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Prepare fetched data\n   * @function\n   * @param {MultiRequestResult} response - The multi request result\n   * @returns {Object} - The prepared data\n   */\n  prepareData(response: MultiRequestResult): Object {\n    this._loaders.forEach(function (loader, name) {\n      let loaderDataIndexes = DataLoaderManager._loadersResponseMap.get(name);\n      try {\n        if (loaderDataIndexes && loaderDataIndexes.length > 0) {\n          loader.response = (response.results.slice(loaderDataIndexes[0], loaderDataIndexes[loaderDataIndexes.length - 1] + 1));\n        }\n      } catch (err) {\n        return {success: false, error: err};\n      }\n    });\n    return {success: true, data: this._loaders};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/data-loader-manager.js","//@flow\nimport RequestBuilder from '../../util/request-builder'\nimport getLogger from '../../util/logger'\nimport ServiceResult from './base-service-result'\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger(\"MultiRequestBuilder\");\n  /**\n   * @member - Array of requests\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(): Promise<Object> {\n    try {\n      this.params = JSON.stringify(this.params);\n    } catch (err) {\n      MultiRequestBuilder._logger.error(`${err.message}`);\n    }\n    return new Promise((resolve, reject) => {\n      this.doHttpRequest().then(data => {\n        resolve(new MultiRequestResult(data));\n      }, err => {\n        const errorText: string = `Error on multiRequest execution, error <${err}>.`;\n        reject(errorText);\n      });\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger(\"MultiRequestResult\");\n  /**\n   * @member - Is success\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @member - Multi request response data\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    const responseArr = response.result ? response.result : response;\n    responseArr.forEach((result) => {\n      const serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        MultiRequestResult._logger.error(`Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`);\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/multi-request-builder.js","//@flow\nexport default class KalturaDrmPlaybackPluginData {\n  static Scheme: { [scheme: string]: string } = {\n    'drm.PLAYREADY_CENC': 'com.microsoft.playready',\n    'drm.WIDEVINE_CENC': 'com.widevine.alpha',\n    'fairplay.FAIRPLAY': 'com.apple.fairplay',\n    'WIDEVINE_CENC': 'com.widevine.alpha',\n    'PLAYREADY_CENC': 'com.microsoft.playready',\n    'FAIRPLAY': 'com.apple.fairplay'\n  };\n\n  /**\n   * @member - The drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - The license URL\n   * @type {string}\n   */\n  licenseURL: string;\n\n  /**\n   * @member - The drm certificate\n   * @type {?string}\n   */\n  certificate: ?string;\n\n  /**\n   * @constructor\n   * @param {Object} drm The json response\n   */\n  constructor(drm: any) {\n    this.scheme = drm.scheme;\n    this.licenseURL = drm.licenseURL;\n    this.certificate = drm.certificate;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\n\nexport default class KalturaAsset extends ServiceResult {\n  static Type: { [type: string]: string } = {\n    MEDIA: \"media\",\n    RECORDING: \"recording\",\n    EPG: \"epg\"\n  };\n  /**\n   * @member - The asset id\n   * @type {number}\n   */\n  id: number;\n  /**\n   * @member - The asset name\n   * @type {string}\n   */\n  name: string = \"\";\n  /**\n   * @member - The asset name description\n   * @type {string}\n   */\n  description: string = \"\";\n  /**\n   * @member - The asset tags\n   * @type {Array<Object>}\n   */\n  tags: Array<Object> = [];\n  /**\n   * @member - The asset metas\n   * @type {Array<Object>}\n   */\n  metas: Array<Object> = [];\n  /**\n   * @member - The asset images\n   * @type {Array<any>}\n   */\n  pictures: Array<any> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n      this.id = response.id;\n      this.name = response.name;\n      this.description = response.description;\n      this.metas = this._formatTagsMetas(response.metas);\n      this.tags = this._formatTagsMetas(response.tags);\n      this.pictures = response.images;\n    }\n  }\n\n  _formatTagsMetas(objectToParse: any): Array<Object> {\n    const parsed = [];\n    Object.keys(objectToParse).forEach(function (key) {\n      if (objectToParse[key].objects) {\n        let value = \"\";\n        objectToParse[key].objects.forEach(function (object) {\n          value += object.value + \"|\";\n        });\n        parsed.push({key: key, value: value});\n      } else {\n        parsed.push({key: key, value: objectToParse[key].value});\n      }\n    });\n    return parsed;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-asset.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaAccessControlMessage from '../../common/response-types/kaltura-access-control-message'\nimport KalturaRuleAction from '../../common/response-types/kaltura-rule-action'\nimport KalturaPlaybackSource from './kaltura-playback-source'\n\nexport default class KalturaPlaybackContext extends ServiceResult {\n  static Type: { [type: string]: string } = {\n    TRAILER: \"TRAILER\",\n    CATCHUP: \"CATCHUP\",\n    START_OVER: \"START_OVER\",\n    PLAYBACK: \"PLAYBACK\"\n  };\n  /**\n   * @member - The playback sources\n   * @type {Array<KalturaPlaybackSource>}\n   */\n  sources: Array<KalturaPlaybackSource> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaRuleAction>}\n   */\n  actions: Array<KalturaRuleAction> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaAccessControlMessage>}\n   */\n  messages: Array<KalturaAccessControlMessage> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n      const messages = response.messages;\n      if (messages) {\n        messages.map(message => this.messages.push(new KalturaAccessControlMessage(message)));\n      }\n      const actions = response.actions;\n      if (actions) {\n        actions.map(action => this.actions.push(new KalturaRuleAction(action)));\n      }\n      const sources = response.sources;\n      if (sources) {\n        sources.map(source => this.sources.push(new KalturaPlaybackSource(source)));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-playback-context.js","//@flow\nimport {clone} from '../../util/clone'\n\nconst defaultConfig: Object = {\n  serviceUrl: \"//api-preprod.ott.kaltura.com/v4_6/api_v3\",\n  cdnUrl: \"//api-preprod.ott.kaltura.com/v4_7\",\n  serviceParams: {\n    apiVersion: '4.7.1'\n  }\n};\n\nexport default class OTTConfiguration {\n  static set(clientConfig?: ProviderEnvConfigObject) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OTTConfiguration};\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/config.js","// @flow\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport MediaEntry from '../../entities/media-entry'\nimport MediaSources from '../../entities/media-sources'\nimport MediaSource from '../../entities/media-source'\nimport type {OTTKalturaPlaybackSource} from '../ott/response-types/kaltura-playback-source'\nimport type {OVPKalturaPlaybackSource} from '../ovp/response-types/kaltura-playback-source'\n\nexport default class BaseProviderParser {\n  static getMediaEntry(...parms): MediaEntry { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaEntry method must be implement by the derived class`);\n  }\n\n  static _getParsedSources(...parms): MediaSources { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_getParsedSources method must be implement by the derived class`);\n  }\n\n  static _parseAdaptiveSource(...parms): MediaSource { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseAdaptiveSource method must be implement by the derived class`);\n  }\n\n  static _isProgressiveSource(source: OVPKalturaPlaybackSource | OTTKalturaPlaybackSource): boolean {\n    const sourceFormat = SupportedStreamFormat.get(source.format);\n    return !!sourceFormat && sourceFormat.name === 'mp4';\n  }\n\n  static hasBlockActions(assetResponse: any): any {\n    if (assetResponse && assetResponse.playBackContextResult) {\n      const playbackContext = assetResponse.playBackContextResult;\n      for (let actionIndex = 0; actionIndex < playbackContext.actions.length; actionIndex++) {\n        if (playbackContext.actions[actionIndex].type === \"BLOCK\") {\n          return playbackContext.actions[actionIndex];\n        }\n      }\n    }\n    return null;\n  }\n\n  static hasErrorMessage(assetResponse: any): any {\n    const messages = assetResponse.playBackContextResult.messages;\n    for (let messagesIndex = 0; messagesIndex < messages.length; messagesIndex++) {\n      if (messages[messagesIndex].code !== \"OK\") {\n        return messages[messagesIndex];\n      }\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider-parser.js","// @flow\nimport {setLogLevel, getLogLevel, LogLevel} from '../../util/logger'\nimport DataLoaderManager from './data-loader-manager'\n\nexport default class BaseProvider<MI> {\n  _partnerId: number;\n  _ks: string;\n  _uiConfId: ?number;\n  _dataLoader: DataLoaderManager;\n  _playerVersion: string;\n  _logger: any;\n  _isAnonymous: boolean;\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get uiConfId(): ?number {\n    return this._uiConfId;\n  }\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string): void {\n    this._ks = value;\n  }\n\n  get playerVersion(): string {\n    return this._playerVersion;\n  }\n\n  get isAnonymous(): boolean {\n    return this._isAnonymous;\n  }\n\n  constructor(options: ProviderOptionsObject, playerVersion: string) {\n    this._partnerId = options.partnerId;\n    this._uiConfId = options.uiConfId;\n    this._isAnonymous = !options.ks;\n    this._ks = options.ks || '';\n    this._playerVersion = playerVersion;\n    if (options.logLevel && this.LogLevel[options.logLevel]) {\n      setLogLevel(this.LogLevel[options.logLevel]);\n    }\n  }\n\n  getMediaConfig(mediaInfo: MI): Promise<ProviderMediaConfigObject> { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaConfig method must be implement by the derived class`);\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>, ...params: any): ProviderMediaConfigObject { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseDataFromResponse method must be implement by the derived class`);\n  }\n\n  get LogLevel(): { [level: string]: Object } {\n    return LogLevel;\n  }\n\n  getLogLevel(name?: string): Object {\n    return getLogLevel(name);\n  }\n\n  setLogLevel(level: Object, name?: string): void {\n    setLogLevel(level, name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider.js","//@flow\nexport default class KalturaAccessControlMessage {\n  /**\n   * @member - The access control message\n   * @type {string}\n   */\n  message: string;\n  /**\n   *  @member - The access control message code\n   * @@type {string}\n   */\n  code: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: Object) {\n    this.message = data.message;\n    this.code = data.code;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-access-control-message.js","//@flow\nexport default class KalturaRuleAction {\n  static Type: { [type: string]: string | number } = {\n    DRM_POLICY: \"drm.DRM_POLICY\",\n    BLOCK: 1,\n    PREVIEW: 2,\n    LIMIT_FLAVORS: 3,\n    ADD_TO_STORAGE: 4,\n    LIMIT_DELIVERY_PROFILES: 5,\n    SERVE_FROM_REMOTE_SERVER: 6,\n    REQUEST_HOST_REGEX: 7,\n    LIMIT_THUMBNAIL_CAPTURE: 8\n  };\n\n  /**\n   * @member - The type of the action\n   * @type {string|number}\n   */\n  type: string | number;\n\n  /**\n   * @constructor\n   * @param {Object} data - The response\n   */\n  constructor(data: Object) {\n    this.type = data.type;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-rule-action.js","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder'\nimport OTTConfiguration from '../config'\n\nconst SERVICE_NAME: string = \"multirequest\";\n\nexport default class OTTService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ott params\n   * @function getMultiRequest\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(ks: string, partnerId?: number): MultiRequestBuilder {\n    const config = OTTConfiguration.get();\n    const ottParams = config.serviceParams;\n    if (ks) {\n      Object.assign(ottParams, {ks: ks});\n    }\n    if (partnerId) {\n      Object.assign(ottParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = \"POST\";\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ottParams;\n    return multiReq;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/ott-service.js","const clone = (data) => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if (\n        (typeof e === \"object\" && e !== {}) ||\n        (Array.isArray(e) && e.length > 0)\n      ) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === \"object\") {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach((key) => {\n      if (\n        (typeof node[key] === \"object\" && node[key] !== {}) ||\n        (Array.isArray(node[key]) && node[key].length > 0)\n      ) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n\n\n\n// WEBPACK FOOTER //\n// ./util/clone.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 22\n// module chunks = 0 1","//@flow\nimport KalturaDrmPlaybackPluginData from '../../common/response-types/kaltura-drm-playback-plugin-data'\n\nexport type OTTKalturaPlaybackSource = KalturaPlaybackSource;\n\nexport default class KalturaPlaybackSource {\n  format: string;\n  protocols: string;\n  drm: Array<KalturaDrmPlaybackPluginData> = [];\n  adsPolicy: string;\n  adsParam: string;\n  duration: number;\n  url: string;\n  type: string;\n  fileId: number;\n\n  /**\n   * @constructor\n   * @param {Object} source The response\n   */\n  constructor(source: Object) {\n    this.format = source.format;\n    this.adsPolicy = source.adsPolicy;\n    this.adsParam = source.adsParam;\n    this.duration = source.duration;\n    this.url = source.url;\n    this.type = source.type;\n    this.fileId = source.id;\n    this.protocols = source.protocols;\n    if (source.drm) {\n      source.drm.map(drm => this.drm.push(new KalturaDrmPlaybackPluginData(drm)));\n    }\n  }\n\n  /**\n   * Checks if source has DRM data\n   * @function hasDrmData\n   * @returns {boolean} Is source has DRM\n   */\n  hasDrmData(): boolean {\n    return this.drm && this.drm.length > 0;\n  }\n\n  /**\n   * Returns source desired protocol if supported\n   * @param {string} protocol - the desired protocol for the source (base play url protocol)\n   * @returns {string} - protocol if protocol is in the protocols list - if not empty string returned\n   */\n  getProtocol(protocol: string): string {\n    let returnValue: string = \"\";\n    if (this.protocols && this.protocols.length > 0) {\n      let protocolsArr: Array<string> = this.protocols.split(\",\");\n      protocolsArr.forEach((p) => {\n        if (p === protocol) {\n          returnValue = p;\n        }\n      });\n    } else if (protocol === \"http\") {\n      return protocol;\n    }\n    return returnValue;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-playback-source.js","// @flow\nimport BaseProvider from '../common/base-provider'\nimport getLogger from '../../util/logger'\nimport OTTConfiguration from './config'\nimport OTTDataLoaderManager from './loaders/data-loader-manager'\nimport OTTSessionLoader from './loaders/session-loader'\nimport OTTAssetLoader from './loaders/asset-loader'\nimport OTTProviderParser from './provider-parser'\nimport KalturaAsset from './response-types/kaltura-asset'\nimport KalturaPlaybackContext from './response-types/kaltura-playback-context'\nimport MediaEntry from '../../entities/media-entry'\n\nexport default class OTTProvider extends BaseProvider<OTTProviderMediaInfoObject> {\n  /**\n   * @constructor\n   * @param {ProviderOptionsObject} options - provider options\n   * @param {string} playerVersion - player version\n   */\n  constructor(options: ProviderOptionsObject, playerVersion: string) {\n    super(options, playerVersion);\n    this._logger = getLogger(\"OTTProvider\");\n    OTTConfiguration.set(options.env);\n  }\n\n  /**\n   * Gets the backend media config.\n   * @param {OTTProviderMediaInfoObject} mediaInfo - ott media info\n   * @returns {Promise<ProviderMediaConfigObject>} - The provider media config\n   */\n  getMediaConfig(mediaInfo: OTTProviderMediaInfoObject): Promise<ProviderMediaConfigObject> {\n    if (mediaInfo.ks) {\n      this.ks = mediaInfo.ks;\n    }\n    this._dataLoader = new OTTDataLoaderManager(this.partnerId, this.ks);\n    return new Promise((resolve, reject) => {\n      const entryId = mediaInfo.entryId;\n      if (entryId) {\n        let ks: string = this.ks;\n        if (!ks) {\n          ks = \"{1:result:ks}\";\n          this._dataLoader.add(OTTSessionLoader, {partnerId: this.partnerId});\n        }\n        const contextType = mediaInfo.contextType || KalturaPlaybackContext.Type.PLAYBACK;\n        const mediaType = mediaInfo.mediaType || KalturaAsset.Type.MEDIA;\n        const playbackContext = {\n          mediaProtocol: mediaInfo.protocol,\n          assetFileIds: mediaInfo.fileIds,\n          context: contextType\n        };\n        this._dataLoader.add(OTTAssetLoader, {\n          entryId: entryId,\n          ks: ks,\n          type: mediaType,\n          playbackContext: playbackContext\n        });\n        const requestData = {\n          contextType: contextType,\n          mediaType: mediaType,\n          formats: mediaInfo.formats || []\n        };\n        this._dataLoader.fetchData()\n          .then(response => {\n            try {\n              resolve(this._parseDataFromResponse(response, requestData));\n            } catch (err) {\n              reject({success: false, data: err});\n            }\n          }, err => {\n            reject(err);\n          });\n      } else {\n        reject({success: false, data: \"Missing mandatory parameter\"});\n      }\n    });\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>, requestData: Object): ProviderMediaConfigObject {\n    this._logger.debug(\"Data parsing started\");\n    const mediaConfig: ProviderMediaConfigObject = {\n      id: '',\n      name: '',\n      session: {\n        partnerId: this.partnerId\n      },\n      sources: {hls: [], dash: [], progressive: []},\n      duration: 0,\n      type: MediaEntry.Type.UNKNOWN,\n      dvr: false,\n      metadata: {},\n      plugins: {}\n    };\n    if (this.uiConfId) {\n      mediaConfig.session.uiConfId = this.uiConfId;\n    }\n    if (data) {\n      if (data.has(OTTSessionLoader.id)) {\n        const sessionLoader = data.get(OTTSessionLoader.id);\n        if (sessionLoader && sessionLoader.response) {\n          this.ks = sessionLoader.response;\n          mediaConfig.session.ks = this.ks;\n        }\n      } else {\n        mediaConfig.session.ks = this.ks;\n      }\n      if (data.has(OTTAssetLoader.id)) {\n        const assetLoader = data.get(OTTAssetLoader.id);\n        if (assetLoader && assetLoader.response && Object.keys(assetLoader.response).length) {\n          const blockedAction = OTTProviderParser.hasBlockActions(assetLoader.response);\n          if (blockedAction) {\n            const errorMessage = OTTProviderParser.hasErrorMessage(assetLoader.response);\n            if (errorMessage) {\n              this._logger.error(`Asset is blocked, error message: `, errorMessage);\n              throw errorMessage;\n            } else {\n              this._logger.error(`Asset is blocked, action: `, blockedAction);\n              throw blockedAction;\n            }\n          }\n          const mediaEntry = OTTProviderParser.getMediaEntry(assetLoader.response, requestData);\n          mediaConfig.sources = mediaEntry.sources.toJSON();\n          mediaConfig.id = mediaEntry.id;\n          mediaConfig.name = mediaEntry.name;\n          mediaConfig.duration = mediaEntry.duration;\n          mediaConfig.metadata = mediaEntry.metadata;\n          mediaConfig.type = mediaEntry.type;\n          mediaConfig.dvr = !!mediaEntry.dvrStatus;\n        }\n      }\n    }\n    this._logger.debug(\"Data parsing finished\", mediaConfig);\n    return mediaConfig;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/provider.js","// @flow\nimport OTTProvider from './provider'\nimport KalturaPlaybackContext from './response-types/kaltura-playback-context'\nimport KalturaAsset from './response-types/kaltura-asset'\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-ott';\nconst VERSION = __VERSION__;\n\nconst ContextType = KalturaPlaybackContext.Type;\nconst MediaType = KalturaAsset.Type;\n\nexport {\n  OTTProvider as Provider,\n  ContextType,\n  MediaType,\n  NAME,\n  VERSION\n};\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/index.js","//@flow\nimport OTTAssetService from '../services/asset-service'\nimport OTTConfiguration from '../config'\nimport RequestBuilder from '../../../util/request-builder'\nimport KalturaPlaybackContext from '../response-types/kaltura-playback-context'\nimport KalturaAsset from '../response-types/kaltura-asset'\n\nexport default class OTTAssetLoader implements ILoader {\n  _entryId: string;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"asset\";\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._entryId = params.entryId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.mediaDataResult = new KalturaAsset(response[0].data);\n    this._response.playBackContextResult = new KalturaPlaybackContext(response[1].data);\n  }\n\n  get response(): any {\n    return this._response;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    const config = OTTConfiguration.get();\n    const requests: Array<RequestBuilder> = [];\n    requests.push(OTTAssetService.get(config.serviceUrl, params.ks, params.entryId));\n    requests.push(OTTAssetService.getPlaybackContext(config.serviceUrl, params.ks, params.entryId, params.type, params.playbackContext));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._entryId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/asset-loader.js","// @flow\nimport DataLoaderManager from '../../common/data-loader-manager'\nimport OTTService from '../services/ott-service'\n\nexport default class OTTDataLoaderManager extends DataLoaderManager {\n  /**\n   * @constructor\n   * @param {string} partnerId - partner id\n   * @param {string} ks - ks\n   */\n  constructor(partnerId: number, ks: string = \"\") {\n    super();\n    this._multiRequest = OTTService.getMultiRequest(ks, partnerId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/data-loader-manager.js","//@flow\nimport UserService from '../services/user-service'\nimport OTTConfiguration from '../config'\nimport RequestBuilder from '../../../util/request-builder'\n\nexport default class OTTSessionLoader implements ILoader {\n  _partnerId: number;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"session\";\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._partnerId = params.partnerId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.ks = response[0].data.ks;\n  }\n\n  get response(): any {\n    return this._response.ks;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    const config = OTTConfiguration.get();\n    const requests: Array<RequestBuilder> = [];\n    requests.push(UserService.anonymousLogin(config.serviceUrl, params.partnerId, params.udid));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._partnerId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/session-loader.js","//@flow\nimport getLogger from '../../util/logger'\nimport KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport KalturaPlaybackContext from './response-types/kaltura-playback-context'\nimport KalturaAsset from './response-types/kaltura-asset'\nimport MediaEntry from '../../entities/media-entry'\nimport Drm from '../../entities/drm'\nimport MediaSource from '../../entities/media-source'\nimport MediaSources from '../../entities/media-sources'\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport KalturaDrmPlaybackPluginData from '../common/response-types/kaltura-drm-playback-plugin-data'\nimport BaseProviderParser from '../common/base-provider-parser'\n\nconst LIVE_ASST_OBJECT_TYPE: string = \"KalturaLinearMediaAsset\";\n\nconst MediaTypeCombinations: { [mediaType: string]: Object } = {\n  [KalturaAsset.Type.MEDIA]: {\n    [KalturaPlaybackContext.Type.TRAILER]: () => ({type: MediaEntry.Type.VOD}),\n    [KalturaPlaybackContext.Type.PLAYBACK]: (mediaAssetData) => {\n      if (mediaAssetData.externalIds || mediaAssetData.objectType === LIVE_ASST_OBJECT_TYPE) {\n        return {type: MediaEntry.Type.LIVE, dvrStatus: 0};\n      }\n      return {type: MediaEntry.Type.VOD};\n    }\n  },\n  [KalturaAsset.Type.EPG]: {\n    [KalturaPlaybackContext.Type.CATCHUP]: () => ({type: MediaEntry.Type.VOD}),\n    [KalturaPlaybackContext.Type.START_OVER]: () => ({type: MediaEntry.Type.LIVE, dvrStatus: 1})\n  },\n  [KalturaAsset.Type.RECORDING]: {\n    [KalturaPlaybackContext.Type.PLAYBACK]: () => ({type: MediaEntry.Type.VOD})\n  }\n};\n\nexport default class OTTProviderParser extends BaseProviderParser {\n  static _logger = getLogger(\"OTTProviderParser\");\n\n  /**\n   * Returns parsed media entry by given OTT response objects.\n   * @function getMediaEntry\n   * @param {any} assetResponse - The asset response.\n   * @param {Object} requestData - The request data object.\n   * @returns {MediaEntry} - The media entry\n   * @static\n   * @public\n   */\n  static getMediaEntry(assetResponse: any, requestData: Object): MediaEntry {\n    const mediaEntry = new MediaEntry();\n    const playbackContext = assetResponse.playBackContextResult;\n    const mediaAsset = assetResponse.mediaDataResult;\n    const kalturaSources = playbackContext.sources;\n    mediaEntry.name = mediaAsset.name;\n    mediaEntry.id = mediaAsset.id;\n    const metaData = {};\n    metaData.description = mediaAsset.description;\n    metaData.poster = OTTProviderParser._getPoster(mediaAsset.pictures);\n    Object.assign(metaData, mediaAsset.metas);\n    Object.assign(metaData, mediaAsset.tags);\n    mediaEntry.metadata = metaData;\n    const filteredKalturaSources = OTTProviderParser._filterSourcesByFormats(kalturaSources, requestData.formats);\n    mediaEntry.sources = OTTProviderParser._getParsedSources(filteredKalturaSources);\n    const typeData = OTTProviderParser._getMediaType(mediaAsset.data, requestData.mediaType, requestData.contextType);\n    mediaEntry.type = typeData.type;\n    mediaEntry.dvrStatus = typeData.dvrStatus;\n    mediaEntry.duration = Math.max.apply(Math, kalturaSources.map(source => source.duration));\n\n    return mediaEntry;\n  }\n\n  /**\n   * Gets the poster url without width and height.\n   * @param {Array<Object>} pictures - Media pictures.\n   * @returns {string} - Poster base url.\n   * @private\n   */\n  static _getPoster(pictures: Array<Object>): string {\n    if (pictures && pictures.length > 0) {\n      const picObj = pictures[0];\n      const url = picObj.url;\n      const regex = /(width|height)\\/\\d*\\/(height|width)\\/\\d*/g;\n      const end = url.search(regex);\n      if (end > -1) {\n        return url;\n      }\n      return pictures;\n    }\n    return '';\n  }\n\n  /**\n   * Gets the media type (LIVE/VOD)\n   * @param {Object} mediaAssetData - The media asset data.\n   * @param {string} mediaType - The asset media type.\n   * @param {string} contextType - The asset context type.\n   * @returns {Object} - The type data object.\n   * @private\n   */\n  static _getMediaType(mediaAssetData: Object, mediaType: string, contextType: string): Object {\n    let typeData = {type: MediaEntry.Type.UNKNOWN};\n    if (MediaTypeCombinations[mediaType] && MediaTypeCombinations[mediaType][contextType]) {\n      typeData = MediaTypeCombinations[mediaType][contextType](mediaAssetData);\n    }\n    return typeData;\n  }\n\n  /**\n   * Filtered the kalturaSources array by device type.\n   * @param {Array<KalturaPlaybackSource>} kalturaSources - The kaltura sources.\n   * @param {Array<string>} formats - Partner device formats.\n   * @returns {Array<KalturaPlaybackSource>} - Filtered kalturaSources array.\n   * @private\n   */\n  static _filterSourcesByFormats(kalturaSources: Array<KalturaPlaybackSource>, formats: Array<string>): Array<KalturaPlaybackSource> {\n    if (formats.length > 0) {\n      kalturaSources = kalturaSources.filter(source => formats.includes(source.type));\n    }\n    return kalturaSources;\n  }\n\n  /**\n   * Returns the parsed sources\n   * @function _getParsedSources\n   * @param {Array<KalturaPlaybackSource>} kalturaSources - The kaltura sources\n   * @param {Object} playbackContext - The playback context\n   * @return {MediaSources} - A media sources\n   * @static\n   * @private\n   */\n  static _getParsedSources(kalturaSources: Array<KalturaPlaybackSource>): MediaSources {\n    const sources = new MediaSources();\n    const addAdaptiveSource = (source: KalturaPlaybackSource) => {\n      const parsedSource = OTTProviderParser._parseAdaptiveSource(source);\n      const sourceFormat = SupportedStreamFormat.get(source.format);\n      sources.map(parsedSource, sourceFormat);\n    };\n    const parseAdaptiveSources = () => {\n      kalturaSources.filter((source) => !OTTProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n    const parseProgressiveSources = () => {\n      kalturaSources.filter((source) => OTTProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n    if (kalturaSources && kalturaSources.length > 0) {\n      parseAdaptiveSources();\n      parseProgressiveSources();\n    }\n    return sources;\n  }\n\n  /**\n   * Returns a parsed adaptive source\n   * @function _parseAdaptiveSource\n   * @param {KalturaPlaybackSource} kalturaSource - A kaltura source\n   * @returns {MediaSource} - The parsed adaptive kalturaSource\n   * @static\n   * @private\n   */\n  static _parseAdaptiveSource(kalturaSource: ?KalturaPlaybackSource): MediaSource {\n    const mediaSource = new MediaSource();\n    if (kalturaSource) {\n      const playUrl = kalturaSource.url;\n      const mediaFormat = SupportedStreamFormat.get(kalturaSource.format);\n      if (mediaFormat) {\n        mediaSource.mimetype = mediaFormat.mimeType;\n      }\n      if (playUrl === '') {\n        OTTProviderParser._logger.error(`failed to create play url from source, discarding source: (${kalturaSource.fileId}), ${kalturaSource.format}.`);\n        return mediaSource;\n      }\n      mediaSource.url = playUrl;\n      mediaSource.id = kalturaSource.fileId + ',' + kalturaSource.format;\n      if (kalturaSource.hasDrmData()) {\n        const drmParams: Array<Drm> = [];\n        kalturaSource.drm.forEach((drm) => {\n          drmParams.push(new Drm(drm.licenseURL, KalturaDrmPlaybackPluginData.Scheme[drm.scheme], drm.certificate));\n        });\n        mediaSource.drmData = drmParams;\n      }\n    }\n    return mediaSource;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/provider-parser.js","//@flow\nimport OTTService from './ott-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"asset\";\n\nexport default class OTTAssetService extends OTTService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} serviceUrl The service base URL\n   * @param {string} ks The partner ID\n   * @param {string} assetId The asset ID\n   * @param {string} type The asset type (media/recording/epg)\n   * @param {ProviderPlaybackContextOptions} playbackContextOptions The playbackContextOptions\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static getPlaybackContext(serviceUrl: string, ks: string, assetId: string, type: string, playbackContextOptions: ProviderPlaybackContextOptions): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"getPlaybackContext\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    const contextDataParams: Object = {objectType: \"KalturaPlaybackContextOptions\"};\n    Object.assign(contextDataParams, playbackContextOptions);\n    request.params = {assetId: assetId, assetType: type, contextDataParams: contextDataParams, ks: ks};\n    return request;\n  }\n\n  static get(serviceUrl: string, ks: string, assetId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"get\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.params = {id: assetId, assetReferenceType: \"media\", ks: ks};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/asset-service.js","//@flow\nimport OTTService from './ott-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"ottuser\";\n\nexport default class OTTUserService extends OTTService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} serviceUrl The service base URL\n   * @param {string} partnerId The partner ID\n   * @param {string} udid The udid\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static anonymousLogin(serviceUrl: string, partnerId: number, udid?: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"anonymousLogin\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    const params: Object = {partnerId: partnerId};\n    if (udid) {\n      Object.assign(params, {udid: udid});\n    }\n    request.params = params;\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/user-service.js"],"sourceRoot":""}