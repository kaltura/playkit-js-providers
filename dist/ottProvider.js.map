{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap edb0c0e7bcf458a6f19a?e040","webpack:///./k-provider/request-builder.js?c3f6","webpack:///./k-provider/ovp/config.js?e6e3","webpack:///./k-provider/base-service-result.js?60ef","webpack:///./util/logger.js?8c6e","webpack:///./k-provider/multi-request-builder.js?9243","webpack:///./k-provider/enums.js?7d8c","webpack:///./k-provider/ott/config.js?9aea","webpack:///./k-provider/ovp/services/ovp-service.js?fc9d","webpack:///./entities/media-sources.js?fb37","webpack:///./k-provider/ott/services/ott-service.js?5d27","webpack:///../~/js-logger/src/logger.js?779b","webpack:///./entities/media-entry.js?f496","webpack:///./entities/drm.js?1c78","webpack:///./entities/media-source.js?489a","webpack:///./k-provider/data-loader-manager.js?311a","webpack:///./entities/media-format.js?60b5","webpack:///./k-provider/shared-response-types/kaltura-access-control-message.js?78dc","webpack:///./k-provider/shared-response-types/kaltura-drm-playback-plugin-data.js?b7f7","webpack:///./k-provider/shared-response-types/kaltura-rule-action.js?a197","./providers/./k-provider/ott/response-types/kaltura-playback-source.js","./providers/./k-provider/ott/loaders/asset-loader.js","./providers/./k-provider/ott/loaders/session-loader.js","./providers/./k-provider/ott/provider-parser.js","./providers/./k-provider/ott/ott-provider.js","./providers/./k-provider/ott/response-types/kaltura-asset.js","./providers/./k-provider/ott/response-types/kaltura-playback-context.js","./providers/./k-provider/ott/services/ott-asset-service.js","./providers/./k-provider/ott/services/ott-user-service.js"],"names":["RequestBuilder","headers","Map","baseUrl","service","action","url","Error","request","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","status","jsonResponse","JSON","parse","responseText","code","message","open","method","forEach","value","key","setRequestHeader","send","params","defaultConfig","beUrl","serviceParams","apiVersion","format","Configuration","clientConfig","Object","assign","ServiceResult","response","hasError","objectType","error","ServiceError","data","JsLogger","LoggerFactory","options","useDefaults","name","get","Logger","defaultLevel","DEBUG","LOG_LEVEL","INFO","TIME","WARN","ERROR","OFF","logger","MultiRequestBuilder","requests","push","requestParams","serviceDef","length","stringify","err","doHttpRequest","then","MultiRequestResult","errorText","results","success","responseArr","result","serviceResult","DrmScheme","KalturaRuleActionTypes","DRM_POLICY","BLOCK","PREVIEW","LIMIT_FLAVORS","ADD_TO_STORAGE","LIMIT_DELIVERY_PROFILES","SERVE_FROM_REMOTE_SERVER","REQUEST_HOST_REGEX","LIMIT_THUMBNAIL_CAPTURE","Status","QUEUED","CONVERTING","READY","DELETED","NOT_APPLICABLE","TEMP","WAIT_FOR_CONVERT","IMPORTING","VALIDATING","EXPORTING","MetadataObjectTypes","AD_CUE_POINT","ANNOTATION","CODE_CUE_POINT","THUMB_CUE_POINT","ENTRY","CATEGORY","USER","PARTNER","DYNAMIC_OBJECT","MetadataStatuses","VALID","INVALID","EntryStatuses","ERROR_IMPORTING","ERROR_CONVERTING","SCAN_FAILURE","IMPORT","INFECTED","PRECONVERT","PENDING","MODERATE","BLOCKED","NO_CONTENT","EntryModerationStatuses","PENDING_MODERATION","APPROVED","REJECTED","FLAGGED_FOR_REVIEW","AUTO_APPROVED","EntryTypes","AUTOMATIC","EXTERNAL_MEDIA","MEDIA_CLIP","MIX","PLAYLIST","DATA","LIVE_STREAM","LIVE_CHANNEL","DOCUMENT","MediaTypes","VIDEO","IMAGE","AUDIO","LIVE_STREAM_FLASH","LIVE_STREAM_WINDOWS_MEDIA","LIVE_STREAM_REAL_MEDIA","LIVE_STREAM_QUICKTIME","MediaEntryTypes","Vod","Live","Image","Audio","Unknown","UIConfTypes","PLAYER","CONTRIBUTION_WIZARD","SIMPLE_EDITOR","ADVANCED_EDITOR","APP_STUDIO","KRECORD","PLAYER_V3","KMC_ACCOUNT","KMC_ANALYTICS","KMC_CONTENT","KMC_DASHBOARD","KMC_LOGIN","PLAYER_SL","CLIENTSIDE_ENCODER","KMC_GENERAL","KMC_ROLES_AND_PERMISSIONS","CLIPPER","KSR","KUPLOAD","WEBCASTING","UIConfCreationModes","WIZARD","ADVANCED","OttAssetType","MEDIA","RECORDING","EPG","OttPlaybackType","TRAILER","CATCHUP","START_OVER","PLAYBACK","ProviderType","OVP","OTT","clientTag","config","SERVICE_NAME","OvpService","pVersion","ks","partnerId","ovpParams","set","multiReq","getUrl","MediaSources","progressive","dash","hls","source","mediaFormat","OttService","ottParams","MediaEntry","metaData","type","Drm","licenseUrl","scheme","certificate","MediaSource","DataLoaderManager","partnerID","provider","_loaders","_multiRequest","getMultirequest","loader","execution_loader","isValid","id","startIndex","add","executionLoaderResponseMap","Array","from","val","index","_loadersResponseMap","execute","_multiResponse","preparedData","prepareData","loaderDataIndexes","slice","MediaFormats","mimeType","pathExt","wvm","mp4","mp3","KalturaAccessControlMessage","KalturaDrmPlaybackPluginData","drm","licenseURL","KalturaRuleAction","KalturaPlaybackSource","adsPolicy","adsParam","duration","fileId","protocols","map","flavorIds","protocol","returnValue","protocolsArr","split","p","AssetLoader","_response","buildRequests","_entryId","entryId","getPlaybackContext","playbackContext","_requests","mediaDataResult","playBackContextResult","SessionLoader","_partnerId","anonymousLogin","udid","SUPPORTED_FORMATS","ProviderParser","assetResponse","mediaEntry","mediaData","kalturaSources","sources","description","metas","tags","_getParsedSources","Math","max","apply","addAdaptiveSource","parsedSource","_parseAdaptiveSource","sourceFormat","parseAdaptiveSources","filter","_isProgressiveSource","parseProgressiveSources","kalturaSource","mediaSource","playUrl","mimetype","deliveryProfileId","hasDrmData","drmParams","drmData","actionIndex","actions","messages","messagesIndex","OttProvider","_pVersion","_isAnonymous","_dataLoader","validateParams","mediaProtocol","assetFileIds","fileIds","context","contextType","assetId","fetchData","parseDataFromResponse","debug","session","uiConfID","_uiConfId","dvr","metadata","plugins","has","sessionLoader","assetLoader","blockedAction","hasBlockActions","errorMessage","hasErrorMessage","getMediaEntry","uiConfId","KalturaAsset","pictures","_formatTagsMetas","images","objectToParse","parsed","keys","objects","object","KalturaPlaybackContext","OTTAssetService","playbackContextOptions","contextDataParams","assetType","assetReferenceType","OTTUserService"],"mappings":"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,UAAIC,WAAW,kCAAwBvM,OAAxB,CAAf;AACAuM,eAASjL,MAAT,GAAkB,MAAlB;AACAiL,eAASpM,OAAT,GAAmB6L,YAAnB;AACAO,eAASlM,GAAT,GAAekM,SAASC,MAAT,CAAgBT,OAAOjK,KAAvB,CAAf;AACAyK,eAAS3K,MAAT,GAAkBoL,SAAlB;AACA,aAAOT,QAAP;AACD;;;;;;kBA1BkBQ,U;;;;;;ACXrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;;AAEA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB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","file":"ottProvider.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PlaykitJsProviders\"] = factory();\n\telse\n\t\troot[\"PlaykitJsProviders\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap edb0c0e7bcf458a6f19a","//@flow\n\n/**\n * Request builder\n * @classdesc\n */\nexport default class RequestBuilder {\n\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @member - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @member - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @member - Service tag\n   * @type {string}\n   */\n  tag: string;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} baseUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(baseUrl: string): string {\n    return baseUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    if (!this.url) {\n      throw new Error(\"baseUrl is mandatory for request builder\");\n    }\n    let request = new XMLHttpRequest();\n    return new Promise((resolve, reject) => {\n      request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n          if (request.status === 200) {\n            let jsonResponse = JSON.parse(request.responseText);\n            if (jsonResponse && typeof(jsonResponse) === 'object' && jsonResponse.code && jsonResponse.message)\n              reject(jsonResponse);\n            else\n              resolve(jsonResponse);\n          } else {\n            reject(request.responseText);\n          }\n        }\n      };\n      request.open(this.method, this.url);\n      this.headers.forEach((value, key) => {\n        request.setRequestHeader(key, value);\n      });\n      request.send(this.params);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/request-builder.js","//@flow\n\nconst defaultConfig: Object = {\n  beUrl: \"http://www.kaltura.com/api_v3\",\n  baseUrl: \"https://cdnapisec.kaltura.com\",\n  serviceParams: {\n    apiVersion: '3.3.0',\n    format: 1\n  }\n};\n\nexport default class Configuration {\n\n  static set(clientConfig?: Object) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return defaultConfig;\n  }\n}\n\nexport {Configuration};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/config.js","//@flow\n\n/**\n * Base service result\n * @classdesc\n */\nexport default class ServiceResult {\n\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    }\n    else {\n      this.data = response;\n    }\n  }\n}\n\n/**\n * Service error\n * @classdesc\n */\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/base-service-result.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nclass LoggerFactory {\n  constructor(options?: Object) {\n    JsLogger.useDefaults(options || {});\n  }\n\n  get(name?: string) {\n    if (!name) {\n      return JsLogger;\n    }\n    return JsLogger.get(name);\n  }\n}\n\nlet Logger = new LoggerFactory({defaultLevel: JsLogger.DEBUG});\nconst LOG_LEVEL: { [level: string]: Object } = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nexport default Logger;\nexport {LOG_LEVEL};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./util/logger.js","//@flow\nimport RequestBuilder from './request-builder'\nimport ServiceResult from './base-service-result'\nimport Logger from \"../util/logger\";\n/**\n * @constant\n */\nconst logger = Logger.get(\"OvpProvider\");\n\n/**\n * Multi Request builder\n * @classdesc\n */\nexport default class MultiRequestBuilder extends RequestBuilder {\n\n  /**\n   * @member - Array of requests\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    let requestParams = {};\n    let serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promisie\n   */\n  execute(): Promise<Object> {\n    try {\n      this.params = JSON.stringify(this.params);\n    }\n    catch (err) {\n      logger.error(`${err.message}`);\n    }\n    return new Promise((resolve, reject) => {\n      this.doHttpRequest().then(data => {\n          resolve(new MultiRequestResult(data));\n        },\n        err => {\n          let errorText: string = `Error on multiRequest execution, error <${err}>.`;\n          reject(errorText);\n\n        });\n    });\n  }\n\n}\n\n/**\n * Multi Request result object\n * @classdesc\n */\nexport class MultiRequestResult {\n\n  /**\n   * @member - Is success\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @member - Multi request response data\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n\n  /**\n   * @constructor\n   * @param {Object}  response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    let responseArr = response.result ? response.result : response;\n      responseArr.forEach((result) => {\n      let serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        logger.error(`Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`);\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/multi-request-builder.js","//@flow\nexport const DrmScheme = {\n  'drm.PLAYREADY_CENC': 'com.microsoft.playready',\n  'drm.WIDEVINE_CENC': 'com.widevine.alpha',\n  'fairplay.FAIRPLAY': 'com.apple.fairplay',\n  'WIDEVINE_CENC': 'com.widevine.alpha',\n  'PLAYREADY_CENC': 'com.microsoft.playready',\n  'FAIRPLAY': 'com.apple.fairplay'\n\n};\n\nexport class KalturaRuleActionTypes {\n  static DRM_POLICY: KalturaRuleActionType = \"drm.DRM_POLICY\";\n  static BLOCK: KalturaRuleActionType = 1;\n  static PREVIEW: KalturaRuleActionType = 2;\n  static LIMIT_FLAVORS: KalturaRuleActionType = 3;\n  static ADD_TO_STORAGE: KalturaRuleActionType = 4;\n  static LIMIT_DELIVERY_PROFILES: KalturaRuleActionType = 5;\n  static SERVE_FROM_REMOTE_SERVER: KalturaRuleActionType = 6;\n  static REQUEST_HOST_REGEX: KalturaRuleActionType = 7;\n  static LIMIT_THUMBNAIL_CAPTURE: KalturaRuleActionType = 8;\n}\n\nexport class Status {\n  static ERROR: number = -1;\n  static QUEUED: number = 0;\n  static CONVERTING: number = 1;\n  static READY: number = 2;\n  static DELETED: number = 3;\n  static NOT_APPLICABLE: number = 4;\n  static TEMP: number = 5;\n  static WAIT_FOR_CONVERT: number = 6;\n  static IMPORTING: number = 7;\n  static VALIDATING: number = 8;\n  static EXPORTING: number = 9;\n}\n\nexport class MetadataObjectTypes {\n  static AD_CUE_POINT: MetadataObjectType = \"adCuePointMetadata.AdCuePoint\";\n  static ANNOTATION: MetadataObjectType = \"annotationMetadata.Annotation\";\n  static CODE_CUE_POINT: MetadataObjectType = \"codeCuePointMetadata.CodeCuePoint\";\n  static THUMB_CUE_POINT: MetadataObjectType = \"thumbCuePointMetadata.thumbCuePoint\";\n  static ENTRY: MetadataObjectType = 1;\n  static CATEGORY: MetadataObjectType = 2;\n  static USER: MetadataObjectType = 3;\n  static PARTNER: MetadataObjectType = 4;\n  static DYNAMIC_OBJECT: MetadataObjectType = 5;\n}\n\nexport class MetadataStatuses {\n  static VALID: MetadataStatus = 1;\n  static INVALID: MetadataStatus = 2;\n  static DELETED: MetadataStatus = 3;\n}\n\nexport class EntryStatuses {\n  static ERROR_IMPORTING: EntryStatus = -2;\n  static ERROR_CONVERTING: EntryStatus = -1;\n  static SCAN_FAILURE: EntryStatus = \"virusScan.ScanFailure\";\n  static IMPORT: EntryStatus = 0;\n  static INFECTED: EntryStatus = \"virusScan.Infected\";\n  static PRECONVERT: EntryStatus = 1;\n  static READY: EntryStatus = 2;\n  static DELETED: EntryStatus = 3;\n  static PENDING: EntryStatus = 4;\n  static MODERATE: EntryStatus = 5;\n  static BLOCKED: EntryStatus = 6;\n  static NO_CONTENT: EntryStatus = 7\n}\n\nexport class EntryModerationStatuses {\n  static PENDING_MODERATION: EntryModerationStatus = 1;\n  static APPROVED: EntryModerationStatus = 2;\n  static REJECTED: EntryModerationStatus = 3;\n  static FLAGGED_FOR_REVIEW: EntryModerationStatus = 4;\n  static MODERATE: EntryModerationStatus = 5;\n  static AUTO_APPROVED: EntryModerationStatus = 6\n}\n\nexport class EntryTypes {\n  static AUTOMATIC: EntryType = {value: -1};\n  static EXTERNAL_MEDIA: EntryType = {value: \"externalMedia.externalMedia\"};\n  static MEDIA_CLIP: EntryType = {value: 1};\n  static MIX: EntryType = {value: 2};\n  static PLAYLIST: EntryType = {value: 5};\n  static DATA: EntryType = {value: 6};\n  static LIVE_STREAM: EntryType = {value: 7};\n  static LIVE_CHANNEL: EntryType = {value: 8};\n  static DOCUMENT: EntryType = {value: 10};\n}\n\nexport class MediaTypes {\n  static VIDEO: MediaType = {value: 1};\n  static IMAGE: MediaType = {value: 2};\n  static AUDIO: MediaType = {value: 5};\n  static LIVE_STREAM_FLASH: MediaType = {value: 201};\n  static LIVE_STREAM_WINDOWS_MEDIA: MediaType = {value: 202};\n  static LIVE_STREAM_REAL_MEDIA: MediaType = {value: 203};\n  static LIVE_STREAM_QUICKTIME: MediaType = {value: 204};\n}\n\nexport class MediaEntryTypes {\n  static Vod: MediaEntryType = 'Vod';\n  static Live: MediaEntryType = 'Live';\n  static Image: MediaEntryType = 'Image';\n  static Audio: MediaEntryType = 'Audio';\n  static Unknown: MediaEntryType = 'Unknown';\n}\n\nexport class UIConfTypes {\n  static PLAYER: UIConfType = 1;\n  static CONTRIBUTION_WIZARD: UIConfType = 2;\n  static SIMPLE_EDITOR: UIConfType = 3;\n  static ADVANCED_EDITOR: UIConfType = 4;\n  static PLAYLIST: UIConfType = 5;\n  static APP_STUDIO: UIConfType = 6;\n  static KRECORD: UIConfType = 7;\n  static PLAYER_V3: UIConfType = 8;\n  static KMC_ACCOUNT: UIConfType = 9;\n  static KMC_ANALYTICS: UIConfType = 10;\n  static KMC_CONTENT: UIConfType = 11;\n  static KMC_DASHBOARD: UIConfType = 12;\n  static KMC_LOGIN: UIConfType = 13;\n  static PLAYER_SL: UIConfType = 14;\n  static CLIENTSIDE_ENCODER: UIConfType = 15;\n  static KMC_GENERAL: UIConfType = 16;\n  static KMC_ROLES_AND_PERMISSIONS: UIConfType = 17;\n  static CLIPPER: UIConfType = 18;\n  static KSR: UIConfType = 19;\n  static KUPLOAD: UIConfType = 20;\n  static WEBCASTING: UIConfType = 21\n}\n\nexport class UIConfCreationModes {\n  static WIZARD: UIConfCreationMode = 2;\n  static ADVANCED: UIConfCreationMode = 3;\n}\n\nexport class OttAssetType {\n  static MEDIA: OttAssetType = \"media\";\n  static RECORDING: OttAssetType = \"recording\";\n  static EPG: OttAssetType = \"epg\";\n}\n\nexport class OttPlaybackType {\n  static TRAILER: OttPlaybackType = \"TRAILER\";\n  static CATCHUP: OttPlaybackType = \"CATCHUP\";\n  static START_OVER: OttPlaybackType = \"START_OVER\";\n  static PLAYBACK: OttPlaybackType = \"PLAYBACK\"\n}\n\nexport class ProviderType {\n  static OVP: ProviderType = \"OVP\";\n  static OTT: ProviderType = \"OTT\";\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/enums.js","//@flow\n\nconst defaultConfig: Object = {\n  beUrl: \"http://api-preprod.ott.kaltura.com/v4_6/api_v3\",\n  serviceParams: {\n    clientTag: \"playkit-js\",\n    apiVersion: '4.5.4.15337'\n  }\n};\n\nexport default class Configuration {\n\n  static set(clientConfig?: Object) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return defaultConfig;\n  }\n}\n\nexport {Configuration};\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/config.js","//@flow\nimport MultiRequestBuilder from '../../multi-request-builder'\nimport Configuration from '../config'\n\nconst config = Configuration.get();\nconst SERVICE_NAME: string = \"multirequest\";\n\n/**\n * Base for all ovp services\n * @classdesc\n */\nexport default class OvpService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ovp params\n   * @function getMultirequest\n   * @param {string} pVersion The player version\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultirequest(pVersion: string, ks: string, partnerId?: number): MultiRequestBuilder {\n    let ovpParams = config.serviceParams;\n    Object.assign(ovpParams, {ks: ks, clientTag: 'html5:v' + pVersion});\n    if (partnerId) {\n      Object.assign(ovpParams, {partnerId: partnerId});\n    }\n    let headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    let multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = \"POST\";\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.beUrl);\n    multiReq.params = ovpParams;\n    return multiReq;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/ovp-service.js","// @flow\nimport MediaSource from './media-source'\n\n/**\n * Container for the media sources aggregated by stream format.\n * @classdesc\n */\nexport default class MediaSources {\n  /**\n   * Progressive download media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  progressive: Array<MediaSource>;\n  /**\n   * Dash media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  dash: Array<MediaSource>;\n  /**\n   * Hls media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  hls: Array<MediaSource>;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.progressive = [];\n    this.dash = [];\n    this.hls = [];\n  }\n\n  /**\n   * Maps the source to one of the containers according to his media format.\n   * @param {MediaSource} source - The source to add to one of the containers.\n   * @param {MediaFormat} mediaFormat - The media format of the source.\n   * @returns {void}\n   */\n  map(source: MediaSource, mediaFormat: ?MediaFormat) {\n    if (mediaFormat) {\n      switch (mediaFormat.name) {\n        case 'mp4':\n          this.progressive.push(source);\n          break;\n        case 'dash':\n          this.dash.push(source);\n          break;\n        case 'hls':\n          this.hls.push(source);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-sources.js","//@flow\nimport MultiRequestBuilder from '../../multi-request-builder'\nimport Configuration from '../config'\n\nconst config = Configuration.get();\nconst SERVICE_NAME: string = \"multirequest\";\n\n/**\n * Base for all ott services\n * @classdesc\n */\nexport default class OttService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ott params\n   * @function getMultirequest\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultirequest(ks: string, partnerId?: number): MultiRequestBuilder {\n    let ottParams = config.serviceParams;\n    if(ks)\n    {\n      Object.assign(ottParams, {ks: ks});\n    }\n    if (partnerId) {\n      Object.assign(ottParams, {partnerId: partnerId});\n    }\n    let headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    let multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = \"POST\";\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.beUrl);\n    multiReq.params = ottParams;\n    return multiReq;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/ott-service.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 10\n// module chunks = 0 1 2 3","//@flow\nimport {MediaEntryTypes} from '../k-provider/enums'\nimport MediaSources from './media-sources'\n\n/**\n * Media entry\n * @classdesc\n */\nexport default class MediaEntry {\n\n  /**\n   * @member - entry ID\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - entry name\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - entry sources\n   * @type {MediaSources}\n   */\n  sources: MediaSources;\n  /**\n   * @member - entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - entry type\n   * @type {MediaEntryType}\n   */\n  type: MediaEntryType;\n  /**\n   * @member - entry metadata\n   * @type {Object}\n   */\n  metaData: Object;\n  /**\n   * @member - DVR status\n   * @type {number}\n   */\n  dvrStatus: number;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.metaData = new Map();\n    this.type = MediaEntryTypes.Unknown;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-entry.js","//@flow\n\n/**\n * Drm data\n * @classdesc\n */\nexport default class Drm {\n\n  /**\n   * @member - license URL\n   * @type {string}\n   */\n  licenseUrl: string;\n  /**\n   * @member - drm scheme\n   * @type {Scheme}\n   */\n  scheme: Scheme;\n\n  /**\n   * @member - The drm certificate\n   * @type {?string}\n   */\n  certificate: ?string;\n\n  /**\n   * @constructor\n   * @param {string} licenseUrl - the license URL\n   * @param {Scheme} scheme - the drm scheme\n   * @param {?string} certificate - the drm certificate\n   */\n  constructor(licenseUrl: string, scheme: Scheme, certificate: ?string) {\n    this.licenseUrl = licenseUrl;\n    this.scheme = scheme;\n    this.certificate = certificate;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/drm.js","//@flow\nimport Drm from '../entities/drm'\n\n/**\n * Media source\n * @classdesc\n */\nexport default class MediaSource {\n  /**\n   * @member - media source ID\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - media source URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - media source mimetype\n   * @type {string}\n   */\n  mimetype: string;\n  /**\n   * @member - media source drm data\n   * @type {Array<Drm>}\n   */\n  drmData: Array<Drm>;\n  /**\n   * @member - media source bandwidth\n   * @type {number}\n   */\n  bandwidth: number;\n  /**\n   * @member - media source width\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - media source height\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - media source label\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-source.js","//@flow\nimport OvpService from './ovp/services/ovp-service'\nimport OttService from './ott/services/ott-service'\nimport MultiRequestBuilder from './multi-request-builder'\nimport {MultiRequestResult} from './multi-request-builder'\nimport {ProviderType} from  './enums'\n/**\n * Data loaders manager\n * @classdesc\n */\nexport default class DataLoaderManager {\n  /**\n   * @member - Lodaers response map index\n   * @type {Map<string,Array<number>>}\n   * @private\n   * @static\n   */\n  static _loadersResponseMap: Map<string, Array<number>> = new Map();\n  /**\n   * @member - Loaders multi request\n   * @type {MultiRequestBuilder}\n   * @private\n   */\n  _multiRequest: MultiRequestBuilder;\n  /**\n   * @member - Loaders multi response\n   * @type {MultiRequestResult}\n   * @private\n   */\n  _multiResponse: MultiRequestResult;\n  /**\n   * @member - Loaders to execute\n   * @type {Map<string,Function>}\n   * @private\n   */\n  _loaders: Map<string, ILoader> = new Map();\n\n  /**\n   * @constructor\n   * @param {string} pVersion The player version\n   * @param {string} partnerID Then partner ID\n   * @param {string} ks The ks\n   * @param {ProviderType} provider type, ovp or ott\n   */\n  constructor(pVersion: string, partnerID: number, ks: string = \"\", provider: ProviderType = ProviderType.OVP) {\n    switch (provider) {\n      case ProviderType.OVP:\n        this._multiRequest = OvpService.getMultirequest(pVersion, ks, partnerID);\n        break;\n      case ProviderType.OTT:\n        this._multiRequest = OttService.getMultirequest(ks, partnerID);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Add loader too execution loaders map\n   * @function\n   * @param {Function} loader Loader to add\n   * @param {Object} params Loader params\n   * @returns {void}\n   */\n  add(loader: Function, params: Object): void {\n    let execution_loader = new loader(params);\n    if (execution_loader.isValid()) {\n      this._loaders.set(loader.id, execution_loader);\n      //Get the start index from the multiReqeust before adding current execution_loader requests\n      let startIndex = this._multiRequest.requests.length;\n      //Get the requests\n      let requests = execution_loader.requests;\n      //Add requests to muktiRequest queue\n      requests.forEach((request) => {\n        this._multiRequest.add(request);\n      });\n      //Create range array of current execution_loader requests\n      let executionLoaderResponseMap = Array.from(new Array(requests.length), (val, index) => index + startIndex);\n      //Add to map\n      DataLoaderManager._loadersResponseMap.set(loader.id, executionLoaderResponseMap);\n    }\n  }\n\n  /**\n   * Get data from all loaders using multi request\n   * @function\n   * @returns {Promise} Promise\n   */\n  fetchData(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._multiRequest.execute()\n        .then(response => {\n            this._multiResponse = response;\n            if (!response.success) {\n              reject(response);\n            }\n            else {\n              let preparedData: Object = this.prepareData(response);\n              if (preparedData.success) {\n                resolve(this._loaders);\n              }\n              else {\n                reject({success: false, data: preparedData.error});\n              }\n            }\n          },\n          err => {\n            reject(err);\n          });\n    });\n  }\n\n  prepareData(response: MultiRequestResult): Object {\n    this._loaders.forEach(function (loader, name) {\n      let loaderDataIndexes = DataLoaderManager._loadersResponseMap.get(name);\n      try {\n        if (loaderDataIndexes != null) {\n          loader.response = (response.results.slice(loaderDataIndexes[0], loaderDataIndexes[loaderDataIndexes.length - 1] + 1));\n        }\n      }\n      catch (err) {\n        return {success: false, error: err};\n      }\n    });\n    return {success: true, data: this._loaders};\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/data-loader-manager.js","//@flow\nexport class MediaFormats {\n  static dash: MediaFormat = {\n    name: 'dash',\n    mimeType: \"application/dash+xml\",\n    pathExt: \"mpd\"\n  };\n\n  static hls: MediaFormat = {\n    name: 'hls',\n    mimeType: \"application/x-mpegURL\",\n    pathExt: \"m3u8\"\n  };\n\n  static wvm: MediaFormat = {\n    name: 'wvm',\n    mimeType: \"video/wvm\",\n    pathExt: \"wvm\"\n  };\n\n  static mp4: MediaFormat = {\n    name: 'mp4',\n    mimeType: \"video/mp4\",\n    pathExt: \"mp4\"\n  };\n\n  static mp3: MediaFormat = {\n    name: 'mp3',\n    mimeType: \"audio/mpeg\",\n    pathExt: \"mp3\"\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-format.js","//@flow\n\n/**\n * Ovp BE access control message\n * @classdesc\n */\nexport default class KalturaAccessControlMessage {\n  /**\n   * @member - The access control message\n   * @type {string}\n   */\n  message: string;\n  /**\n   *  @member - The access control message code\n   * @@type {string}\n   */\n  code: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: Object) {\n    this.message = data.message;\n    this.code = data.code\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/shared-response-types/kaltura-access-control-message.js","//@flow\n\n/**\n * Ovp BE DrmPlaybackPluginData\n * @classdesc\n */\nexport default class KalturaDrmPlaybackPluginData {\n  /**\n   * @member - The drm scheme\n   * @type {Scheme}\n   */\n  scheme: Scheme;\n\n  /**\n   * @member - The license URL\n   * @type {string}\n   */\n  licenseURL: string;\n\n  /**\n   * @member - The drm certificate\n   * @type {?string}\n   */\n  certificate: ?string;\n\n  /**\n   * @constructor\n   * @param {Object} drm The json response\n   */\n  constructor(drm: any) {\n    this.scheme = drm.scheme;\n    this.licenseURL = drm.licenseURL;\n    this.certificate = drm.certificate;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/shared-response-types/kaltura-drm-playback-plugin-data.js","//@flow\n\n/**\n * Ovp BE rule action\n * @classdesc\n */\nexport default class KalturaRuleAction {\n  /**\n   * @member - The type of the action\n   * @type {KalturaRuleActionType}\n   */\n  type: KalturaRuleActionType;\n\n  /**\n   * @constructor\n   * @param {Object} data The response\n   */\n  constructor(data: Object) {\n    this.type = data.type;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/shared-response-types/kaltura-rule-action.js","//@flow\nimport KalturaDrmPlaybackPluginData from '../../shared-response-types/kaltura-drm-playback-plugin-data'\n\n/**\n * OTT BE playback source\n * @classdesc\n */\nexport default class KalturaPlaybackSource {\n  /**\n   * @member - source format according to delivery profile streamer type (applehttp, mpegdash etc.)\n   * @type {string}\n   */\n  format: string;\n  /**\n   * @member - comma separated string according to deliveryProfile media protocols ('http,https' etc.)\n   * @type {string}\n   */\n  protocols: string;\n\n  drm: Array<KalturaDrmPlaybackPluginData> = [];\n  adsPolicy: AdsPolicy;\n  adsParam: string;\n  duration: number;\n  url: string;\n  type: string;\n  fileId: number;\n\n  /**\n   * @constructor\n   * @param {Object} source The response\n   */\n  constructor(source: Object) {\n    this.format = source.format;\n    this.adsPolicy = source.adsPolicy;\n    this.adsParam = source.adsParam;\n    this.duration = source.duration;\n    this.url = source.url;\n    this.type = source.type;\n    this.fileId = source.id;\n    this.protocols = source.protocols;\n    if (source.drm) {\n      source.drm.map(drm => this.drm.push(new KalturaDrmPlaybackPluginData(drm)));\n    }\n\n\n  }\n\n  /**\n   * Checks if source has DRM data\n   * @function hasDrmData\n   * @returns {boolean} Is source has DRM\n   */\n  hasDrmData(): boolean {\n    return this.drm && this.drm.length > 0;\n  }\n\n  /**\n   * Checks if source has flavor IDs\n   * @function hasFlavorIds\n   * @returns {boolean} Is source ha flavor IDs\n   */\n  hasFlavorIds(): boolean {\n    return !!this.flavorIds && this.flavorIds.length > 0;\n  }\n\n  /**\n   * Returns source desired protocol if supported\n   * @param {string} protocol - the desired protocol for the source (base play url protocol)\n   * @returns {string} - protocol if protocol is in the protocols list - if not empty string returned\n   */\n  getProtocol(protocol: string): string {\n    let returnValue: string = \"\";\n    if (this.protocols && this.protocols.length > 0) {\n      let protocolsArr: Array<string> = this.protocols.split(\",\");\n      protocolsArr.forEach((p) => {\n        if (p == protocol) {\n          returnValue = p;\n        }\n      });\n    }\n    else if (protocol == \"http\") {\n      return protocol;\n    }\n    return returnValue;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-playback-source.js","//@flow\n\nimport OTTAssetService from '../services/ott-asset-service'\nimport Configuration from '../config'\nimport RequestBuilder from '../../request-builder'\nimport KalturaPlaybackContext from  '../response-types/kaltura-playback-context'\nimport KalturaAsset from  '../response-types/kaltura-asset'\n\nconst config = Configuration.get();\n\n/**\n * Asset loader\n * @classdesc\n */\nexport default class AssetLoader implements ILoader {\n  static get id(): string {\n    return \"asset\";\n  }\n\n  _entryId: string;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._entryId = params.entryId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.mediaDataResult = new KalturaAsset(response[0].data);\n    this._response.playBackContextResult = new KalturaPlaybackContext(response[1].data);\n\n  }\n\n  get response(): any {\n    return this._response;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    let requests: Array<RequestBuilder> = [];\n    requests.push(OTTAssetService.get(config.beUrl,params.ks, params.entryId))\n    requests.push(OTTAssetService.getPlaybackContext(config.beUrl,params.ks, params.entryId, params.type, params.playbackContext));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._entryId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/asset-loader.js","//@flow\nimport OTTUserService from '../services/ott-user-service'\nimport Configuration from '../config'\nimport RequestBuilder from '../../request-builder'\n\nconst config = Configuration.get();\n/**\n * Media entry loader\n * @classdesc\n */\nexport default class SessionLoader implements ILoader {\n  static get id(): string {\n    return \"session\";\n  }\n\n  /**\n   * @member - partner ID\n   * @type {number}\n   * @private\n   */\n  _partnerId: number;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._partnerId = params.partnerId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.ks = response[0].data.ks;\n  }\n\n  get response(): any {\n    return this._response.ks;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    let requests: Array<RequestBuilder> = [];\n    requests.push(OTTUserService.anonymousLogin(config.beUrl, params.partnerId, params.udid));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._partnerId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/session-loader.js","//@flow\nimport KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport {DrmScheme} from '../enums'\nimport Logger from '../../util/logger'\nimport {MediaFormats} from '../../entities/media-format'\nimport MediaEntry from '../../entities/media-entry'\nimport Drm from '../../entities/drm'\nimport MediaSource from '../../entities/media-source'\nimport MediaSources from '../../entities/media-sources'\n\n/**\n * @constant\n */\nconst logger = Logger.get(\"OttProvider\");\n\n/**\n * @constant\n * @type {Map<string, MediaFormat>}\n */\nconst SUPPORTED_FORMATS: Map<string, MediaFormat> = new Map([\n  [\"mpegdash\", MediaFormats.dash],\n  [\"applehttp\", MediaFormats.hls],\n  [\"url\", MediaFormats.mp4]\n]);\n\n/**\n * Ott provider parser\n * @classdesc\n */\nexport default class ProviderParser {\n\n  /**\n   * Returns parsed media entry by given OTT response objects\n   * @function getMediaEntry\n   * @param {any} assetResponse - The asset response\n   * @returns {MediaEntry} - The media entry\n   * @static\n   * @public\n   */\n  static getMediaEntry(assetResponse: any): MediaEntry {\n    let mediaEntry: MediaEntry = new MediaEntry();\n    let playbackContext = assetResponse.playBackContextResult;\n    let mediaData = assetResponse.mediaDataResult;\n    let kalturaSources: Array<KalturaPlaybackSource> = playbackContext.sources;\n\n    mediaEntry.name = mediaData.name;\n    mediaEntry.id = mediaData.id;\n    let metaData = {description: mediaData.description};\n    Object.assign(metaData, mediaData.metas);\n    Object.assign(metaData, mediaData.tags);\n    mediaEntry.metaData = metaData;\n\n    let sources: MediaSources = ProviderParser._getParsedSources(kalturaSources);\n\n    mediaEntry.sources = sources;\n    mediaEntry.duration = Math.max.apply(Math, kalturaSources.map(function (source) {\n      return source.duration;\n    }))\n\n    return mediaEntry;\n  }\n\n  /**\n   * Returns the parsed sources\n   * @function _getParsedSources\n   * @param {Array<KalturaPlaybackSource>} kalturaSources - The kaltura sources\n   * @param {Object} playbackContext - The playback context\n   * @return {MediaSources} - A media sources\n   * @static\n   * @private\n   */\n  static _getParsedSources(kalturaSources: Array<KalturaPlaybackSource>): MediaSources {\n    let sources: MediaSources = new MediaSources();\n\n    let addAdaptiveSource = function (source: KalturaPlaybackSource): void {\n      let parsedSource = ProviderParser._parseAdaptiveSource(source);\n      let sourceFormat = SUPPORTED_FORMATS.get(source.format);\n      sources.map(parsedSource, sourceFormat);\n    };\n\n    let parseAdaptiveSources = function (): void {\n      kalturaSources.filter((source) => !ProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n\n    let parseProgressiveSources = function (): void {\n      kalturaSources.filter((source) => ProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n\n    if (kalturaSources && kalturaSources.length > 0) {\n      parseAdaptiveSources();\n      parseProgressiveSources();\n    }\n\n    return sources;\n  }\n\n  /**\n   * Returns a parsed adaptive source\n   * @function _parseAdaptiveSource\n   * @param {KalturaPlaybackSource} kalturaSource - A kaltura source\n   * @returns {MediaSource} - The parsed adaptive kalturaSource\n   * @static\n   * @private\n   */\n  static _parseAdaptiveSource(kalturaSource: ?KalturaPlaybackSource): MediaSource {\n    let mediaSource: MediaSource = new MediaSource();\n    if (kalturaSource) {\n      let playUrl: string = kalturaSource.url;\n      let mediaFormat = SUPPORTED_FORMATS.get(kalturaSource.format);\n\n      if (mediaFormat) {\n        mediaSource.mimetype = mediaFormat.mimeType;\n      }\n\n      if (playUrl === \"\") {\n        logger.error(`failed to create play url from source, discarding source: (${kalturaSource.fileId}_${kalturaSource.deliveryProfileId}), ${kalturaSource.format}.`);\n        return mediaSource;\n      }\n\n      mediaSource.url = playUrl;\n      mediaSource.id = kalturaSource.fileId + \",\" + kalturaSource.format;\n      if (kalturaSource.hasDrmData()) {\n        let drmParams: Array<Drm> = [];\n        kalturaSource.drm.forEach((drm) => {\n          drmParams.push(new Drm(drm.licenseURL, DrmScheme[drm.scheme], drm.certificate));\n        });\n        mediaSource.drmData = drmParams;\n      }\n    }\n    return mediaSource;\n  }\n\n\n  /**\n   * @function _isProgressiveSource\n   * @param {KalturaPlaybackSource} source - The kaltura source\n   * @return {boolean} - Is progressive source\n   * @static\n   * @private\n   */\n  static _isProgressiveSource(source: KalturaPlaybackSource): boolean {\n    let sourceFormat = SUPPORTED_FORMATS.get(source.format);\n    return !!sourceFormat && sourceFormat.name === 'mp4';\n  }\n\n  static hasBlockActions(assetResponse: any): any {\n    let playbackContext = assetResponse.playBackContextResult;\n    for (var actionIndex = 0; actionIndex < playbackContext.actions.length; actionIndex ++) {\n      if(playbackContext.actions[actionIndex].type == \"BLOCK\"){\n        return playbackContext.actions[actionIndex];\n      }\n    }\n    return null;\n  }\n\n  static  hasErrorMessage (assetResponse: any): any {\n    let messages = assetResponse.playBackContextResult.messages;\n    for (var messagesIndex = 0; messagesIndex < messages.length; messagesIndex ++) {\n      if(messages[messagesIndex].code != \"OK\"){\n        return messages[messagesIndex];\n      }\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/provider-parser.js","//@flow\nimport Logger from '../../util/logger'\nimport Configuration from './config'\nimport {ProviderType, OttAssetType, OttPlaybackType} from '../enums'\nimport ProviderParser from './provider-parser'\nimport SessionLoader from './loaders/session-loader'\nimport AssetLoader from './loaders/asset-loader'\nimport DataLoaderManager from  '../data-loader-manager'\nimport MediaEntry from '../../entities/media-entry'\nimport MediaSources from '../../entities/media-sources'\n\n/**\n * @constant\n */\nconst logger = Logger.get(\"OttProvider\");\n\ntype playerConfig = {\n  id: string,\n  name: string,\n  session: Object,\n  sources: MediaSources,\n  duration: number,\n  dvr: boolean,\n  type: string,\n  metadata: Object,\n  plugins: Object\n};\n\n/**\n * Ott provider\n * @classdesc\n */\nexport class OttProvider {\n  /**\n   * @member - ks\n   * @type {string}\n   */\n  ks: string;\n  /**\n   * @member - group ID\n   * @type {number}\n   */\n  partnerID: number;\n  /**\n   * @member - pVersion the player version\n   * @type {string}\n   * @private\n   */\n  _pVersion: string;\n  /**\n   * @member - is anonymous\n   * @type {boolean}\n   * @private\n   */\n  _isAnonymous: boolean;\n  /**\n   * @member - uiConf ID\n   * @type {number}\n   * @private\n   */\n  _uiConfId: number;\n  /**\n   * @member - Data loader\n   * @type {DataLoaderManager}\n   * @private\n   */\n  _dataLoader: DataLoaderManager;\n\n  /**\n   * @constructor\n   * @param {string} pVersion The player version\n   * @param {number} partnerID The partner ID\n   * @param {string} [ks=\"\"]  The provider ks (has empty string as default value)\n   * @param {Object} [config]  The provider config(optional)\n   */\n  constructor(pVersion: string, partnerID: number, ks: string = \"\", config?: Object) {\n    this._pVersion = pVersion;\n    this.partnerID = partnerID;\n    this.ks = ks;\n    this._isAnonymous = !this.ks;\n    Configuration.set(config);\n  }\n\n  /**\n   * Returns player json configuration\n   * @function getConfig\n   * @param {Object} options The entry data\n   * @returns {Promise} The provider config object as promise\n   */\n  getConfig(options: {assetId: string, type: OttAssetType, contextType: OttPlaybackType, protocol: string, fileIds: string, uiConfId: number}): Promise<Object> {\n\n    this._dataLoader = new DataLoaderManager(this._pVersion, this.partnerID, this.ks, ProviderType.OTT);\n    return new Promise((resolve, reject) => {\n      if (this.validateParams(options)) {\n        let ks: string = this.ks;\n        if (!ks) {\n          ks = \"{1:result:ks}\";\n          this._dataLoader.add(SessionLoader, {partnerId: this.partnerID});\n        }\n\n        let playbackContext = {\n          mediaProtocol: options.protocol,\n          assetFileIds: options.fileIds,\n          context: options.contextType\n        }\n        this._dataLoader.add(AssetLoader, {\n          entryId: options.assetId,\n          ks: ks,\n          type: options.type,\n          playbackContext: playbackContext\n        });\n\n        this._dataLoader.fetchData()\n          .then(response => {\n              try {\n                resolve(this.parseDataFromResponse(response));\n              }\n              catch (err) {\n                reject({success: false, data: err});\n              }\n\n            },\n            err => {\n              reject(err);\n            });\n      }\n      else {\n        reject({success: false, data: \"Missing mandatory parameter\"});\n      }\n    });\n  }\n\n  /**\n   * Parses BE data to json configuration object\n   * @function parseDataFromResponse\n   * @param {Map<string,Function>} data The data to parse\n   * @returns {Object} The parsed config object\n   */\n  parseDataFromResponse(data: Map<string, Function>): Object {\n    logger.debug(\"Data parsing started\");\n    let config: playerConfig = {\n      id: \"\",\n      name: \"\",\n      session: {\n        partnerID: this.partnerID,\n        uiConfID: this._uiConfId,\n        ks: this.ks\n      },\n      sources: new MediaSources(),\n      duration: 0,\n      type: \"Unknown\",\n      dvr: false,\n      metadata: {},\n      plugins: {}\n    };\n    if (data != null) {\n      if (data.has(SessionLoader.id)) {\n        let sessionLoader = data.get(SessionLoader.id);\n        if (sessionLoader != null && sessionLoader.response != null) {\n          this.ks = sessionLoader.response;\n          config.session.ks = this.ks;\n        }\n      }\n      if (data.has(AssetLoader.id)) {\n        let assetLoader = data.get(AssetLoader.id);\n        if (assetLoader != null && assetLoader.response != null) {\n          let blockedAction = ProviderParser.hasBlockActions(assetLoader.response)\n          if (ProviderParser.hasBlockActions(assetLoader.response)) {\n            let errorMessage = ProviderParser.hasErrorMessage(assetLoader.response);\n            if(errorMessage){\n              logger.error(`Asset is blocked, error message: ` ,errorMessage);\n              throw errorMessage;\n            }\n            else{\n              logger.error(`Asset is blocked, action: ` ,blockedAction);\n              throw blockedAction;\n            }\n          }\n          let mediaEntry: MediaEntry = ProviderParser.getMediaEntry(assetLoader.response);\n          config.sources = mediaEntry.sources;\n          config.id = mediaEntry.id;\n          config.name = mediaEntry.name;\n          config.duration = mediaEntry.duration;\n          config.metadata = mediaEntry.metaData;\n        }\n      }\n    }\n    logger.debug(\"Data parsing finished\", config);\n    return (config);\n  }\n\n  /**\n   * Parameters validation function\n   * @param {Object} options The entry data\n   * @returns {boolean} Is valid params\n   */\n  validateParams(options: Object): boolean {\n    if(options){\n      return (!!options.assetId && !!options.type && !!options.contextType) || !!options.uiConfId;\n    }\n    else{\n      return false;\n    }\n  }\n\n}\n\nexport default OttProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/ott-provider.js","//@flow\nimport ServiceResult from '../../base-service-result'\n\n\n/**\n * OTT BE asset response\n * @classdesc\n */\nexport default class KalturaAsset extends ServiceResult {\n  /**\n   * @member - The asset ID\n   * @type {number}\n   */\n  id: number;\n  /**\n   * @member - The asset name\n   * @type {string}\n   */\n  name: string = \"\";\n  /**\n   * @member - The asset name description\n   * @type {string}\n   */\n  description: string = \"\";\n  /**\n   * @member - The asset tags\n   * @type {Array}\n   */\n  tags: Array = [];\n  /**\n   * @member - The asset metas\n   * @type {Array}\n   */\n  metas: Array = [];\n  /**\n   * @member - The asset images\n   * @type {Array}\n   */\n  pictures: Array = []\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n\n      this.id = response.id;\n      this.name = response.name;\n      this.description = response.description;\n      this.metas = this._formatTagsMetas(response.metas);\n      this.tags = this._formatTagsMetas(response.tags);\n      this.pictures = response.images;\n    }\n  }\n\n  _formatTagsMetas(objectToParse): Array{\n    let parsed = [];\n    var keys = Object.keys(objectToParse);\n    keys.forEach(function (key) {\n      if(objectToParse[key].objects){\n        let value = \"\";\n        objectToParse[key].objects.forEach(function (object) {\n          value += object.value + \"|\";\n        });\n        parsed.push({key: key, value: value});\n      }\n      else{\n        parsed.push({key: key, value: objectToParse[key].value});\n      }\n\n    });\n    return parsed;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-asset.js","//@flow\nimport ServiceResult from '../../base-service-result'\nimport KalturaAccessControlMessage from '../../shared-response-types/kaltura-access-control-message'\nimport KalturaPlaybackSource from './kaltura-playback-source'\nimport KalturaRuleAction from  '../../shared-response-types/kaltura-rule-action'\n\n\n/**\n * OTT BE playback context response\n * @classdesc\n */\nexport default class KalturaPlaybackContext extends ServiceResult {\n  /**\n   * @member - The playback sources\n   * @type {Array<KalturaPlaybackSource>}\n   */\n  sources: Array<KalturaPlaybackSource> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaRuleAction>}\n   */\n  actions: Array<KalturaRuleAction> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaAccessControlMessage>}\n   */\n  messages: Array<KalturaAccessControlMessage> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n\n      let messages = response.messages;\n      if (messages) {\n        messages.map(message => this.messages.push(new KalturaAccessControlMessage(message)));\n      }\n\n      let actions = response.actions;\n      if (actions) {\n        actions.map(action => this.actions.push(new KalturaRuleAction(action)));\n      }\n\n      let sources = response.sources;\n      if (sources) {\n        sources.map(source => this.sources.push(new KalturaPlaybackSource(source)));\n      }\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-playback-context.js","//@flow\n\nimport OttService from './ott-service'\nimport RequestBuilder from '../../request-builder'\nimport {OttAssetType, OttPlaybackType} from '../../enums'\n\nconst SERVICE_NAME: string = \"asset\";\n\n/**\n * ottuser service methods\n * @classdesc\n */\nexport default class OTTAssetService extends OttService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} baseUrl The service base URL\n   * @param {string} ks The partner ID\n   * @param {string} assetId The asset ID\n   * @param {OttAssetType} type The asset type (media/recording/epg)\n   * @param {Object} playbackContextOptions The playbackContextOptions { mediaProtocol: string, assetFileIds: string, context: OttPlaybackType}\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static getPlaybackContext(baseUrl: string, ks: string,\n                            assetId: string, type: OttAssetType,\n                            playbackContextOptions: { mediaProtocol: string, assetFileIds: string, context: OttPlaybackType}) {\n    let headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    let request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"getPlaybackContext\";\n    request.method = \"POST\";\n    request.url = request.getUrl(baseUrl);\n    let contextDataParams = {objectType: \"KalturaPlaybackContextOptions\"};\n    Object.assign(contextDataParams, playbackContextOptions);\n    request.params = {assetId: assetId, assetType: type, contextDataParams: contextDataParams, ks:ks};\n\n    return request;\n  }\n\n\n  static get(baseUrl: string, ks: string, assetId: string) {\n    let headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    let request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"get\";\n    request.method = \"POST\";\n    request.url = request.getUrl(baseUrl);\n    request.params = {id: assetId, assetReferenceType: \"media\", ks:ks};\n\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/ott-asset-service.js","//@flow\n\nimport OttService from './ott-service'\nimport RequestBuilder from '../../request-builder'\n\nconst SERVICE_NAME: string = \"ottuser\";\n\n/**\n * ottuser service methods\n * @classdesc\n */\nexport default class OTTUserService extends OttService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} baseUrl The service base URL\n   * @param {string} partnerId The partner ID\n   * @param {string} udid The udid\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static anonymousLogin(baseUrl: string, partnerId: number, udid?: string) {\n    let headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    let request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"anonymousLogin\";\n    request.method = \"POST\";\n    request.url = request.getUrl(baseUrl);\n\n    let params = {partnerId: partnerId};\n    if (udid) {\n      Object.assign(params, {udid: udid});\n    }\n    request.params = params;\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/ott-user-service.js"],"sourceRoot":""}