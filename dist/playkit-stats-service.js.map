{"version":3,"sources":["./providers/webpack/universalModuleDefinition","./providers/webpack/bootstrap","./providers/./util/error/error.js","./providers/./util/error/severity.js","./providers/./util/error/category.js","./providers/./util/error/code.js","./providers/../node_modules/js-logger/src/logger.js","./providers/./util/logger.js","./providers/./util/request-builder.js","./providers/./k-provider/ovp/config.js","./providers/./util/clone.js","./providers/./k-provider/common/base-service-result.js","./providers/./k-provider/common/multi-request-builder.js","./providers/./k-provider/ovp/services/ovp-service.js","./providers/./util/param.js","./providers/./k-provider/ovp/services/stats/stats-service.js","./providers/./k-provider/ovp/services/stats/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Error","severity","category","code","data","this","getLogLevel","LogLevel","OFF","_logger","error","RECOVERABLE","CRITICAL","NETWORK","SERVICE","PROVIDER","UNSUPPORTED_SCHEME","BAD_HTTP_STATUS","HTTP_ERROR","TIMEOUT","MALFORMED_DATA_URI","BAD_SERVER_RESPONSE","MULTIREQUEST_API_ERROR","API_RESPONSE_MISMATCH","ERROR","BLOCK_ACTION","MEDIA_STATUS_NOT_READY","MISSING_MANDATORY_PARAMS","MISSING_PLAY_SOURCE","METHOD_NOT_IMPLEMENTED","getLogger","global","logHandler","Logger","VERSION","contextualLoggersByNameMap","scope","func","apply","arguments","merge","args","target","length","defineLogLevel","TRACE","DEBUG","INFO","TIME","WARN","ContextualLogger","defaultContext","context","setLevel","filterLevel","log","info","newLevel","getLevel","enabledFor","lvl","trace","invoke","debug","warn","time","label","timeEnd","level","msgArgs","L","globalLogger","setHandler","createDefaultHandler","options","formatter","messages","unshift","timerStartTimeByLabelMap","invokeConsoleMethod","hdlr","Function","console","Array","slice","timerLabel","Date","getTime","useDefaults","defaultLevel","JsLogger","RequestBuilder","headers","Map","async","timeout","maxAttempts","serviceUrl","service","action","promise","Promise","resolve","reject","_requestPromise","url","Severity","Category","Code","_createXHR","request","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","responseHeaders","_getResponseHeaders","_createError","text","open","method","retryConfig","requestTime","performance","now","ontimeout","_handleError","statusText","onerror","onabort","forEach","setRequestHeader","send","params","getAllResponseHeaders","split","filter","header","toLowerCase","indexOf","_attemptCounter","assign","attempt","defaultConfig","cdnUrl","serviceParams","apiVersion","format","useApiCaptions","OVPConfiguration","clientConfig","clone","node","isArray","e","keys","ServiceResult","objectType","hasError","ServiceError","message","MultiRequestBuilder","requests","push","requestParams","serviceDef","stringify","err","FAILED_PARSING_REQUEST","doHttpRequest","then","multiRequestResult","MultiRequestResult","success","results","result","serviceResult","OVPService","playerVersion","ks","partnerId","config","ovpParams","clientTag","set","multiReq","getUrl","param","a","rbracket","obj","toString","add","k","v","encodeURIComponent","buildParams","prefix","len","test","String","join","replace","OVPStatsService","event","tag","NAME","__NAME__","__VERSION__"],"mappings":"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","file":"playkit-stats-service.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stats\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"services\"] = root[\"playkit\"][\"services\"] || {}, root[\"playkit\"][\"services\"][\"stats\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","//@flow\nimport getLogger, {getLogLevel, LogLevel} from '../logger';\nimport {Severity} from './severity';\nimport type {SeverityType} from './severity';\nimport {Code} from './code';\nimport type {CodeType} from './code';\nimport {Category} from './category';\nimport type {CategoryType} from './category';\n\nconst CLASS_NAME: string = 'Error';\n\n/**\n * @classdesc This is a description of the error class.\n */\nexport default class Error {\n  severity: number;\n  category: number;\n  code: number;\n  data: any;\n  /**\n   * @enum {number}\n   */\n  static Severity: SeverityType = Severity;\n  /**\n   * @enum {number}\n   */\n  static Category: CategoryType = Category;\n  /**\n   * @enum {number}\n   */\n  static Code: CodeType = Code;\n  static _logger: any = getLogger(CLASS_NAME);\n\n  /**\n   * @constructor\n   * @param {number} severity - error's severity\n   * @param {number} category - error's category.\n   * @param {number} code - error's code.\n   * @param {any} data - additional data for the error.\n   */\n  constructor(severity: number, category: number, code: number, data: any = {}) {\n    this.severity = severity;\n    this.category = category;\n    this.code = code;\n    this.data = data;\n    if (getLogLevel(CLASS_NAME) !== LogLevel.OFF) {\n      Error._logger.error(`Category:${category} | Code:${code} |`, data);\n    }\n  }\n}\n","//@flow\n\ntype SeverityType = {[severity: string]: number};\n\nconst Severity: SeverityType = {\n  /**\n   * An error occurred, but the Player is attempting to recover from the error.\n   *\n   * If the Player cannot ultimately recover, it still may not throw a CRITICAL\n   * error.  For example, retrying for a media segment will never result in\n   * a CRITICAL error (the Player will just retry forever).\n   */\n  RECOVERABLE: 1,\n  /**\n   * A critical error that the library cannot recover from.  These usually cause\n   * the Player to stop loading or updating.  A new manifest must be loaded\n   * to reset the library.\n   */\n  CRITICAL: 2\n};\n\nexport {Severity};\nexport type {SeverityType};\n","//@flow\ntype CategoryType = {[category: string]: number};\n\nconst Category: CategoryType = {\n  /** Errors from the network stack. */\n  NETWORK: 1,\n  SERVICE: 2,\n  PROVIDER: 3\n};\n\nexport {Category};\nexport type {CategoryType};\n","//@flow\n\ntype CodeType = {[code: string]: number};\n\nconst Code: CodeType = {\n  /**\n   * A network request was made using an unsupported URI scheme.\n   */\n  UNSUPPORTED_SCHEME: 1000,\n\n  /**\n   * An HTTP network request returned an HTTP status that indicated a failure.\n   */\n  BAD_HTTP_STATUS: 1001,\n\n  /**\n   * An HTTP network request failed with an error, but not from the server.\n   */\n  HTTP_ERROR: 1002,\n\n  /**\n   * A network request timed out.\n   */\n  TIMEOUT: 1003,\n\n  /**\n   * A network request was made with a malformed data URI.\n   */\n  MALFORMED_DATA_URI: 1004,\n\n  /**\n   * The server responsded with 2xx response, but it couldn't be parsed\n   */\n  BAD_SERVER_RESPONSE: 1005,\n\n  /**\n   * The server response had a valid structure but contained an error from the API\n   */\n  MULTIREQUEST_API_ERROR: 1006,\n\n  /**\n   * The server response had a valid structure and valid API result, but it did not match the request\n   */\n  API_RESPONSE_MISMATCH: 1007,\n\n  /**\n   * The server responded with an error\n   */\n  ERROR: 2000,\n\n  /**\n   * The server responded with a block action\n   */\n  BLOCK_ACTION: 2001,\n\n  /**\n   * The server responded with status import or pre convert\n   */\n  MEDIA_STATUS_NOT_READY: 2002,\n\n  /**\n   * The provider is missing mandatory parameter/s\n   */\n\n  MISSING_MANDATORY_PARAMS: 3000,\n\n  /**\n   * The server responded with empty sources objects (for HLS, Dash and progressive)\n   */\n  MISSING_PLAY_SOURCE: 3001,\n\n  /**\n   * The provider doesn't implement the called api\n   */\n  METHOD_NOT_IMPLEMENTED: 3002\n};\n\nexport {Code};\nexport type {CodeType};\n","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.6.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.TRACE = defineLogLevel(1, 'TRACE');\r\n\tLogger.DEBUG = defineLogLevel(2, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(3, 'INFO');\r\n\tLogger.TIME = defineLogLevel(4, 'TIME');\r\n\tLogger.WARN = defineLogLevel(5, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\ttrace: function () {\r\n\t\t\tthis.invoke(Logger.TRACE, arguments);\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.trace = bind(globalLogger, globalLogger.trace);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t} else if (context.level === Logger.TRACE && console.trace) {\r\n\t\t\t\t\thdlr = console.trace;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n","//@flow\nimport * as JsLogger from 'js-logger';\n\nexport type LogLevelObject = {value: number, name: string};\nexport type LogLevelType = {[level: string]: LogLevelObject};\n\nconst LogLevel: LogLevelType = {\n  DEBUG: JsLogger.DEBUG,\n  INFO: JsLogger.INFO,\n  TIME: JsLogger.TIME,\n  WARN: JsLogger.WARN,\n  ERROR: JsLogger.ERROR,\n  OFF: JsLogger.OFF\n};\n\nJsLogger.useDefaults({defaultLevel: JsLogger.ERROR});\n\n/**\n * sets the logger handler\n * @param {LogHandlerType} handler - the log level\n * @returns {void}\n */\nfunction setLogHandler(handler: LogHandlerType): void {\n  JsLogger.setHandler((messages, context) => handler(messages, context));\n}\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  if (!name) {\n    return JsLogger;\n  }\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name?: string): LogLevelObject {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: LogLevelObject, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {LogLevel, getLogLevel, setLogLevel, setLogHandler};\n","//@flow\nimport Error from './error/error';\n\nconst KALTURA_HEADER_PREFIX: string = 'x-';\n\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @memberof - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @memberof - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @memberof - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @memberof - Service tag\n   * @type {string}\n   */\n  tag: string;\n  /**\n   * @memberof - the response headers of the arra\n   * @type {Array<string>}\n   */\n  responseHeaders: Array<string>;\n  /**\n   * @description network retry configuration\n   * @memberof RequestBuilder\n   * @type {ProviderNetworkRetryParameters}\n   */\n  retryConfig: ProviderNetworkRetryParameters = {\n    async: true,\n    timeout: 0,\n    maxAttempts: 4\n  };\n\n  /**\n   * @description number of xhr attempts for the same multi - request.\n   * @memberof RequestBuilder\n   * @type {number}\n   * @private\n   */\n  _attemptCounter: number = 1;\n\n  /**\n   * @description hold the promise result of the XHR request(s) - if all tries fails, it rejects with the error.\n   * @memberof RequestBuilder\n   * @type {Object}\n   * @private\n   */\n  _requestPromise: Object;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    const promise = new Promise((resolve, reject) => {\n      this._requestPromise = {\n        resolve,\n        reject\n      };\n    });\n    if (!this.url) {\n      this._requestPromise.reject(\n        new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MALFORMED_DATA_URI, {\n          url: this.url\n        })\n      );\n    }\n    this._createXHR();\n    return promise;\n  }\n\n  _createXHR(): void {\n    let request = new XMLHttpRequest();\n    request.onreadystatechange = () => {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          try {\n            const response = JSON.parse(request.responseText);\n            this.responseHeaders = this._getResponseHeaders(request);\n            // the promise returns the response for backwards compatibility\n            return this._requestPromise.resolve(response);\n          } catch (error) {\n            this._requestPromise.reject(\n              this._createError(request, Error.Code.BAD_SERVER_RESPONSE, {\n                text: request.responseText\n              })\n            );\n          }\n        }\n      }\n    };\n    request.open(this.method, this.url, this.retryConfig.async);\n    if (this.retryConfig.async && this.retryConfig.timeout) {\n      request.timeout = this.retryConfig.timeout;\n    }\n    const requestTime = performance.now();\n    request.ontimeout = () => {\n      this._handleError(request, Error.Code.TIMEOUT, {\n        timeout: (performance.now() - requestTime) / 1000,\n        statusText: request.statusText\n      });\n    };\n    request.onerror = request.onabort = () => {\n      this._handleError(request, Error.Code.HTTP_ERROR, {\n        text: request.responseText,\n        statusText: request.statusText\n      });\n    };\n    this.headers.forEach((value, key) => {\n      request.setRequestHeader(key, value);\n    });\n    request.send(this.params);\n  }\n\n  _getResponseHeaders(request: XMLHttpRequest): Array<string> {\n    return request\n      .getAllResponseHeaders()\n      .split('\\n')\n      .filter(header => header.toLowerCase().indexOf(KALTURA_HEADER_PREFIX) === 0);\n  }\n\n  _handleError(request: XMLHttpRequest, code: number, data: Object): Promise<*> | void {\n    const error = this._createError(request, code, data);\n    request.onreadystatechange = function () {};\n    request.onerror = function () {};\n    request.ontimeout = function () {};\n    request.onabort = function () {};\n    if (this.retryConfig.maxAttempts && this._attemptCounter < this.retryConfig.maxAttempts) {\n      this._attemptCounter++;\n      this._createXHR();\n    } else {\n      return this._requestPromise.reject(error);\n    }\n  }\n\n  _createError(request: XMLHttpRequest, code: number, data: Object): Error {\n    Object.assign(data, {\n      url: this.url,\n      headers: this._getResponseHeaders(request),\n      attempt: this._attemptCounter\n    });\n    return new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, code, data);\n  }\n}\n","//@flow\nimport {clone} from '../../util/clone';\n\nconst defaultConfig: Object = {\n  serviceUrl: 'https://cdnapisec.kaltura.com/api_v3',\n  cdnUrl: 'https://cdnapisec.kaltura.com',\n  serviceParams: {\n    apiVersion: '3.3.0',\n    format: 1\n  },\n  useApiCaptions: true\n};\n\nexport default class OVPConfiguration {\n  static set(clientConfig?: ProviderEnvConfigObject) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OVPConfiguration};\n","const clone = data => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if ((typeof e === 'object' && e !== {}) || (Array.isArray(e) && e.length > 0)) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === 'object') {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach(key => {\n      if ((typeof node[key] === 'object' && node[key] !== {}) || (Array.isArray(node[key]) && node[key].length > 0)) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else if (response.error && response.error.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.error.code, response.error.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n","//@flow\nimport RequestBuilder from '../../util/request-builder';\nimport getLogger from '../../util/logger';\nimport ServiceResult from './base-service-result';\nimport Error from '../../util/error/error';\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger('MultiRequestBuilder');\n  /**\n   * @memberof - MultiRequestBuilder\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(): Promise<Object> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.params = JSON.stringify(this.params);\n      } catch (err) {\n        MultiRequestBuilder._logger.error(`${err.message}`);\n        reject(\n          new Error(Error.Severity.CRITICAL, Error.Category.PROVIDER, Error.Code.FAILED_PARSING_REQUEST, {\n            error: err,\n            params: this.params\n          })\n        );\n      }\n      this.doHttpRequest().then(\n        data => {\n          const multiRequestResult = new MultiRequestResult(data);\n          if (multiRequestResult.success) {\n            resolve({\n              headers: this.responseHeaders,\n              response: multiRequestResult\n            });\n          } else {\n            reject(\n              new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MULTIREQUEST_API_ERROR, {\n                url: this.url,\n                headers: this.responseHeaders,\n                results: multiRequestResult.results\n              })\n            );\n          }\n        },\n        err => {\n          reject(err);\n        }\n      );\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger('MultiRequestResult');\n  /**\n   * @memberof MultiRequestResult\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @memberof MultiRequestResult\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n  /**\n   * @constructor\n   * @param {Object} response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    const responseArr = response.result ? response.result : response;\n    responseArr.forEach(result => {\n      const serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        MultiRequestResult._logger.error(\n          `Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`\n        );\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder';\nimport OVPConfiguration from '../config';\n\nconst SERVICE_NAME: string = 'multirequest';\n\nexport default class OVPService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ovp params\n   * @function getMultiRequest\n   * @param {string} playerVersion The player version\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(playerVersion: string, ks: string, partnerId?: number): MultiRequestBuilder {\n    const config = OVPConfiguration.get();\n    const ovpParams = config.serviceParams;\n    Object.assign(ovpParams, {ks: ks, clientTag: 'html5:v' + playerVersion});\n    if (partnerId) {\n      Object.assign(ovpParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set('Content-Type', 'application/json');\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = 'POST';\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ovpParams;\n    return multiReq;\n  }\n}\n","const param = a => {\n  let s = [],\n    rbracket = /\\[\\]$/,\n    isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    },\n    add = function (k, v) {\n      v = typeof v === 'function' ? v() : v === null ? '' : v === undefined ? '' : v;\n      s[s.length] = encodeURIComponent(k) + '=' + encodeURIComponent(v);\n    },\n    buildParams = function (prefix, obj) {\n      let i, len, key;\n\n      if (prefix) {\n        if (isArray(obj)) {\n          for (i = 0, len = obj.length; i < len; i++) {\n            if (rbracket.test(prefix)) {\n              add(prefix, obj[i]);\n            } else {\n              buildParams(prefix + ':' + (typeof obj[i] === 'object' ? i : ''), obj[i]);\n            }\n          }\n        } else if (obj && String(obj) === '[object Object]') {\n          for (key in obj) {\n            buildParams(prefix + ':' + key, obj[key]);\n          }\n        } else {\n          add(prefix, obj);\n        }\n      } else if (isArray(obj)) {\n        for (i = 0, len = obj.length; i < len; i++) {\n          add(obj[i].name, obj[i].value);\n        }\n      } else {\n        for (key in obj) {\n          buildParams(key, obj[key]);\n        }\n      }\n      return s;\n    };\n\n  return buildParams('', a).join('&').replace(/%20/g, '+');\n};\n\nexport {param};\n","//@flow\nimport OVPService from '../ovp-service';\nimport RequestBuilder from '../../../../util/request-builder';\nimport OVPConfiguration from '../../config';\nimport {param} from '../../../../util/param';\n\nconst SERVICE_NAME: string = 'stats';\n\nexport default class OVPStatsService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for stats.collect\n   * @function collect\n   * @param {string} serviceUrl - The service base url\n   * @param {string} ks - The ks\n   * @param {string} playerVersion - The player version\n   * @param {Object} event - The event data\n   * @returns {RequestBuilder} - The request builder\n   * @static\n   */\n  static collect(serviceUrl: string, ks: string, playerVersion: string, event: Object): RequestBuilder {\n    const ovpParams = OVPConfiguration.get();\n    const serviceParams = {};\n    Object.assign(serviceParams, ovpParams.serviceParams, {ks: ks, clientTag: 'html5:v' + playerVersion}, event);\n    const request = new RequestBuilder();\n    request.service = SERVICE_NAME;\n    request.action = 'collect';\n    request.method = 'GET';\n    request.tag = 'stats-collect';\n    request.params = serviceParams;\n    request.url = serviceUrl + '?service=' + request.service + '&action=' + request.action + '&' + param(request.params);\n    return request;\n  }\n}\n","// @flow\nimport RequestBuilder from '../../../../util/request-builder';\nimport OVPConfiguration from '../../config';\nimport OVPStatsService from './stats-service';\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-stats-service';\nconst VERSION = __VERSION__;\n\nexport {OVPStatsService, OVPConfiguration, RequestBuilder, NAME, VERSION};\n"],"sourceRoot":""}