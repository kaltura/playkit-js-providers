{"version":3,"sources":["webpack:///providers/webpack/universalModuleDefinition","webpack:///providers/webpack/bootstrap 13290f5755b34f6c7b6e","webpack:///providers/./k-provider/request-builder.js","webpack:///providers/./k-provider/ovp/config.js","webpack:///providers/./k-provider/enums.js","webpack:///providers/./k-provider/ovp/services/ovp-service.js","webpack:///providers/./k-provider/base-service-result.js","webpack:///providers/./util/logger.js","webpack:///providers/./k-provider/multi-request-builder.js","webpack:///providers/./entities/media-sources.js","webpack:///providers/../~/js-logger/src/logger.js","webpack:///providers/./entities/media-entry.js","webpack:///providers/./entities/drm.js","webpack:///providers/./entities/media-format.js","webpack:///providers/./entities/media-source.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-flavor-asset.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-media-entry.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-metadata-list-response.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-playback-context.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-playback-source.js","webpack:///providers/./k-provider/ovp/loaders/data-loader-manager.js","webpack:///providers/./k-provider/ovp/loaders/media-entry-loader.js","webpack:///providers/./k-provider/ovp/loaders/session-loader.js","webpack:///providers/./k-provider/ovp/loaders/ui-config-loader.js","webpack:///providers/./k-provider/ovp/provider-parser.js","webpack:///providers/./k-provider/ovp/ovp-provider.js","webpack:///providers/./k-provider/ovp/play-source-url-builder.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-access-control-message.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-base-entry-list-response.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-drm-playback-plugin-data.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-metadata.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-rule-action.js","webpack:///providers/./k-provider/ovp/response-types/kaltura-ui-conf-response.js","webpack:///providers/./k-provider/ovp/services/base-entry-service.js","webpack:///providers/./k-provider/ovp/services/meta-data-service.js","webpack:///providers/./k-provider/ovp/services/session-service.js","webpack:///providers/./k-provider/ovp/services/ui-conf-service.js","webpack:///providers/./k-provider/xml-parser.js","webpack:///providers/../~/enumify/lib/enumify.js"],"names":["RequestBuilder","headers","Map","set","baseUrl","Error","url","service","action","request","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","status","jsonResponse","JSON","parse","responseText","code","message","open","method","getUrl","forEach","value","key","setRequestHeader","send","params","defaultConfig","beUrl","serviceParams","clientTag","apiVersion","format","Configuration","clientConfig","Object","assign","Scheme","PLAYREADY_CENC","WIDEVINE_CENC","FAIRPLAY","PLAYREADY","WIDEVINE","KalturaRuleActionType","DRM_POLICY","BLOCK","PREVIEW","LIMIT_FLAVORS","ADD_TO_STORAGE","LIMIT_DELIVERY_PROFILES","SERVE_FROM_REMOTE_SERVER","REQUEST_HOST_REGEX","LIMIT_THUMBNAIL_CAPTURE","Status","ERROR","QUEUED","CONVERTING","READY","DELETED","NOT_APPLICABLE","TEMP","WAIT_FOR_CONVERT","IMPORTING","VALIDATING","EXPORTING","MetadataObjectType","AD_CUE_POINT","ANNOTATION","CODE_CUE_POINT","THUMB_CUE_POINT","ENTRY","CATEGORY","USER","PARTNER","DYNAMIC_OBJECT","MetadataStatus","VALID","INVALID","EntryStatus","ERROR_IMPORTING","ERROR_CONVERTING","SCAN_FAILURE","IMPORT","INFECTED","PRECONVERT","PENDING","MODERATE","BLOCKED","NO_CONTENT","EntryModerationStatus","PENDING_MODERATION","APPROVED","REJECTED","FLAGGED_FOR_REVIEW","AUTO_APPROVED","EntryType","AUTOMATIC","EXTERNAL_MEDIA","MEDIA_CLIP","MIX","PLAYLIST","DATA","LIVE_STREAM","LIVE_CHANNEL","DOCUMENT","MediaType","VIDEO","IMAGE","AUDIO","LIVE_STREAM_FLASH","LIVE_STREAM_WINDOWS_MEDIA","LIVE_STREAM_REAL_MEDIA","LIVE_STREAM_QUICKTIME","MediaEntryType","Vod","Live","Image","Audio","Unknown","UIConfType","PLAYER","CONTRIBUTION_WIZARD","SIMPLE_EDITOR","ADVANCED_EDITOR","APP_STUDIO","KRECORD","PLAYER_V3","KMC_ACCOUNT","KMC_ANALYTICS","KMC_CONTENT","KMC_DASHBOARD","KMC_LOGIN","PLAYER_SL","CLIENTSIDE_ENCODER","KMC_GENERAL","KMC_ROLES_AND_PERMISSIONS","CLIPPER","KSR","KUPLOAD","WEBCASTING","UIConfCreationMode","WIZARD","ADVANCED","config","get","SERVICE_NAME","OvpService","ks","partnerId","ovpParams","multiReq","ServiceResult","response","hasError","objectType","error","ServiceError","data","JsLogger","LoggerFactory","options","useDefaults","name","Logger","defaultLevel","DEBUG","LOG_LEVEL","INFO","TIME","WARN","OFF","logger","MultiRequestBuilder","requests","push","requestParams","serviceDef","length","stringify","err","doHttpRequest","then","MultiRequestResult","errorText","results","success","result","serviceResult","MediaSources","progressive","dash","hls","source","mediaFormat","MediaEntry","metaData","type","Drm","licenseUrl","scheme","MediaFormat","initEnum","mimeType","pathExt","wvm","mp4","mp3","MediaSource","KalturaFlavorAsset","id","flavorParamsId","fileExt","bitrate","width","height","frameRate","isOriginal","isWeb","containerFormat","videoCodecId","language","label","KalturaMediaEntry","entry","dataUrl","entryType","mediaType","flavorParamsIds","duration","KalturaMetadataListResponse","responseObj","totalCount","metas","objects","map","meta","KalturaPlaybackContext","sources","actions","messages","flavorAssets","flavor","KalturaPlaybackSource","drm","deliveryProfileId","protocols","flavorIds","protocol","returnValue","protocolsArr","split","p","DataLoaderManager","partnerID","_loaders","_multiRequest","getMultirequest","loader","execution_loader","isValid","startIndex","add","executionLoaderResponseMap","Array","from","val","index","_loadersResponseMap","execute","_multiResponse","preparedData","prepareData","loaderDataIndexes","slice","MediaEntryLoader","_response","buildRequests","_entryId","entryId","list","getPlaybackContext","_requests","mediaEntryResponse","entries","playBackContextResult","metadataListResult","SessionLoader","_partnerId","anonymousSession","UiConfigLoader","_uiConfId","uiConfId","uiConf","plugins","SUPPORTED_FORMATS","ProviderParser","mediaEntry","playbackContext","metadataList","kalturaSources","parsedSource","parseSource","metadata","parseMetaData","playUrl","mediaSource","hasFlavorIds","splittedUrl","baseProtocol","substring","extension","flavorIdsArr","flavors","filter","indexOf","mimetype","build","getProtocol","hasDrmData","drmParams","licenseURL","drmData","metaXml","domParser","DOMParser","xml","replace","parseFromString","metasObj","xmlToJson","metaKeys","keys","OvpProvider","_isAnonymous","_dataLoader","validateParams","fetchData","parseDataFromResponse","debug","session","uiConfID","has","sessionLoader","uiConfLoader","pluginsJson","mediaLoader","getMediaEntry","PlaySourceUrlBuilder","urlParams","endsWith","string","searchString","KalturaAccessControlMessage","KalturaBaseEntryListResponse","KalturaDrmPlaybackPluginData","KalturaMetadata","metadataProfileId","metadataProfileVersion","metadataObjectType","objectId","version","created","Date","setUTCSeconds","createdAt","updated","updatedAt","KalturaRuleAction","KalturaUiConfResponse","description","objTypeAsString","htmlParams","swfUrl","confFilePath","confFile","confFileFeatures","confVars","useCdn","tags","swfUrlVersion","html5Url","partnerTags","objType","creationMode","BaseEntryService","tag","contextDataParams","flavorTags","getEntryListReqParams","filterParams","redirectFromEntryId","responseProfileParams","fields","responseProfile","MetaDataService","objectIdEqual","metadataObjectTypeEqual","SessionService","widgetId","UiConfService","XmlParser","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","i","childNodes","old"],"mappings":"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,KAAL;AACE,iBAAKD,GAAL,CAASjB,IAAT,CAAckB,MAAd;AACA;AACF;AACE;AAXJ;AAaD;AACF;;;;;;kBAnDkBJ,Y;;;;;;ACRrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;;AAEA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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;AACD;;AAEA,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,mEAAmE,gEAAgE;AACnI;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,kFAAkF,mEAAmE;AACrJ;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,mEAAmE;AAC/J;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,C","file":"ovpProvider.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PlaykitJsProviders\"] = factory();\n\telse\n\t\troot[\"PlaykitJsProviders\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 13290f5755b34f6c7b6e","//@flow\n\n/**\n * Request builder\n * @classdesc\n */\nexport default class RequestBuilder {\n\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @member - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @member - Service base url\n   * @type {Map<string, string>}\n   */\n  baseUrl: string;\n  /**\n   * @member - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @member - Service tag\n   * @type {string}\n   */\n  tag: string;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n    this.headers.set(\"Content-Type\", \"application/json\");\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @returns {string} The service URL\n   */\n  getUrl(): string {\n    if (!this.baseUrl) {\n      throw new Error(\"baseUrl is mandatory for request builder\");\n    }\n    let url = this.baseUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n    return url;\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    let request = new XMLHttpRequest();\n    return new Promise((resolve, reject) => {\n      request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n          if (request.status === 200) {\n            let jsonResponse = JSON.parse(request.responseText);\n            if (jsonResponse && typeof(jsonResponse) === 'object' && jsonResponse.code && jsonResponse.message)\n              reject(jsonResponse);\n            else\n              resolve(jsonResponse);\n          } else {\n            reject(request.responseText);\n          }\n        }\n      };\n      request.open(this.method, this.getUrl());\n      this.headers.forEach((value, key) => {\n        request.setRequestHeader(key, value);\n      });\n      request.send(this.params);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/request-builder.js","//@flow\n\nconst defaultConfig: Object = {\n  beUrl: \"http://www.kaltura.com/api_v3\",\n  baseUrl: \"https://cdnapisec.kaltura.com\",\n  serviceParams: {\n    clientTag: \"playkit-js\",\n    apiVersion: '3.3.0',\n    format: 1\n  }\n};\n\nexport default class Configuration {\n\n  static set(clientConfig?: Object) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return defaultConfig;\n  }\n}\n\nexport {Configuration};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/config.js","//@flow\nexport class Scheme {\n  static PLAYREADY_CENC: string = \"drm.PLAYREADY_CENC\";\n  static WIDEVINE_CENC: string = \"drm.WIDEVINE_CENC\";\n  static FAIRPLAY: string = \"fairplay.FAIRPLAY\";\n  static PLAYREADY: string = \"playReady.PLAYREADY\";\n  static WIDEVINE: string = \"widevine.WIDEVINE\";\n}\n\nexport class KalturaRuleActionType {\n  static DRM_POLICY: string = \"drm.DRM_POLICY\";\n  static BLOCK: number = 1;\n  static PREVIEW: number = 2;\n  static LIMIT_FLAVORS: number = 3;\n  static ADD_TO_STORAGE: number = 4;\n  static LIMIT_DELIVERY_PROFILES: number = 5;\n  static SERVE_FROM_REMOTE_SERVER: number = 6;\n  static REQUEST_HOST_REGEX: number = 7;\n  static LIMIT_THUMBNAIL_CAPTURE: number = 8;\n}\n\nexport class Status {\n  static ERROR: number = -1;\n  static QUEUED: number = 0;\n  static CONVERTING: number = 1;\n  static READY: number = 2;\n  static DELETED: number = 3;\n  static NOT_APPLICABLE: number = 4;\n  static TEMP: number = 5;\n  static WAIT_FOR_CONVERT: number = 6;\n  static IMPORTING: number = 7;\n  static VALIDATING: number = 8;\n  static EXPORTING: number = 9;\n}\n\nexport class MetadataObjectType {\n  static AD_CUE_POINT: string = \"adCuePointMetadata.AdCuePoint\";\n  static ANNOTATION: string = \"annotationMetadata.Annotation\";\n  static CODE_CUE_POINT: string = \"codeCuePointMetadata.CodeCuePoint\";\n  static THUMB_CUE_POINT: string = \"thumbCuePointMetadata.thumbCuePoint\";\n  static ENTRY: number = 1;\n  static CATEGORY: number = 2;\n  static USER: number = 3;\n  static PARTNER: number = 4;\n  static DYNAMIC_OBJECT: number = 5;\n}\n\nexport class MetadataStatus {\n  static VALID: number = 1;\n  static INVALID: number = 2;\n  static DELETED: number = 3;\n}\n\nexport class EntryStatus {\n  static ERROR_IMPORTING: number = -2;\n  static ERROR_CONVERTING: number = -1;\n  static SCAN_FAILURE: string = \"virusScan.ScanFailure\";\n  static IMPORT: number = 0;\n  static INFECTED: string = \"virusScan.Infected\";\n  static PRECONVERT: number = 1;\n  static READY: number = 2;\n  static DELETED: number = 3;\n  static PENDING: number = 4;\n  static MODERATE: number = 5;\n  static BLOCKED: number = 6;\n  static NO_CONTENT: number = 7\n}\n\nexport class EntryModerationStatus {\n  static PENDING_MODERATION: number = 1;\n  static APPROVED: number = 2;\n  static REJECTED: number = 3;\n  static FLAGGED_FOR_REVIEW: number = 4;\n  static MODERATE: number = 5;\n  static AUTO_APPROVED: number = 6\n}\n\nexport class EntryType {\n  static AUTOMATIC: Object = {value: -1};\n  static EXTERNAL_MEDIA: Object = {value: \"externalMedia.externalMedia\"};\n  static MEDIA_CLIP: Object = {value: 1};\n  static MIX: Object = {value: 2};\n  static PLAYLIST: Object = {value: 5};\n  static DATA: Object = {value: 6};\n  static LIVE_STREAM: Object = {value: 7};\n  static LIVE_CHANNEL: Object = {value: 8};\n  static DOCUMENT: Object = {value: 10};\n}\n\nexport class MediaType {\n  static VIDEO: Object = {value: 1};\n  static IMAGE: Object = {value: 2};\n  static AUDIO: Object = {value: 5};\n  static LIVE_STREAM_FLASH: Object = {value: 201};\n  static LIVE_STREAM_WINDOWS_MEDIA: Object = {value: 202};\n  static LIVE_STREAM_REAL_MEDIA: Object = {value: 203};\n  static LIVE_STREAM_QUICKTIME: Object = {value: 204};\n}\n\nexport class MediaEntryType {\n  static Vod: string = 'Vod';\n  static Live: string = 'Live';\n  static Image: string = 'Image';\n  static Audio: string = 'Audio';\n  static Unknown: string = 'Unknown'\n}\n\nexport class UIConfType {\n  static PLAYER: number = 1;\n  static CONTRIBUTION_WIZARD: number = 2;\n  static SIMPLE_EDITOR: number = 3;\n  static ADVANCED_EDITOR: number = 4;\n  static PLAYLIST: number = 5;\n  static APP_STUDIO: number = 6;\n  static KRECORD: number = 7;\n  static PLAYER_V3: number = 8;\n  static KMC_ACCOUNT: number = 9;\n  static KMC_ANALYTICS: number = 10;\n  static KMC_CONTENT: number = 11;\n  static KMC_DASHBOARD: number = 12;\n  static KMC_LOGIN: number = 13;\n  static PLAYER_SL: number = 14;\n  static CLIENTSIDE_ENCODER: number = 15;\n  static KMC_GENERAL: number = 16;\n  static KMC_ROLES_AND_PERMISSIONS: number = 17;\n  static CLIPPER: number = 18;\n  static KSR: number = 19;\n  static KUPLOAD: number = 20;\n  static WEBCASTING: number = 21\n}\n\nexport class UIConfCreationMode {\n  static WIZARD: number = 2;\n  static ADVANCED: number = 3\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/enums.js","//@flow\nimport MultiRequestBuilder from '../../multi-request-builder'\nimport Configuration from '../config'\n\nconst config = Configuration.get();\nconst SERVICE_NAME: string = \"multirequest\";\n\n/**\n * Base for all ovp services\n * @classdesc\n */\nexport default class OvpService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ovp params\n   * @function getMultirequest\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultirequest(ks: string, partnerId?: number): MultiRequestBuilder {\n    let ovpParams = config.serviceParams;\n    Object.assign(ovpParams, {ks: ks});\n    if (partnerId) {\n      Object.assign(ovpParams, {partnerId: partnerId});\n    }\n    let multiReq = new MultiRequestBuilder();\n    multiReq.method = \"POST\";\n    multiReq.service = SERVICE_NAME;\n    multiReq.baseUrl = config.beUrl;\n    multiReq.params = ovpParams;\n    return multiReq;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/ovp-service.js","//@flow\n\n/**\n * Base service result\n * @classdesc\n */\nexport default class ServiceResult {\n\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    }\n    else {\n      this.data = response;\n    }\n  }\n}\n\n/**\n * Service error\n * @classdesc\n */\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/base-service-result.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nclass LoggerFactory {\n  constructor(options?: Object) {\n    JsLogger.useDefaults(options || {});\n  }\n\n  get(name?: string) {\n    if (!name) {\n      return JsLogger;\n    }\n    return JsLogger.get(name);\n  }\n}\n\nlet Logger = new LoggerFactory({defaultLevel: JsLogger.DEBUG});\nconst LOG_LEVEL: {[level: string]: Object} = {\n  \"DEBUG\": JsLogger.DEBUG,\n  \"INFO\": JsLogger.INFO,\n  \"TIME\": JsLogger.TIME,\n  \"WARN\": JsLogger.WARN,\n  \"ERROR\": JsLogger.ERROR,\n  \"OFF\": JsLogger.OFF\n};\n\nexport default Logger;\nexport {LOG_LEVEL};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./util/logger.js","//@flow\nimport RequestBuilder from './request-builder'\nimport ServiceResult from './base-service-result'\nimport Logger from \"../util/logger\";\n/**\n * @constant\n */\nconst logger = Logger.get(\"OvpProvider\");\n\n/**\n * Multi Request builder\n * @classdesc\n */\nexport default class MultiRequestBuilder extends RequestBuilder {\n\n  /**\n   * @member - Array of requests\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    super();\n  }\n\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    let requestParams = {};\n    let serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promisie\n   */\n  execute(): Promise<Object> {\n    try {\n      this.params = JSON.stringify(this.params);\n    }\n    catch (err) {\n      logger.error(`${err.message}`);\n    }\n    return new Promise((resolve, reject) => {\n      this.doHttpRequest().then(data => {\n          resolve(new MultiRequestResult(data));\n        },\n        err => {\n          let errorText: string = `Error on multiRequest execution, error <${err}>.`;\n          reject(errorText);\n\n        });\n    });\n  }\n\n}\n\n/**\n * Multi Request result object\n * @classdesc\n */\nexport class MultiRequestResult {\n\n  /**\n   * @member - Is success\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @member - Multi request response data\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n\n  /**\n   * @constructor\n   * @param {Object}  response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    response.forEach((result) => {\n      let serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        logger.error(`Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`);\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/multi-request-builder.js","// @flow\nimport MediaSource from './media-source'\nimport {MediaFormat} from './media-format'\n\n/**\n * Container for the media sources aggregated by stream format.\n * @classdesc\n */\nexport default class MediaSources {\n  /**\n   * Progressive download media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  progressive: Array<MediaSource>;\n  /**\n   * Dash media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  dash: Array<MediaSource>;\n  /**\n   * Hls media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  hls: Array<MediaSource>;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.progressive = [];\n    this.dash = [];\n    this.hls = [];\n  }\n\n  /**\n   * Maps the source to one of the containers according to his media format.\n   * @param {MediaSource} source - The source to add to one of the containers.\n   * @param {MediaFormat} mediaFormat - The media format of the source.\n   * @returns {void}\n   */\n  map(source: MediaSource, mediaFormat: ?MediaFormat) {\n    if (mediaFormat) {\n      switch (mediaFormat.name) {\n        case 'mp4':\n          this.progressive.push(source);\n          break;\n        case 'dash':\n          this.dash.push(source);\n          break;\n        case 'hls':\n          this.hls.push(source);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-sources.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.3.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 8\n// module chunks = 0 1","//@flow\nimport {MediaEntryType} from '../k-provider/enums'\nimport MediaSources from './media-sources'\n\n/**\n * Media entry\n * @classdesc\n */\nexport default class MediaEntry {\n\n  /**\n   * @member - entry ID\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - entry sources\n   * @type {MediaSources}\n   */\n  sources: MediaSources;\n  /**\n   * @member - entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - entry type\n   * @type {MediaEntryType}\n   */\n  type: MediaEntryType;\n  /**\n   * @member - entry metadata\n   * @type {Map<string,string>}\n   */\n  metaData: Map<string, string>;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.metaData = new Map();\n    this.type = MediaEntryType.Unknown;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-entry.js","//@flow\n\nimport {Scheme} from '../k-provider/enums';\n\n/**\n * Drm data\n * @classdesc\n */\nexport default class Drm {\n\n  /**\n   * @member - license URL\n   * @type {string}\n   */\n  licenseUrl: string;\n  /**\n   * @member - drm scheme\n   * @type {Scheme}\n   */\n  scheme: Scheme;\n\n  /**\n   * @constructor\n   * @param {string} licenseUrl - the license URL\n   * @param {Scheme} scheme - the drm scheme\n   */\n  constructor(licenseUrl: string, scheme: Scheme) {\n    this.licenseUrl = licenseUrl;\n    this.scheme = scheme;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/drm.js","//@flow\nimport {Enum} from 'enumify';\n\nexport class MediaFormat extends Enum {\n}\nMediaFormat.initEnum({\n  dash: {\n    get mimeType() {\n      return \"application/dash+xml\";\n    },\n    get pathExt() {\n      return \"mpd\";\n    }\n  },\n  hls: {\n    get mimeType() {\n      return \"application/x-mpegURL\";\n    },\n    get pathExt() {\n      return \"m3u8\";\n    }\n  },\n  wvm: {\n    get mimeType() {\n      return \"video/wvm\";\n    },\n    get pathExt() {\n      return \"wvm\";\n    }\n  },\n  mp4: {\n    get mimeType() {\n      return \"video/mp4\";\n    },\n    get pathExt() {\n      return \"mp4\";\n    }\n  },\n  mp3: {\n    get mimeType() {\n      return \"audio/mpeg\";\n    },\n    get pathExt() {\n      return \"mp3\";\n    }\n  }\n});\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-format.js","//@flow\nimport Drm from '../entities/drm'\n\n/**\n * Media source\n * @classdesc\n */\nexport default class MediaSource {\n  /**\n   * @member - media source ID\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - media source URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - media source mimetype\n   * @type {string}\n   */\n  mimetype: string;\n  /**\n   * @member - media source drm data\n   * @type {Array<Drm>}\n   */\n  drmData: Array<Drm>;\n\n  /**\n   * @constructor\n   */\n  constructor(){}\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-source.js","//@flow\nimport {Status} from '../../enums'\n\n/**\n * Ovp BE FlavorAsset\n * @classdesc\n */\nexport default class KalturaFlavorAsset {\n  /**\n   * @member - The ID of the Flavor Asset\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member -The Flavor Params used to create this Flavor Asset\n   * @type {string}\n   */\n  flavorParamsId: string;\n  /**\n   * @member -The file extension\n   * @type {string}\n   */\n  fileExt: string;\n  /**\n   * @member - The overall bitrate (in KBits) of the Flavor Asset\n   *  @type {string}\n   */\n  bitrate: number;\n  /**\n   * @member - The width of the Flavor Asset\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - The height of the Flavor Asset\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - The frame rate (in FPS) of the Flavor Asset\n   * @type {number}\n   */\n  frameRate: number;\n  /**\n   * @member - True if this Flavor Asset is the original source\n   * @type {number}\n   */\n  isOriginal: boolean;\n  /**\n   * @member - True if this Flavor Asset is playable in KDP\n   * @type {boolean}\n   */\n  isWeb: boolean;\n  /**\n   * @member - The container format\n   * @type {boolean}\n   */\n  containerFormat: string;\n  /**\n   *@member - The video codec\n   * @type {boolean}\n   */\n  videoCodecId: string;\n  /**\n   * @member - The status of the Flavor Asset\n   * @type {string}\n   */\n  status: Status;\n  /**\n   * @member - The language of the flavor asset\n   * @type {Status}\n   */\n  language: string;\n  /**\n   * @member - The label of the flavor asset\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: any) {\n    this.id = data.id;\n    this.flavorParamsId = data.flavorParamsId;\n    this.fileExt = data.fileExt;\n    this.bitrate = data.bitrate;\n    this.width = data.width;\n    this.height = data.height;\n    this.id = data.id;\n    this.frameRate = data.frameRate;\n    this.isOriginal = data.isOriginal;\n    this.isWeb = data.isWeb;\n    this.containerFormat = data.containerFormat;\n    this.videoCodecId = data.videoCodecId;\n    this.status = data.status;\n    this.language = data.language;\n    this.label = data.label;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-flavor-asset.js","//@flow\nimport {EntryType, MediaType} from '../../enums'\n\n/**\n * Ovp BE MediaEntry\n * @classdesc\n */\nexport default class KalturaMediaEntry {\n  /**\n   * @member - The entry id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - Entry name (Min 1 chars)\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - The URL used for playback. This is not the download URL.\n   * @type {string}\n   */\n  dataUrl: string;\n  /**\n   * @member - Comma separated flavor params ids that exists for this media entry\n   * @type {string}\n   */\n  flavorParamsIds: string;\n  /**\n   * @member - The entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - The type of the entry, this is auto filled by the derived entry object\n   * @type {EntryType}\n   */\n  type: EntryType;\n  /**\n   * @member - The type of the entry, this is auto filled by the derived entry object (Image, Audio etc.)\n   * @type {MediaType}\n   */\n  entryType: MediaType;\n\n  /**\n   * @constructor\n   * @param {Object} entry The json response\n   */\n  constructor(entry: Object) {\n    this.id = entry.id;\n    this.name = entry.name;\n    this.dataUrl = entry.dataUrl;\n    this.type = entry.type;\n    this.entryType = entry.mediaType;\n    this.flavorParamsIds = entry.flavorParamsIds;\n    this.duration = entry.duration;\n  }\n}\n\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-media-entry.js","//@flow\nimport ServiceResult from '../../base-service-result'\nimport KalturaMetadata from './kaltura-metadata'\n\n/**\n * Ovp BE Metadata list response\n * @classdesc\n */\nexport default class KalturaMetadataListResponse extends ServiceResult {\n  totalCount: number;\n  /**\n   * @member -The mata data array\n   * @type {Array<KalturaMetadata>}\n   */\n  metas: Array<KalturaMetadata>;\n\n  /**\n   * @constructor\n   * @param {Object} responseObj The response\n   */\n  constructor(responseObj: Object) {\n    super(responseObj);\n    if (!this.hasError) {\n      this.totalCount = responseObj.totalCount;\n      if (this.totalCount > 0) {\n        this.metas = [];\n        responseObj.objects.map(meta => this.metas.push(new KalturaMetadata(meta)));\n      }\n\n    }\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-metadata-list-response.js","//@flow\nimport ServiceResult from '../../base-service-result'\nimport KalturaAccessControlMessage from './kaltura-access-control-message'\nimport KalturaPlaybackSource from './kaltura-playback-source'\nimport KalturaRuleAction from './kaltura-rule-action'\nimport KalturaFlavorAsset from './kaltura-flavor-asset'\n\n/**\n * Ovp BE playback context response\n * @classdesc\n */\nexport default class KalturaPlaybackContext extends ServiceResult {\n  /**\n   * @member - The playback sources\n   * @type {Array<KalturaPlaybackSource>}\n   */\n  sources: Array<KalturaPlaybackSource> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaRuleAction>}\n   */\n  actions: Array<KalturaRuleAction> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaAccessControlMessage>}\n   */\n  messages: Array<KalturaAccessControlMessage> = [];\n  /**\n   * @member - The flavor assets\n   * @type {Array<KalturaFlavorAsset>}\n   */\n  flavorAssets: Array<KalturaFlavorAsset> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n\n      let messages = response.messages;\n      if (messages) {\n        messages.map(message => this.messages.push(new KalturaAccessControlMessage(message)));\n      }\n\n      let actions = response.actions;\n      if (actions) {\n        actions.map(action => this.actions.push(new KalturaRuleAction(action)));\n      }\n\n      let sources = response.sources;\n      if (sources) {\n        sources.map(source => this.sources.push(new KalturaPlaybackSource(source)));\n      }\n\n      let flavorAssets = response.flavorAssets;\n      if (flavorAssets) {\n        flavorAssets.map(flavor => this.flavorAssets.push(new KalturaFlavorAsset(flavor)));\n      }\n    }\n\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-playback-context.js","//@flow\nimport KalturaDrmPlaybackPluginData from './kaltura-drm-playback-plugin-data'\n\n/**\n * Ovp BE playback source\n * @classdesc\n */\nexport default class KalturaPlaybackSource {\n  /**\n   * @member - source format according to delivery profile streamer type (applehttp, mpegdash etc.)\n   * @type {string}\n   */\n  format: string;\n  /**\n   * @member - delivery profile Id\n   * @type {string}\n   */\n  deliveryProfileId: string;\n  /**\n   * @member - The source URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - comma separated string according to deliveryProfile media protocols ('http,https' etc.)\n   * @type {string}\n   */\n  protocols: string;\n  /**\n   * @member - comma separated string of flavor ids\n   * @type {string}\n   */\n  flavorIds: string;\n  /**\n   * @member - drm data object containing relevant license url ,scheme name and certificate\n   * @type {Array<KalturaDrmPlaybackPluginData>}\n   */\n  drm: Array<KalturaDrmPlaybackPluginData> = [];\n\n  /**\n   * @constructor\n   * @param {Object} source The response\n   */\n  constructor(source: Object) {\n    this.format = source.format;\n    this.deliveryProfileId = source.deliveryProfileId;\n    this.url = source.url;\n    this.protocols = source.protocols;\n    this.flavorIds = source.flavorIds;\n\n    if (source.drm) {\n      source.drm.map(drm => this.drm.push(new KalturaDrmPlaybackPluginData(drm)));\n    }\n\n\n  }\n\n  /**\n   * Checks if source has DRM data\n   * @function hasDrmData\n   * @returns {boolean} Is source has DRM\n   */\n  hasDrmData(): boolean {\n    return this.drm && this.drm.length > 0;\n  }\n\n  /**\n   * Checks if source has flavor IDs\n   * @function hasFlavorIds\n   * @returns {boolean} Is source ha flavor IDs\n   */\n  hasFlavorIds(): boolean {\n    return !!this.flavorIds && this.flavorIds.length > 0;\n  }\n\n  /**\n   * Returns source desired protocol if supported\n   * @param {string} protocol - the desired protocol for the source (base play url protocol)\n   * @returns {string} - protocol if protocol is in the protocols list - if not empty string returned\n   */\n  getProtocol(protocol: string): string {\n    let returnValue: string = \"\";\n    if (this.protocols && this.protocols.length > 0) {\n      let protocolsArr: Array<string> = this.protocols.split(\",\");\n      protocolsArr.forEach((p) => {\n        if (p == protocol) {\n          returnValue = p;\n        }\n      });\n    }\n    else if (protocol == \"http\") {\n      return protocol;\n    }\n    return returnValue;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-playback-source.js","//@flow\nimport OvpService from '../services/ovp-service'\nimport MultiRequestBuilder from '../../multi-request-builder'\nimport {MultiRequestResult} from '../../multi-request-builder'\n\n/**\n * Data loaders manager\n * @classdesc\n */\nexport default class DataLoaderManager {\n  /**\n   * @member - Lodaers response map index\n   * @type {Map<string,Array<number>>}\n   * @private\n   * @static\n   */\n  static _loadersResponseMap: Map<string, Array<number>> = new Map();\n  /**\n   * @member - Loaders multi request\n   * @type {MultiRequestBuilder}\n   * @private\n   */\n  _multiRequest: MultiRequestBuilder;\n  /**\n   * @member - Loaders multi response\n   * @type {MultiRequestResult}\n   * @private\n   */\n  _multiResponse: MultiRequestResult;\n  /**\n   * @member - Loaders to execute\n   * @type {Map<string,Function>}\n   * @private\n   */\n  _loaders: Map<string, ILoader> = new Map();\n\n  /**\n   * @constructor\n   * @param {string} partnerID Then partner ID\n   * @param {string} ks The ks\n   */\n  constructor(partnerID: number, ks: string = \"\") {\n    this._multiRequest = OvpService.getMultirequest(ks, partnerID);\n  }\n\n  /**\n   * Add loader too execution loaders map\n   * @function\n   * @param {Function} loader Loader to add\n   * @param {Object} params Loader params\n   * @returns {void}\n   */\n  add(loader: typeof ILoader, params: Object): void {\n    let execution_loader = new loader(params);\n    if (execution_loader.isValid()) {\n      this._loaders.set(loader.name, execution_loader);\n      //Get the start index from the multiReqeust before adding current execution_loader requests\n      let startIndex = this._multiRequest.requests.length;\n      //Get the requests\n      let requests = execution_loader.requests;\n      //Add requests to muktiRequest queue\n      requests.forEach((request) => {\n        this._multiRequest.add(request);\n      });\n      //Create range array of current execution_loader requests\n      let executionLoaderResponseMap = Array.from(new Array(requests.length), (val, index) => index + startIndex);\n      //Add to map\n      DataLoaderManager._loadersResponseMap.set(loader.name, executionLoaderResponseMap);\n    }\n  }\n\n  /**\n   * Get data from all loaders using multi request\n   * @function\n   * @returns {Promise} Promise\n   */\n  fetchData(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._multiRequest.execute()\n        .then(response => {\n            this._multiResponse = response;\n            if (!response.success) {\n              reject(response);\n            }\n            else {\n              let preparedData: Object = this.prepareData(response);\n              if (preparedData.success) {\n                resolve(this._loaders);\n              }\n              else {\n                reject({success: false, data: preparedData.error});\n              }\n            }\n          },\n          err => {\n            reject(err);\n          });\n    });\n  }\n\n  prepareData(response: MultiRequestResult): Object {\n    this._loaders.forEach(function (loader, name) {\n      let loaderDataIndexes = DataLoaderManager._loadersResponseMap.get(name);\n      try {\n        if (loaderDataIndexes != null) {\n          loader.response = (response.results.slice(loaderDataIndexes[0], loaderDataIndexes[loaderDataIndexes.length - 1] + 1));\n        }\n      }\n      catch (err) {\n        return {success: false, error: err};\n      }\n    });\n    return {success: true, data: this._loaders};\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/data-loader-manager.js","//@flow\n\nimport RequestBuilder from '../../request-builder'\nimport BaseEntryService from '../services/base-entry-service'\nimport MetaDataService from '../services/meta-data-service'\nimport Configuration from '../config'\nimport KalturaPlaybackContext from '../response-types/kaltura-playback-context'\nimport KalturaMetadataListResponse from '../response-types/kaltura-metadata-list-response'\nimport KalturaBaseEntryListResponse from '../response-types/kaltura-base-entry-list-response'\n\nconst config = Configuration.get();\n\n/**\n * Media entry loader\n * @classdesc\n */\nexport default class MediaEntryLoader implements ILoader {\n  static get name(): string {\n    return \"media\";\n  }\n\n  _entryId: string;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._entryId = params.entryId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    let mediaEntryResponse: KalturaBaseEntryListResponse = new KalturaBaseEntryListResponse(response[0].data);\n    this._response.entry = mediaEntryResponse.entries[0];\n    this._response.playBackContextResult = new KalturaPlaybackContext(response[1].data);\n    this._response.metadataListResult = new KalturaMetadataListResponse(response[2].data);\n  }\n\n  get response(): any {\n    return this._response;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    let requests: Array<RequestBuilder> = [];\n    requests.push(BaseEntryService.list(config.beUrl, params.ks, params.entryId));\n    requests.push(BaseEntryService.getPlaybackContext(config.beUrl, params.ks, params.entryId));\n    requests.push(MetaDataService.list(config.beUrl, params.ks, params.entryId));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._entryId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/media-entry-loader.js","//@flow\nimport SessionService from '../services/session-service'\nimport Configuration from '../config'\nimport RequestBuilder from '../../request-builder'\n\nconst config = Configuration.get();\n/**\n * Media entry loader\n * @classdesc\n */\nexport default class SessionLoader implements ILoader {\n  static get name(): string {\n    return \"session\";\n  }\n\n  /**\n   * @member - partner ID\n   * @type {number}\n   * @private\n   */\n  _partnerId: number;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._partnerId = params.partnerId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.ks = response[0].data.ks;\n  }\n\n  get response(): any {\n    return this._response.ks;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    let requests: Array<RequestBuilder> = [];\n    requests.push(SessionService.anonymousSession(config.beUrl, params.partnerId));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._partnerId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/session-loader.js","//@flow\nimport UiConfService from '../services/ui-conf-service'\nimport KalturaUiConfResponse from '../response-types/kaltura-ui-conf-response'\nimport Configuration from '../config'\nimport RequestBuilder from '../../request-builder'\n\nconst config = Configuration.get();\n\nexport default class UiConfigLoader implements ILoader {\n  static get name(): string {\n    return \"uiConf\";\n  }\n\n  /**\n   * @member - uiConf ID\n   * @type {number}\n   * @private\n   */\n  _uiConfId: number;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._uiConfId = params.uiConfId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.uiConf = new KalturaUiConfResponse(response[0].data);\n  }\n\n  get response(): any {\n    if (this._response != null && this._response.uiConf != null && this._response.uiConf.config != null)\n      try {\n        return JSON.parse(this._response.uiConf.config).plugins;\n      }\n      catch (err) {\n        return null;\n      }\n    else\n      return null;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    let requests: Array<RequestBuilder> = [];\n    requests.push(UiConfService.get(config.beUrl, params.ks, params.uiConfId));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._uiConfId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/ui-config-loader.js","//@flow\nimport KalturaMediaEntry from './response-types/kaltura-media-entry'\nimport KalturaPlaybackContext from './response-types/kaltura-playback-context'\nimport KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport KalturaFlavorAsset from './response-types/kaltura-flavor-asset'\nimport KalturaMetadataListResponse from './response-types/kaltura-metadata-list-response'\nimport PlaySourceUrlBuilder from \"./play-source-url-builder\"\nimport XmlParser from '../xml-parser'\nimport {MediaEntryType, EntryType, MediaType} from '../enums'\nimport Logger from '../../util/logger'\nimport Configuration from './config'\nimport {MediaFormat} from '../../entities/media-format'\nimport MediaEntry from '../../entities/media-entry'\nimport Drm from '../../entities/drm'\nimport MediaSource from '../../entities/media-source'\nimport MediaSources from '../../entities/media-sources'\n\nconst config = Configuration.get();\n/**\n * @constant\n */\nconst logger = Logger.get(\"OvpProvider\");\n\n/**\n * @constant\n * @type {Map<string, MediaFormat>}\n */\nconst SUPPORTED_FORMATS: Map<string, MediaFormat> = new Map([\n  [\"mpegdash\", MediaFormat.dash],\n  [\"applehttp\", MediaFormat.hls],\n  [\"url\", MediaFormat.mp4]\n]);\n\n/**\n * Ovp provider parser\n * @classdesc\n */\nexport default class ProviderParser {\n\n  /**\n   * Returns parsed media entry by given OVP response objects\n   * @function getMediaEntry\n   * @param {string} ks The ks\n   * @param {number} partnerID The partner ID\n   * @param {number} uiConfId The uiConf ID\n   * @param {any} mediaEntryResponse The media entry response\n   * @returns {MediaEntry} The media entry\n   * @static\n   */\n  static getMediaEntry(ks: string, partnerID: number, uiConfId: number, mediaEntryResponse: any): MediaEntry {\n    let mediaEntry: MediaEntry = new MediaEntry();\n    let entry = mediaEntryResponse.entry;\n    let playbackContext = mediaEntryResponse.playBackContextResult;\n    let metadataList = mediaEntryResponse.metadataListResult;\n    let kalturaSources: Array<KalturaPlaybackSource> = playbackContext.sources;\n    let sources: MediaSources = new MediaSources();\n    if (kalturaSources && kalturaSources.length > 0) {\n      kalturaSources.forEach((source) => {\n        let parsedSource = this.parseSource(source, ks, partnerID, uiConfId, entry, playbackContext);\n        let mediaFormat = SUPPORTED_FORMATS.get(source.format);\n        sources.map(parsedSource, mediaFormat);\n      });\n    }\n\n    mediaEntry.sources = sources;\n\n    let metadata: Map<string, string> = this.parseMetaData(metadataList);\n    mediaEntry.metaData = metadata;\n    mediaEntry.id = entry.id;\n    mediaEntry.duration = entry.duration;\n\n    let type: MediaEntryType = MediaEntryType.Unknown;\n\n    switch (entry.entryType) {\n      case MediaType.IMAGE.value:\n        type = MediaEntryType.Image;\n        break;\n      case MediaType.AUDIO.value:\n        type = MediaEntryType.Audio;\n        break;\n      default:\n        switch (entry.type) {\n          case EntryType.MEDIA_CLIP.value:\n            type = MediaEntryType.Vod;\n            break;\n          case EntryType.LIVE_STREAM.value:\n          case EntryType.LIVE_CHANNEL.value:\n            type = MediaEntryType.Live;\n            break;\n          default:\n            type = MediaEntryType.Unknown;\n        }\n    }\n    mediaEntry.type = type;\n\n    return mediaEntry;\n  }\n\n  /**\n   *\n   * @param {KalturaPlaybackSource} source The source\n   * @param {string} ks The ks\n   * @param {number} partnerID The partner ID\n   * @param {number} uiConfId The uiConf ID\n   * @param {KalturaMediaEntry} entry The entry\n   * @param {KalturaPlaybackContext} playbackContext The playback context\n   * @returns {MediaSource}  The parsed media source\n   * @static\n   */\n  static parseSource(source: KalturaPlaybackSource, ks: string, partnerID: number, uiConfId: number, entry: KalturaMediaEntry, playbackContext: KalturaPlaybackContext): MediaSource {\n    let playUrl: string = \"\";\n    let mediaFormat = SUPPORTED_FORMATS.get(source.format);\n    let mediaSource: MediaSource = new MediaSource();\n    // in case playbackSource doesn't have flavors we don't need to build the url and we'll use the provided one.\n    if (source.hasFlavorIds()) {\n      let splittedUrl: Array<string> = config.baseUrl.split(\"/\");\n      let baseProtocol: string;\n      if (splittedUrl && splittedUrl.length > 0) {\n        baseProtocol = splittedUrl[0].substring(0, splittedUrl[0].length - 1);\n      }\n      else {\n        baseProtocol = \"http\";\n      }\n\n      let extension: string = \"\";\n      if (!mediaFormat) {\n        let flavorIdsArr = source.flavorIds.split(\",\");\n        let flavors: Array<KalturaFlavorAsset> = playbackContext.flavorAssets.filter(flavor => flavorIdsArr.indexOf(flavor.id) != -1);\n        if (flavors && flavors.length > 0) {\n          extension = flavors[0].fileExt;\n        }\n      }\n      else {\n        extension = mediaFormat.pathExt;\n        mediaSource.mimetype = mediaFormat.mimeType;\n      }\n\n      playUrl = PlaySourceUrlBuilder.build({\n        entryId: entry.id,\n        flavorIds: source.flavorIds,\n        format: source.format,\n        ks: ks,\n        partnerId: partnerID,\n        uiConfId: uiConfId,\n        extension: extension,\n        protocol: source.getProtocol(baseProtocol)\n      });\n\n    }\n    else {\n      playUrl = source.url;\n    }\n\n    if (playUrl == \"\") {\n      logger.error(`failed to create play url from source, discarding source: (${entry.id}_${source.deliveryProfileId}), ${source.format}.`);\n      return mediaSource;\n    }\n\n    mediaSource.url = playUrl;\n    mediaSource.id = entry.id + \"_\" + source.deliveryProfileId + \",\" + source.format;\n    if (source.hasDrmData()) {\n      let drmParams: Array<Drm> = [];\n      source.drm.forEach((drm) => {\n        drmParams.push(new Drm(drm.licenseURL, drm.scheme));\n      });\n      mediaSource.drmData = drmParams;\n    }\n    return mediaSource;\n  }\n\n  /**\n   * Ovp metadata parser\n   * @function parseMetaData\n   * @param {KalturaMetadataListResponse} metadataList The metadata list\n   * @returns {Map<string,string>} Parsed metadata\n   * @static\n   */\n  static parseMetaData(metadataList: KalturaMetadataListResponse): Map<string, string> {\n    let metadata: Object = {};\n    if (metadataList && metadataList.metas && metadataList.metas.length > 0) {\n      metadataList.metas.forEach((meta) => {\n        let metaXml: Object;\n        let domParser: DOMParser = new DOMParser();\n        meta.xml = meta.xml.replace(/\\r?\\n|\\r/g, \"\");\n        meta.xml = meta.xml.replace(/>\\s*/g, '>');\n        meta.xml = meta.xml.replace(/>\\s*/g, '>');\n        metaXml = domParser.parseFromString(meta.xml, 'text/xml');\n        let metasObj: Object = XmlParser.xmlToJson(metaXml);\n        let metaKeys = Object.keys(metasObj.metadata);\n        metaKeys.forEach((key) => {\n          metadata[key] = metasObj.metadata[key][\"#text\"];\n        })\n\n      })\n    }\n    return metadata;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/provider-parser.js","//@flow\nimport Logger from '../../util/logger'\nimport ProviderParser from './provider-parser'\nimport DataLoaderManager from './loaders/data-loader-manager'\nimport MediaEntryLoader from './loaders/media-entry-loader'\nimport SessionLoader from './loaders/session-loader'\nimport UiConfigLoader from './loaders/ui-config-loader'\nimport Configuration from './config'\nimport MediaEntry from '../../entities/media-entry'\nimport MediaSources from '../../entities/media-sources'\n/**\n * @constant\n */\nconst logger = Logger.get(\"OvpProvider\");\n\ntype playerConfig = {\n  id: string,\n  session: Object,\n  sources: MediaSources,\n  duration: number,\n  type: string,\n  metadata: Object,\n  plugins: Object\n};\n\n/**\n * Ovp provider\n * @classdesc\n */\nexport class OvpProvider {\n  /**\n   * @member - ks\n   * @type {string}\n   */\n  ks: string;\n  /**\n   * @member - partner ID\n   * @type {number}\n   */\n  partnerID: number;\n  /**\n   * @member - is anonymous\n   * @type {boolean}\n   * @private\n   */\n  _isAnonymous: boolean;\n  /**\n   * @member - uiConf ID\n   * @type {number}\n   * @private\n   */\n  _uiConfId: number;\n  /**\n   * @member - Data loader\n   * @type {DataLoaderManager}\n   * @private\n   */\n  _dataLoader: DataLoaderManager;\n\n  /**\n   * @constructor\n   * @param {number} partnerID The partner ID\n   * @param {string} [ks=\"\"]  The provider ks (has empty string as default value)\n   * @param {Object} [config]  The provider config(optional)\n   */\n  constructor(partnerID: number, ks: string = \"\", config?: Object) {\n    this.partnerID = partnerID;\n    this.ks = ks;\n    this._isAnonymous = !this.ks;\n    Configuration.set(config);\n  }\n\n  /**\n   * Returns player json configuration\n   * @function getConfig\n   * @param {string} entryId The entry ID\n   * @param {number} uiConfId The uiConf ID\n   * @returns {Promise} The provider config object as promise\n   */\n  getConfig(entryId?: string, uiConfId?: number): Promise<Object> {\n    if (uiConfId != null) {\n      this._uiConfId = uiConfId;\n    }\n    this._dataLoader = new DataLoaderManager(this.partnerID, this.ks);\n    return new Promise((resolve, reject) => {\n      if (this.validateParams(entryId, uiConfId)) {\n        let ks: string = this.ks;\n        if (this._isAnonymous) {\n          ks = \"{1:result:ks}\";\n          this._dataLoader.add(SessionLoader, {partnerId: this.partnerID});\n        }\n        this._dataLoader.add(MediaEntryLoader, {entryId: entryId, ks: ks});\n        this._dataLoader.add(UiConfigLoader, {uiConfId: uiConfId, ks: ks});\n        this._dataLoader.fetchData()\n          .then(response => {\n              resolve(this.parseDataFromResponse(response));\n            },\n            err => {\n              reject(err);\n            });\n      }\n      else {\n        reject({success: false, data: \"Missing mandatory parameter\"});\n      }\n    });\n  }\n\n  /**\n   * Parses BE data to json configuration object\n   * @function parseDataFromResponse\n   * @param {Map<string,Function>} data The data to parse\n   * @returns {Object} The parsed config object\n   */\n  parseDataFromResponse(data: Map<string, Function>): Object {\n    logger.debug(\"Data parsing started\");\n    let config: playerConfig = {\n      id: \"\",\n      session: {\n        partnerID: this.partnerID,\n        uiConfID: this._uiConfId,\n      },\n      sources: new MediaSources(),\n      duration: 0,\n      type: \"Unknown\",\n      metadata: {},\n      plugins: {}\n    };\n    if (data != null) {\n      if (data.has(SessionLoader.name)) {\n        let sessionLoader = data.get(SessionLoader.name);\n        if (sessionLoader != null && sessionLoader.response != null) {\n          this.ks = sessionLoader.response;\n          this._isAnonymous = !this.ks;\n          config.session.ks = this.ks;\n        }\n      }\n      if (data.has(UiConfigLoader.name)) {\n        let uiConfLoader = data.get(UiConfigLoader.name);\n        let pluginsJson: Object = {};\n        if (uiConfLoader != null) {\n          pluginsJson = uiConfLoader.response;\n        }\n        config.plugins = pluginsJson;\n      }\n      if (data.has(MediaEntryLoader.name)) {\n        let mediaLoader = data.get(MediaEntryLoader.name);\n        if (mediaLoader != null && mediaLoader.response != null) {\n          let mediaEntry: MediaEntry = ProviderParser.getMediaEntry(this.ks, this.partnerID, this._uiConfId, mediaLoader.response);\n          config.id = mediaEntry.id;\n          config.sources = mediaEntry.sources;\n          config.duration = mediaEntry.duration;\n          config.type = mediaEntry.type;\n          config.metadata = mediaEntry.metaData;\n        }\n      }\n    }\n    logger.debug(\"Data parsing finished\", config);\n    return (config);\n  }\n\n  /**\n   * Parameters validation function\n   * @param {string} entryId The entry ID\n   * @param {number} uiConfId The uiConfID\n   * @returns {boolean} Is valid params\n   */\n  validateParams(entryId?: string, uiConfId?: number): boolean {\n    return !!entryId || !!uiConfId;\n  }\n\n}\n\nexport default OvpProvider;\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/ovp-provider.js","//@flow\nimport Configuration from './config'\n\nconst config = Configuration.get();\n\n/**\n * Media source url builder\n * @classdesc\n */\nexport default class PlaySourceUrlBuilder {\n\n  /**\n   * Returns source url by given url params\n   * @function build\n   * @param {Object} urlParams The params\n   * @returns {string} The URL\n   * @static\n   */\n  static build(urlParams: Object): string {\n    let baseUrl: string = config.baseUrl;\n    let partnerId: string = urlParams.partnerId;\n    let entryId: string = urlParams.entryId;\n    let ks: string = urlParams.ks;\n    let uiConfId: string = urlParams.uiConfId;\n    let format: string = urlParams.format;\n    let protocol: string = urlParams.protocol;\n    let extension: string = urlParams.extension;\n    let flavorIds: string = urlParams.flavorIds;\n\n    if (baseUrl == \"\" && partnerId == \"\" && entryId == \"\" && extension == \"\" && format == \"\") {\n      return \"\";\n    }\n\n    let playUrl = baseUrl;\n    if (!PlaySourceUrlBuilder.endsWith(baseUrl, \"/\")) {\n      playUrl += \"/\";\n    }\n    playUrl += \"p/\" + partnerId + \"/sp/\" + partnerId + \"00\" + \"/playManifest/entryId/\" + entryId + \"/protocol/\" + protocol + \"/format/\" + format;\n\n    if (flavorIds != \"\") {\n      playUrl += \"/falvorIds/\" + flavorIds;\n    }\n    else if (uiConfId != \"\") {\n      playUrl += \"/uiConfId/\" + uiConfId;\n    }\n\n    if (this.ks != \"\") {\n      playUrl += \"/ks/\" + ks;\n    }\n\n    playUrl += \"/a.\" + extension;\n\n    if (uiConfId && flavorIds != \"\") {\n      playUrl += \"?uiConfId=.\" + uiConfId;\n    }\n\n    return playUrl;\n  }\n\n  /**\n   * Checks if given string end with search string\n   * @param {string} string The given string\n   * @param {string} searchString The string to search\n   * @returns {boolean} Is  given string end with search string\n   */\n  static endsWith(string: string, searchString: string): boolean {\n    if (typeof string !== 'string') {\n      return false;\n    }\n    if (typeof searchString !== 'string') {\n      return false;\n    }\n\n    return string.indexOf(searchString, string.length - searchString.length) != -1;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/play-source-url-builder.js","//@flow\n\n/**\n * Ovp BE access control message\n * @classdesc\n */\nexport default class KalturaAccessControlMessage {\n  /**\n   * @member - The access control message\n   * @type {string}\n   */\n  message: string;\n  /**\n   *  @member - The access control message code\n   * @@type {string}\n   */\n  code: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: Object) {\n    this.message = data.message;\n    this.code = data.code\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-access-control-message.js","//@flow\nimport ServiceResult from '../../base-service-result'\nimport KalturaMediaEntry from './kaltura-media-entry'\n\n/**\n * Ovp BE BaseEntryList service response\n * @classdesc\n */\nexport default class KalturaBaseEntryListResponse extends ServiceResult {\n  /**\n   * @member - The total count\n   * @type {number}\n   */\n  totalCount: number;\n  /**\n   * @member - The entries\n   * @type {Array<KalturaMediaEntry>}\n   */\n  entries: Array<KalturaMediaEntry>;\n\n  /**\n   * @constructor\n   * @param {Object} responseObj The json response\n   */\n  constructor(responseObj: Object) {\n    super(responseObj);\n    if (!this.hasError) {\n      this.totalCount = responseObj.totalCount;\n      if (this.totalCount > 0) {\n        this.entries = [];\n        responseObj.objects.map(entry => this.entries.push(new KalturaMediaEntry(entry)));\n      }\n    }\n  }\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-base-entry-list-response.js","//@flow\nimport {Scheme} from '../../enums'\n\n/**\n * Ovp BE DrmPlaybackPluginData\n * @classdesc\n */\nexport default class KalturaDrmPlaybackPluginData {\n  /**\n   * @member - The drm scheme\n   * @type {Scheme}\n   */\n  scheme: Scheme;\n\n  /**\n   * @member - The license URL\n   * @type {string}\n   */\n  licenseURL: string;\n\n  /**\n   * @constructor\n   * @param {Object} drm The json response\n   */\n  constructor(drm: any) {\n    this.scheme = drm.scheme;\n    this.licenseURL = drm.licenseURL;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-drm-playback-plugin-data.js","//@flow\nimport {MetadataObjectType, MetadataStatus} from '../../enums'\n\n/**\n * Ovp BE Metadata\n * @classdesc\n */\nexport default class KalturaMetadata {\n  id: number;\n  metadataProfileId: number;\n  metadataProfileVersion: number;\n  metadataObjectType: MetadataObjectType;\n  objectId: string;\n  version: number;\n  created: Date;\n  updated: Date;\n  status: MetadataStatus;\n  /**\n   * @member - The Metadata xml - represented as XML string\n   * @type {string}\n   */\n  xml: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The response\n   */\n  constructor(data: Object) {\n    this.id = data.id;\n    this.metadataProfileId = data.metadataProfileId;\n    this.metadataProfileVersion = data.metadataProfileVersion;\n    this.metadataProfileId = data.metadataProfileId;\n    this.metadataObjectType = data.metadataObjectType;\n    this.objectId = data.objectId;\n    this.version = data.version;\n    this.created = new Date(0);\n    this.created.setUTCSeconds(data.createdAt);\n    this.updated = new Date(0);\n    this.updated.setUTCSeconds(data.updatedAt);\n    this.status = data.status;\n    this.xml = data.xml;\n\n  }\n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-metadata.js","//@flow\nimport {KalturaRuleActionType} from '../../enums'\n\n/**\n * Ovp BE rule action\n * @classdesc\n */\nexport default class KalturaRuleAction {\n  /**\n   * @member - The type of the action\n   * @type {KalturaRuleActionType}\n   */\n  type: KalturaRuleActionType;\n\n  /**\n   * @constructor\n   * @param {Object} data The response\n   */\n  constructor(data: Object) {\n    this.type = data.type;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-rule-action.js","//@flow\nimport ServiceResult from '../../base-service-result'\nimport {UIConfType, UIConfCreationMode} from '../../enums';\n\n/**\n * Ovp BE Ui config response\n * @classdesc\n */\nexport default class KalturaUiConfResponse extends ServiceResult {\n  /**\n   * @member -Name of the uiConf, this is not a primary key\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member -Name of the uiConf, this is not a primary key\n   * @type {string}\n   */\n  description: string;\n  objTypeAsString: string;\n  width: number;\n  height: number;\n  htmlParams: string;\n  swfUrl: string;\n  confFilePath: string;\n  confFile: string;\n  confFileFeatures: string;\n  name: string;\n  /**\n   * @member -plugins configuration represented as Json string\n   * @type {string}\n   */\n  config: string;\n  confVars: string;\n  useCdn: boolean;\n  tags: string;\n  swfUrlVersion: string;\n  created: Date;\n  updated: Date;\n  html5Url: string;\n  version: string;\n  partnerTags: string;\n  objType: UIConfType;\n  creationMode: UIConfCreationMode;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: Object) {\n    super(data);\n    if (!this.hasError) {\n      this.name = data.name;\n\n      this.description = data.description;\n      this.objTypeAsString = data.objTypeAsString;\n      this.width = data.width;\n      this.height = data.height;\n      this.htmlParams = data.htmlParams;\n      this.swfUrl = data.swfUrl;\n      this.confFilePath = data.confFilePath;\n      this.confFile = data.confFile;\n      this.confFileFeatures = data.confFileFeatures;\n      this.config = data.config;\n      this.confVars = data.confVars;\n      this.useCdn = data.useCdn;\n      this.tags = data.tags;\n      this.swfUrlVersion = data.swfUrlVersion;\n      this.created = new Date(0);\n      this.created.setUTCSeconds(data.createdAt);\n      this.updated = new Date(0);\n      this.updated.setUTCSeconds(data.updatedAt);\n      this.html5Url = data.description;\n      this.version = data.description;\n      this.partnerTags = data.description;\n      this.objType = data.description;\n      this.creationMode = data.description;\n\n    }\n  }\n}\n\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-ui-conf-response.js","//@flow\nimport OvpService from './ovp-service'\nimport RequestBuilder from '../../request-builder'\n\nconst SERVICE_NAME: string = \"baseEntry\";\n\n/**\n * Ovp BaseEntry service methods\n * @classdesc\n */\nexport default class BaseEntryService extends OvpService {\n\n  /**\n   * Creates an instance of RequestBuilder for baseentry.getPlaybackContext\n   * @function getPlaybackContext\n   * @param {string} baseUrl The service base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static getPlaybackContext(baseUrl: string, ks: string, entryId: string): RequestBuilder {\n    let request = new RequestBuilder();\n    request.service = SERVICE_NAME;\n    request.action = \"getPlaybackContext\";\n    request.method = \"POST\";\n    request.baseUrl = baseUrl;\n    request.tag = \"baseEntry-getPlaybackContext\";\n    let contextDataParams = {objectType: \"KalturaContextDataParams\", flavorTags: \"all\"};\n    let params = {entryId: entryId, ks: ks, contextDataParams: contextDataParams};\n    request.params = params;\n    return request;\n  }\n\n  /**\n   * Creates an instance of RequestBuilder for baseentry.list\n   * @function list\n   * @param {string} baseUrl The base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static list(baseUrl: string, ks: string, entryId: string): RequestBuilder {\n    let request = new RequestBuilder();\n    request.service = SERVICE_NAME;\n    request.action = \"list\";\n    request.method = \"POST\";\n    request.baseUrl = baseUrl;\n    request.tag = \"list\";\n    request.params = BaseEntryService.getEntryListReqParams(entryId, ks);\n    return request;\n  }\n\n  /**\n   * Gets  baseentry.list service params\n   * @function getEntryListReqParams\n   * @param {string} entryId The entry ID\n   * @param {string} ks The ks\n   * @returns {{ks: string, filter: {redirectFromEntryId: string}, responseProfile: {fields: string, type: number}}} The service params object\n   * @static\n   */\n  static getEntryListReqParams(entryId: string, ks: string): any {\n    let filterParams = {redirectFromEntryId: entryId};\n    let responseProfileParams = {\n      fields: \"id,name,dataUrl,duration,msDuration,flavorParamsIds,mediaType,type,tags\",\n      type: 1\n    };\n    return {ks: ks, filter: filterParams, responseProfile: responseProfileParams};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/base-entry-service.js","//@flow\n\nimport OvpService from './ovp-service'\nimport RequestBuilder from '../../request-builder'\n\nconst SERVICE_NAME: string = \"metadata_metadata\";\n\n/**\n * Ovp metadata_metadata service methods\n * @classdesc\n */\nexport default class MetaDataService extends OvpService {\n  /**\n   * Creates an instance of RequestBuilder for metadata_metadata.list\n   * @function getPlaybackContext\n   * @param {string} baseUrl The service base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static list(baseUrl: string, ks: string, entryId: string) {\n    let request = new RequestBuilder();\n    request.service = SERVICE_NAME;\n    request.action = \"list\";\n    request.method = \"POST\";\n    request.baseUrl = baseUrl;\n    request.tag = \"metadata_metadata-list\";\n    let filter = {objectType: \"KalturaMetadataFilter\", objectIdEqual: entryId, metadataObjectTypeEqual: \"1\"};\n    let params = {filter: filter, ks: ks};\n    request.params = params;\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/meta-data-service.js","//@flow\n\nimport OvpService from './ovp-service'\nimport RequestBuilder from '../../request-builder'\n\nconst SERVICE_NAME: string = \"session\";\n\n/**\n * Ovp session service methods\n * @classdesc\n */\nexport default class SessionService extends OvpService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} baseUrl The service base URL\n   * @param {string} partnerId The partner ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static anonymousSession(baseUrl: string, partnerId: number) {\n    let request = new RequestBuilder();\n    request.service = SERVICE_NAME;\n    request.action = \"startWidgetSession\";\n    request.method = \"POST\";\n    request.baseUrl = baseUrl;\n    request.tag = \"session-startWidget\";\n    request.params = {widgetId: \"_\" + partnerId};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/session-service.js","//@flow\n\nimport OvpService from './ovp-service'\nimport RequestBuilder from '../../request-builder'\n\nconst SERVICE_NAME: string = \"uiconf\";\n\n/**\n * Ovp uiconf service methods\n * @classdesc\n */\nexport default class UiConfService extends OvpService {\n  /**\n   * Creates an instance of RequestBuilder for uiconf.get\n   * @function get\n   * @param {string} baseUrl The service base URL\n   * @param {string} ks The ks\n   * @param {string} uiConfID The uiConf ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static get(baseUrl: string, ks: string, uiConfID: number) {\n    let request = new RequestBuilder();\n    request.service = SERVICE_NAME;\n    request.action = \"get\";\n    request.method = \"POST\";\n    request.baseUrl = baseUrl;\n    request.tag = \"uiconf-get\";\n    let responseProfileParams = {\n      fields: \"config\",\n      type: 1\n    };\n    request.params = {id: uiConfID, responseProfile: responseProfileParams, ks: ks};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/ui-conf-service.js","//@flow\n\n/**\n * Xml parser\n * @classdesc\n */\nexport default class XmlParser {\n  /**\n   * Parses xml string to json object\n   * @param {string} xml The xml to parse\n   * @returns {{}} The parsed xml as Json object\n   * @static\n   */\n  static xmlToJson(xml: Object) {\n    let obj = {};\n    if (xml.nodeType == 1) {\n      if (xml.attributes.length > 0) {\n        obj[\"@attributes\"] = {};\n        for (let j = 0; j < xml.attributes.length; j++) {\n          let attribute = xml.attributes.item(j);\n          obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n    }\n    else if (xml.nodeType == 3) {\n      obj = xml.nodeValue;\n    }\n    if (xml.hasChildNodes()) {\n      for (let i = 0; i < xml.childNodes.length; i++) {\n        let item = xml.childNodes.item(i);\n        let nodeName = item.nodeName;\n        if (typeof (obj[nodeName]) == \"undefined\") {\n          obj[nodeName] = this.xmlToJson(item);\n        }\n        else {\n          if (typeof (obj[nodeName].push) == \"undefined\") {\n            let old = obj[nodeName];\n            obj[nodeName] = [];\n            obj[nodeName].push(old);\n          }\n          obj[nodeName].push(this.xmlToJson(item));\n        }\n      }\n    }\n    return obj;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/xml-parser.js","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.copyProperties = copyProperties;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar INITIALIZED = Symbol();\n\n/**\n * This is an abstract class that is not intended to be\n * used directly. Extend it to turn your class into an enum\n * (initialization is performed via `MyClass.initEnum()`).\n */\n\nvar Enum = exports.Enum = function () {\n    /**\n     * `initEnum()` closes the class. Then calling this constructor\n     * throws an exception.\n     * \n     * If your subclass has a constructor then you can control\n     * what properties are added to `this` via the argument you\n     * pass to `super()`. No arguments are fine, too.\n     */\n\n    function Enum() {\n        var instanceProperties = arguments.length <= 0 || arguments[0] === undefined ? undefined : arguments[0];\n\n        _classCallCheck(this, Enum);\n\n        // new.target would be better than this.constructor,\n        // but isn’t supported by Babel\n        if ({}.hasOwnProperty.call(this.constructor, INITIALIZED)) {\n            throw new Error('Enum classes can’t be instantiated');\n        }\n        if ((typeof instanceProperties === 'undefined' ? 'undefined' : _typeof(instanceProperties)) === 'object' && instanceProperties !== null) {\n            copyProperties(this, instanceProperties);\n        }\n    }\n    /**\n     * Set up the enum, close the class.\n     * \n     * @param arg Either an object whose properties provide the names\n     * and values (which must be mutable objects) of the enum constants.\n     * Or an Array whose elements are used as the names of the enum constants\n     * The values are create by instantiating the current class.\n     */\n\n    _createClass(Enum, [{\n        key: 'toString',\n\n        /**\n         * Default `toString()` method for enum constant.\n         */\n        value: function toString() {\n            return this.constructor.name + '.' + this.name;\n        }\n    }], [{\n        key: 'initEnum',\n        value: function initEnum(arg) {\n            Object.defineProperty(this, 'enumValues', {\n                value: [],\n                configurable: false,\n                writable: false,\n                enumerable: true\n            });\n            if (Array.isArray(arg)) {\n                this._enumValuesFromArray(arg);\n            } else {\n                this._enumValuesFromObject(arg);\n            }\n            Object.freeze(this.enumValues);\n            this[INITIALIZED] = true;\n            return this;\n        }\n    }, {\n        key: '_enumValuesFromArray',\n        value: function _enumValuesFromArray(arr) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = arr[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var key = _step.value;\n\n                    this._pushEnumValue(new this(), key);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: '_enumValuesFromObject',\n        value: function _enumValuesFromObject(obj) {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = Object.keys(obj)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var key = _step2.value;\n\n                    var value = new this(obj[key]);\n                    this._pushEnumValue(value, key);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    }, {\n        key: '_pushEnumValue',\n        value: function _pushEnumValue(enumValue, name) {\n            enumValue.name = name;\n            enumValue.ordinal = this.enumValues.length;\n            Object.defineProperty(this, name, {\n                value: enumValue,\n                configurable: false,\n                writable: false,\n                enumerable: true\n            });\n            this.enumValues.push(enumValue);\n        }\n\n        /**\n         * Given the name of an enum constant, return its value.\n         */\n\n    }, {\n        key: 'enumValueOf',\n        value: function enumValueOf(name) {\n            return this.enumValues.find(function (x) {\n                return x.name === name;\n            });\n        }\n\n        /**\n         * Make enum classes iterable\n         */\n\n    }, {\n        key: Symbol.iterator,\n        value: function value() {\n            return this.enumValues[Symbol.iterator]();\n        }\n    }]);\n\n    return Enum;\n}();\n\nfunction copyProperties(target, source) {\n    // Ideally, we’d use Reflect.ownKeys() here,\n    // but I don’t want to depend on a polyfill\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n        for (var _iterator3 = Object.getOwnPropertyNames(source)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var key = _step3.value;\n\n            var desc = Object.getOwnPropertyDescriptor(source, key);\n            Object.defineProperty(target, key, desc);\n        }\n    } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n            }\n        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n        }\n    }\n\n    return target;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/enumify/lib/enumify.js\n// module id = 38\n// module chunks = 0"],"sourceRoot":""}