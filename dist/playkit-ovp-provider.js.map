{"version":3,"sources":["./providers/webpack/universalModuleDefinition","./providers/webpack/bootstrap 9b5c4a30cc0c30eb667f","./providers/./util/request-builder.js","./providers/./entities/media-sources.js","./providers/./util/logger.js","./providers/./k-provider/common/provider-media-config.js","./providers/./k-provider/common/provider-options/provider-options.js","./providers/./k-provider/common/base-service-result.js","./providers/./entities/media-format.js","./providers/./entities/media-source.js","./providers/./k-provider/ovp/config.js","./providers/./entities/drm.js","./providers/./entities/media-entry.js","./providers/./k-provider/common/data-loader-manager.js","./providers/./k-provider/common/multi-request-builder.js","./providers/./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js","./providers/./k-provider/common/provider-media-info.js","./providers/./k-provider/common/provider-options/provider-env-config.js","./providers/./k-provider/ovp/services/ovp-service.js","./providers/./k-provider/common/base-provider-parser.js","./providers/./k-provider/common/base-provider.js","./providers/./k-provider/common/response-types/kaltura-access-control-message.js","./providers/./k-provider/common/response-types/kaltura-rule-action.js","./providers/./util/clone.js","./providers/../~/js-logger/src/logger.js","./providers/./k-provider/ovp/response-types/kaltura-flavor-asset.js","./providers/./k-provider/ovp/response-types/kaltura-media-entry.js","./providers/./k-provider/ovp/response-types/kaltura-metadata-list-response.js","./providers/./k-provider/ovp/response-types/kaltura-playback-source.js","./providers/./k-provider/ovp/provider.js","./providers/./k-provider/ovp/index.js","./providers/./k-provider/ovp/loaders/data-loader-manager.js","./providers/./k-provider/ovp/loaders/media-entry-loader.js","./providers/./k-provider/ovp/loaders/session-loader.js","./providers/./k-provider/ovp/play-source-url-builder.js","./providers/./k-provider/ovp/provider-parser.js","./providers/./k-provider/ovp/response-types/kaltura-base-entry-list-response.js","./providers/./k-provider/ovp/response-types/kaltura-metadata.js","./providers/./k-provider/ovp/response-types/kaltura-playback-context.js","./providers/./k-provider/ovp/services/base-entry-service.js","./providers/./k-provider/ovp/services/meta-data-service.js","./providers/./k-provider/ovp/services/session-service.js","./providers/./util/xml-parser.js"],"names":["RequestBuilder","headers","Map","serviceUrl","service","action","url","Error","request","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","status","jsonResponse","JSON","parse","responseText","code","message","open","method","forEach","value","key","setRequestHeader","send","params","MediaSources","progressive","dash","hls","source","mediaFormat","name","MP4","push","DASH","HLS","response","p","toJSON","h","d","JsLogger","LogLevel","DEBUG","INFO","TIME","WARN","ERROR","OFF","useDefaults","defaultLevel","getLogger","get","getLogLevel","getLevel","setLogLevel","level","setLevel","ProviderMediaConfig","_id","_name","_session","_sources","_duration","_type","_dvr","_metadata","partnerId","uiConfId","id","SessionConfig","sources","duration","type","dvr","metadata","session","_ks","_partnerId","_uiConfId","ks","ProviderOptions","_logLevel","_env","validate","fromJSON","json","logLevel","env","cdnUrl","param","TypeError","ServiceResult","hasError","objectType","error","ServiceError","data","MediaFormat","mimeType","pathExt","WVM","MP3","SupportedStreamFormat","MediaSource","mimetype","bandwidth","width","height","label","drmData","length","Array","isArray","defaultConfig","serviceParams","apiVersion","format","OVPConfiguration","clientConfig","Object","assign","Drm","licenseUrl","scheme","certificate","MediaEntry","Type","UNKNOWN","dvrStatus","VOD","LIVE","IMAGE","AUDIO","DataLoaderManager","_loaders","loader","execution_loader","isValid","set","startIndex","_multiRequest","requests","add","executionLoaderResponseMap","from","val","index","_loadersResponseMap","execute","then","_multiResponse","success","preparedData","prepareData","err","loaderDataIndexes","results","slice","MultiRequestBuilder","requestParams","serviceDef","stringify","_logger","doHttpRequest","MultiRequestResult","errorText","responseArr","result","serviceResult","KalturaDrmPlaybackPluginData","drm","licenseURL","Scheme","ProviderMediaInfo","_entryId","entryId","ProviderEnvConfig","_serviceUrl","_cdnUrl","config","SERVICE_NAME","OVPService","playerVersion","ovpParams","clientTag","multiReq","getUrl","BaseProviderParser","sourceFormat","assetResponse","playBackContextResult","playbackContext","actionIndex","actions","messages","messagesIndex","BaseProvider","_playerVersion","_isAnonymous","options","mediaInfo","KalturaAccessControlMessage","KalturaRuleAction","DRM_POLICY","BLOCK","PREVIEW","LIMIT_FLAVORS","ADD_TO_STORAGE","LIMIT_DELIVERY_PROFILES","SERVE_FROM_REMOTE_SERVER","REQUEST_HOST_REGEX","LIMIT_THUMBNAIL_CAPTURE","clone","node","e","i","keys","KalturaFlavorAsset","flavorParamsId","fileExt","bitrate","frameRate","isOriginal","isWeb","containerFormat","videoCodecId","language","Status","QUEUED","CONVERTING","READY","DELETED","NOT_APPLICABLE","TEMP","WAIT_FOR_CONVERT","IMPORTING","VALIDATING","EXPORTING","KalturaMediaEntry","entry","description","dataUrl","entryType","mediaType","flavorParamsIds","poster","thumbnailUrl","EntryType","AUTOMATIC","EXTERNAL_MEDIA","MEDIA_CLIP","MIX","PLAYLIST","DATA","LIVE_STREAM","LIVE_CHANNEL","DOCUMENT","MediaType","VIDEO","LIVE_STREAM_FLASH","LIVE_STREAM_WINDOWS_MEDIA","LIVE_STREAM_REAL_MEDIA","LIVE_STREAM_QUICK_TIME","EntryStatus","ERROR_IMPORTING","ERROR_CONVERTING","SCAN_FAILURE","IMPORT","INFECTED","PRECONVERT","PENDING","MODERATE","BLOCKED","NO_CONTENT","EntryModerationStatus","PENDING_MODERATION","APPROVED","REJECTED","FLAGGED_FOR_REVIEW","AUTO_APPROVED","KalturaMetadataListResponse","responseObj","totalCount","metas","objects","map","meta","KalturaPlaybackSource","deliveryProfileId","protocols","flavorIds","protocol","returnValue","protocolsArr","split","OVPProvider","_options","_mediaInfo","_dataLoader","fetchData","_parseDataFromResponse","debug","mediaConfig","has","sessionLoader","mediaLoader","blockedAction","hasBlockActions","errorMessage","hasErrorMessage","mediaEntry","getMediaEntry","isAnonymous","NAME","__NAME__","VERSION","Provider","OVPDataLoaderManager","getMultiRequest","OVPMediaEntryLoader","_response","buildRequests","list","getPlaybackContext","_requests","mediaEntryResponse","entries","metadataListResult","OVPSessionLoader","anonymousSession","PlaySourceUrlBuilder","urlParams","extension","playUrl","endsWith","OVPProviderParser","metadataList","kalturaSources","_getParsedSources","_parseMetadata","addAdaptiveSource","parsedSource","_parseAdaptiveSource","flavorAssets","parseAdaptiveSources","filter","_isProgressiveSource","parseProgressiveSources","progressiveSource","find","_parseProgressiveSources","kalturaSource","mediaSource","hasFlavorIds","build","getProtocol","_getBaseProtocol","hasDrmData","drmParams","sourceId","flavor","metaXml","domParser","DOMParser","xml","replace","parseFromString","metasObj","xmlToJson","metaKeys","protocolRegex","exec","document","location","KalturaBaseEntryListResponse","KalturaMetadata","metadataProfileId","metadataProfileVersion","metadataObjectType","objectId","version","created","Date","setUTCSeconds","createdAt","updated","updatedAt","ObjectType","AD_CUE_POINT","ANNOTATION","CODE_CUE_POINT","THUMB_CUE_POINT","ENTRY","CATEGORY","USER","PARTNER","DYNAMIC_OBJECT","VALID","INVALID","KalturaPlaybackContext","OVPBaseEntryService","tag","contextDataParams","flavorTags","getEntryListReqParams","filterParams","redirectFromEntryId","responseProfileParams","fields","responseProfile","OVPMetadataService","objectIdEqual","metadataObjectTypeEqual","OVPSessionService","widgetId","XmlParser","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","old"],"mappings":"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9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AA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","file":"playkit-ovp-provider.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ovp\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"providers\"] = root[\"playkit\"][\"providers\"] || {}, root[\"playkit\"][\"providers\"][\"ovp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b5c4a30cc0c30eb667f","//@flow\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @member - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @member - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @member - Service tag\n   * @type {string}\n   */\n  tag: string;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    if (!this.url) {\n      throw new Error(\"serviceUrl is mandatory for request builder\");\n    }\n    let request = new XMLHttpRequest();\n    return new Promise((resolve, reject) => {\n      request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n          if (request.status === 200) {\n            let jsonResponse = JSON.parse(request.responseText);\n            if (jsonResponse && typeof(jsonResponse) === 'object' && jsonResponse.code && jsonResponse.message)\n              reject(jsonResponse);\n            else\n              resolve(jsonResponse);\n          } else {\n            reject(request.responseText);\n          }\n        }\n      };\n      request.open(this.method, this.url);\n      this.headers.forEach((value, key) => {\n        request.setRequestHeader(key, value);\n      });\n      request.send(this.params);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/request-builder.js","// @flow\nimport MediaSource from './media-source'\nimport type {MediaSourceObject} from './media-source'\nimport type {MediaFormatType} from './media-format'\nimport {MediaFormat} from './media-format'\n\nexport type MediaSourcesObject = {\n  progressive: Array<MediaSourceObject>,\n  dash: Array<MediaSourceObject>,\n  hls: Array<MediaSourceObject>\n};\n\nexport default class MediaSources {\n  /**\n   * Progressive download media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  progressive: Array<MediaSource>;\n  /**\n   * Dash media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  dash: Array<MediaSource>;\n  /**\n   * Hls media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  hls: Array<MediaSource>;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.progressive = [];\n    this.dash = [];\n    this.hls = [];\n  }\n\n  /**\n   * Maps the source to one of the containers according to his media format.\n   * @param {MediaSource} source - The source to add to one of the containers.\n   * @param {MediaFormat} mediaFormat - The media format of the source.\n   * @returns {void}\n   */\n  map(source: MediaSource, mediaFormat: ?MediaFormatType) {\n    if (mediaFormat) {\n      switch (mediaFormat.name) {\n        case MediaFormat.MP4.name:\n          this.progressive.push(source);\n          break;\n        case MediaFormat.DASH.name:\n          this.dash.push(source);\n          break;\n        case MediaFormat.HLS.name:\n          this.hls.push(source);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {MediaSourcesObject} - The json class object.\n   */\n  toJSON(): MediaSourcesObject {\n    const response: MediaSourcesObject = {\n      progressive: [],\n      dash: [],\n      hls: []\n    };\n    this.progressive.forEach(p => response.progressive.push(p.toJSON()));\n    this.hls.forEach(h => response.hls.push(h.toJSON()));\n    this.dash.forEach(d => response.dash.push(d.toJSON()));\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-sources.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nconst LogLevel: { [level: string]: Object } = {\n  DEBUG: JsLogger.DEBUG,\n  INFO: JsLogger.INFO,\n  TIME: JsLogger.TIME,\n  WARN: JsLogger.WARN,\n  ERROR: JsLogger.ERROR,\n  OFF: JsLogger.OFF\n};\n\nJsLogger.useDefaults({defaultLevel: JsLogger.ERROR});\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  if (!name) {\n    return JsLogger;\n  }\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {Object} - the log level\n */\nfunction getLogLevel(name?: string): Object {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {Object} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: Object, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {LogLevel, getLogLevel, setLogLevel};\n\n\n\n// WEBPACK FOOTER //\n// ./util/logger.js","// @flow\nimport MediaSources from '../../entities/media-sources'\nimport type {MediaSourcesObject} from '../../entities/media-sources'\n\nexport type SessionConfigObject = {\n  partnerId: number,\n  uiConfId?: number,\n  ks?: string\n};\n\nexport type ProviderMediaConfigObject = {\n  id: string,\n  name: string,\n  session: SessionConfigObject,\n  sources: MediaSourcesObject,\n  duration: number,\n  type: string,\n  dvr: boolean,\n  metadata: Object\n};\n\nexport default class ProviderMediaConfig {\n  _id: string;\n  _name: string;\n  _session: SessionConfig;\n  _sources: MediaSources;\n  _duration: number;\n  _type: string;\n  _dvr: boolean;\n  _metadata: Object;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string): void {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string): void {\n    this._name = value;\n  }\n\n  get session(): SessionConfig {\n    return this._session;\n  }\n\n  get sources(): MediaSources {\n    return this._sources;\n  }\n\n  set sources(value: MediaSources): void {\n    this._sources = value;\n  }\n\n  get duration(): number {\n    return this._duration;\n  }\n\n  set duration(value: number): void {\n    this._duration = value;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  set type(value: string): void {\n    this._type = value;\n  }\n\n  get dvr(): boolean {\n    return this._dvr;\n  }\n\n  set dvr(value: boolean): void {\n    this._dvr = value;\n  }\n\n  get metadata(): Object {\n    return this._metadata;\n  }\n\n  set metadata(value: Object): void {\n    this._metadata = value;\n  }\n\n  constructor(partnerId: number, uiConfId: ?number) {\n    this.id = '';\n    this.name = '';\n    this._session = new SessionConfig(partnerId, uiConfId);\n    this.sources = new MediaSources();\n    this.duration = 0;\n    this.type = 'Unknown';\n    this.dvr = false;\n    this.metadata = {};\n  }\n\n  toJSON(): ProviderMediaConfigObject {\n    return {\n      id: this.id,\n      name: this.name,\n      session: this.session.toJSON(),\n      sources: this.sources.toJSON(),\n      duration: this.duration,\n      type: this.type,\n      dvr: this.dvr,\n      metadata: this.metadata\n    };\n  }\n}\n\nclass SessionConfig {\n  _partnerId: number;\n  _uiConfId: ?number;\n  _ks: ?string;\n\n  get ks(): ?string {\n    return this._ks;\n  }\n\n  set ks(value: ?string): void {\n    this._ks = value;\n  }\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get uiConfId(): ?number {\n    return this._uiConfId;\n  }\n\n  constructor(partnerId: number, uiConfId: ?number) {\n    this._partnerId = partnerId;\n    this._uiConfId = uiConfId;\n  }\n\n  toJSON(): SessionConfigObject {\n    const response: SessionConfigObject = {\n      partnerId: this.partnerId\n    };\n    if (this.uiConfId) response.uiConfId = this.uiConfId;\n    if (this.ks) response.ks = this.ks;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-media-config.js","// @flow\nimport ProviderEnvConfig from './provider-env-config'\nimport type {ProviderEnvConfigObject} from './provider-env-config'\nimport {LogLevel} from '../../../util/logger'\n\nexport type ProviderOptionsObject = {\n  partnerId: number,\n  logLevel: string,\n  ks: string,\n  uiConfId?: number,\n  env?: ProviderEnvConfigObject\n};\n\nexport default class ProviderOptions {\n  _partnerId: number;\n  _logLevel: string = 'ERROR';\n  _ks: string = '';\n  _uiConfId: number;\n  _env: ProviderEnvConfig;\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get logLevel(): string {\n    return this._logLevel;\n  }\n\n  set logLevel(value: string): void {\n    if (typeof value === 'string' && LogLevel[value]) {\n      this._logLevel = value;\n    }\n  }\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string): void {\n    if (typeof value !== 'string') return;\n    this._ks = value;\n  }\n\n  get uiConfId(): number {\n    return this._uiConfId;\n  }\n\n  get env(): ProviderEnvConfig {\n    return this._env;\n  }\n\n  set env(value: ProviderEnvConfig) {\n    if (value instanceof ProviderEnvConfig) {\n      this._env = value;\n    } else {\n      this._env = new ProviderEnvConfig(value);\n    }\n  }\n\n  constructor(partnerId: number | ProviderOptionsObject, uiConfId?: number) {\n    validate(partnerId);\n    if (typeof partnerId === 'number') {\n      this._partnerId = partnerId;\n      if (typeof uiConfId === 'number') {\n        this._uiConfId = uiConfId;\n      }\n    } else if (typeof partnerId === 'object') {\n      this.fromJSON(partnerId);\n    }\n  }\n\n  fromJSON(json: ProviderOptionsObject): void {\n    this._partnerId = json.partnerId;\n    this.ks = json.ks || this._ks;\n    this.logLevel = json.logLevel || this._logLevel;\n    if (typeof json.uiConfId === 'number') {\n      this._uiConfId = json.uiConfId;\n    }\n    if (json.env) {\n      this.env = new ProviderEnvConfig(json.env.serviceUrl, json.env.cdnUrl);\n    }\n  }\n\n  toJSON(): ProviderOptionsObject {\n    const response: ProviderOptionsObject = {\n      partnerId: this.partnerId,\n      logLevel: this.logLevel,\n      ks: this.ks\n    };\n    if (this.uiConfId) response.uiConfId = this.uiConfId;\n    if (this.env) response.env = this.env.toJSON();\n    return response;\n  }\n}\n\n/**\n * Validate user input\n * @param {number | ProviderOptionsObject} param - user input\n * @returns {void}\n */\nfunction validate(param: number | ProviderOptionsObject): void {\n  if (typeof param === 'number') return;\n  if (typeof param === 'object' && typeof param.partnerId === 'number') return;\n  throw new TypeError('Invalid ProviderOptions: partnerId must be provided and be a number');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-options/provider-options.js","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-service-result.js","//@flow\nexport type MediaFormatType = {\n  name: string,\n  mimeType: string,\n  pathExt: string\n};\n\nexport const MediaFormat: { [name: string]: MediaFormatType } = {\n  DASH: {\n    name: 'dash',\n    mimeType: 'application/dash+xml',\n    pathExt: 'mpd'\n  },\n  HLS: {\n    name: 'hls',\n    mimeType: 'application/x-mpegURL',\n    pathExt: 'm3u8'\n  },\n  WVM: {\n    name: 'wvm',\n    mimeType: 'video/wvm',\n    pathExt: 'wvm'\n  },\n  MP4: {\n    name: 'mp4',\n    mimeType: 'video/mp4',\n    pathExt: 'mp4'\n  },\n  MP3: {\n    name: 'mp3',\n    mimeType: 'audio/mpeg',\n    pathExt: 'mp3'\n  }\n};\n\nexport const SupportedStreamFormat: Map<string, MediaFormatType> = new Map([\n  [\"mpegdash\", MediaFormat.DASH],\n  [\"applehttp\", MediaFormat.HLS],\n  [\"url\", MediaFormat.MP4]\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-format.js","//@flow\nimport Drm from './drm'\nimport type {DrmObject} from './drm'\n\nexport type MediaSourceObject = {\n  id: string,\n  url: string,\n  mimetype: string,\n  bandwidth?: number,\n  width?: number,\n  height?: number,\n  label?: string,\n  drmData?: Array<DrmObject>\n};\n\nexport default class MediaSource {\n  /**\n   * @member - media source id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - media source url\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - media source mimetype\n   * @type {string}\n   */\n  mimetype: string;\n  /**\n   * @member - media source drm data\n   * @type {Array<Drm>}\n   */\n  drmData: Array<Drm>;\n  /**\n   * @member - media source bandwidth\n   * @type {number}\n   */\n  bandwidth: number;\n  /**\n   * @member - media source width\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - media source height\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - media source label\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * Convert class to native js object.\n   * @returns {MediaSourceObject} - The json class object.\n   */\n  toJSON(): MediaSourceObject {\n    const response: MediaSourceObject = {\n      id: this.id,\n      url: this.url,\n      mimetype: this.mimetype\n    };\n    if (this.bandwidth) response.bandwidth = this.bandwidth;\n    if (this.width) response.width = this.width;\n    if (this.height) response.height = this.height;\n    if (this.label) response.label = this.label;\n    if (this.drmData && this.drmData.length > 0) {\n      response.drmData = [];\n      this.drmData.forEach(d => {\n        if (Array.isArray(response.drmData)) {\n          response.drmData.push(d.toJSON());\n        }\n      });\n    }\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-source.js","//@flow\nimport {clone} from '../../util/clone'\n\nconst defaultConfig: Object = {\n  serviceUrl: \"//www.kaltura.com/api_v3\",\n  cdnUrl: \"//cdnapisec.kaltura.com\",\n  serviceParams: {\n    apiVersion: '3.3.0',\n    format: 1\n  }\n};\n\nexport default class OVPConfiguration {\n  static set(clientConfig?: Object) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OVPConfiguration};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/config.js","//@flow\nexport type DrmObject = {\n  licenseUrl: string,\n  scheme: string,\n  certificate?: string\n};\n\nexport default class Drm {\n  /**\n   * @member - license url\n   * @type {string}\n   */\n  licenseUrl: string;\n  /**\n   * @member - drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - drm certificate\n   * @type {string}\n   */\n  certificate: string;\n\n  /**\n   * @constructor\n   * @param {string} licenseUrl - the license url\n   * @param {string} scheme - the drm scheme\n   * @param {?string} certificate - the drm certificate\n   */\n  constructor(licenseUrl: string, scheme: string, certificate: ?string) {\n    this.licenseUrl = licenseUrl;\n    this.scheme = scheme;\n    if (certificate) {\n      this.certificate = certificate;\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {DrmObject} - The json class object.\n   */\n  toJSON(): DrmObject {\n    const response: DrmObject = {\n      licenseUrl: this.licenseUrl,\n      scheme: this.scheme\n    };\n    if (this.certificate) response.certificate = this.certificate;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/drm.js","//@flow\nimport MediaSources from './media-sources'\nimport type {MediaSourcesObject} from './media-sources'\n\nexport type MediaEntryObject = {\n  id: string,\n  name: string,\n  sources: MediaSourcesObject,\n  duration: number,\n  dvrStatus: number,\n  metadata: Object,\n  type: string\n};\n\nexport default class MediaEntry {\n  static Type: { [type: string]: string } = {\n    VOD: 'Vod',\n    LIVE: 'Live',\n    IMAGE: 'Image',\n    AUDIO: 'Audio',\n    UNKNOWN: 'Unknown'\n  };\n\n  /**\n   * @member - entry id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - entry name\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - entry sources\n   * @type {MediaSources}\n   */\n  sources: MediaSources;\n  /**\n   * @member - entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - entry type\n   * @type {string}\n   */\n  type: string;\n  /**\n   * @member - entry metadata\n   * @type {Object}\n   */\n  metadata: Object;\n  /**\n   * @member - DVR status\n   * @type {number}\n   */\n  dvrStatus: number;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.metadata = new Map();\n    this.sources = new MediaSources();\n    this.type = MediaEntry.Type.UNKNOWN;\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {MediaEntryObject} - The json class object.\n   */\n  toJSON(): MediaEntryObject {\n    return {\n      id: this.id,\n      name: this.name,\n      sources: this.sources.toJSON(),\n      duration: this.duration,\n      dvrStatus: this.dvrStatus,\n      metadata: this.metadata,\n      type: this.type\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-entry.js","// @flow\nimport MultiRequestBuilder, {MultiRequestResult} from './multi-request-builder'\n\nexport default class DataLoaderManager {\n  /**\n   * @member - Loaders response map index\n   * @type {Map<string,Array<number>>}\n   * @private\n   * @static\n   */\n  static _loadersResponseMap: Map<string, Array<number>> = new Map();\n  /**\n   * @member - Loaders multi request\n   * @type {MultiRequestBuilder}\n   * @protected\n   */\n  _multiRequest: MultiRequestBuilder;\n  /**\n   * @member - Loaders multi response\n   * @type {MultiRequestResult}\n   * @private\n   */\n  _multiResponse: MultiRequestResult;\n  /**\n   * @member - Loaders to execute\n   * @type {Map<string,Function>}\n   * @private\n   */\n  _loaders: Map<string, ILoader> = new Map();\n\n  /**\n   * Add loader too execution loaders map\n   * @function\n   * @param {Function} loader Loader to add\n   * @param {Object} params Loader params\n   * @returns {void}\n   */\n  add(loader: Function, params: Object): void {\n    let execution_loader = new loader(params);\n    if (execution_loader.isValid()) {\n      this._loaders.set(loader.id, execution_loader);\n      // Get the start index from the multiReqeust before adding current execution_loader requests\n      let startIndex = this._multiRequest.requests.length;\n      // Get the requests\n      let requests = execution_loader.requests;\n      // Add requests to muktiRequest queue\n      requests.forEach((request) => {\n        this._multiRequest.add(request);\n      });\n      // Create range array of current execution_loader requests\n      let executionLoaderResponseMap = Array.from(new Array(requests.length), (val, index) => index + startIndex);\n      // Add to map\n      DataLoaderManager._loadersResponseMap.set(loader.id, executionLoaderResponseMap);\n    }\n  }\n\n  /**\n   * Get data from all loaders using multi request\n   * @function\n   * @returns {Promise} Promise\n   */\n  fetchData(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._multiRequest.execute()\n        .then(response => {\n          this._multiResponse = response;\n          if (!response.success) {\n            reject(response);\n          } else {\n            let preparedData: Object = this.prepareData(response);\n            if (preparedData.success) {\n              resolve(this._loaders);\n            } else {\n              reject({success: false, data: preparedData.error});\n            }\n          }\n        }, err => {\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Prepare fetched data\n   * @function\n   * @param {MultiRequestResult} response - The multi request result\n   * @returns {Object} - The prepared data\n   */\n  prepareData(response: MultiRequestResult): Object {\n    this._loaders.forEach(function (loader, name) {\n      let loaderDataIndexes = DataLoaderManager._loadersResponseMap.get(name);\n      try {\n        if (loaderDataIndexes && loaderDataIndexes.length > 0) {\n          loader.response = (response.results.slice(loaderDataIndexes[0], loaderDataIndexes[loaderDataIndexes.length - 1] + 1));\n        }\n      } catch (err) {\n        return {success: false, error: err};\n      }\n    });\n    return {success: true, data: this._loaders};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/data-loader-manager.js","//@flow\nimport RequestBuilder from '../../util/request-builder'\nimport getLogger from '../../util/logger'\nimport ServiceResult from './base-service-result'\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger(\"MultiRequestBuilder\");\n  /**\n   * @member - Array of requests\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(): Promise<Object> {\n    try {\n      this.params = JSON.stringify(this.params);\n    } catch (err) {\n      MultiRequestBuilder._logger.error(`${err.message}`);\n    }\n    return new Promise((resolve, reject) => {\n      this.doHttpRequest().then(data => {\n        resolve(new MultiRequestResult(data));\n      }, err => {\n        const errorText: string = `Error on multiRequest execution, error <${err}>.`;\n        reject(errorText);\n      });\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger(\"MultiRequestResult\");\n  /**\n   * @member - Is success\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @member - Multi request response data\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    const responseArr = response.result ? response.result : response;\n    responseArr.forEach((result) => {\n      const serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        MultiRequestResult._logger.error(`Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`);\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/multi-request-builder.js","//@flow\nexport default class KalturaDrmPlaybackPluginData {\n  static Scheme: { [scheme: string]: string } = {\n    'drm.PLAYREADY_CENC': 'com.microsoft.playready',\n    'drm.WIDEVINE_CENC': 'com.widevine.alpha',\n    'fairplay.FAIRPLAY': 'com.apple.fairplay',\n    'WIDEVINE_CENC': 'com.widevine.alpha',\n    'PLAYREADY_CENC': 'com.microsoft.playready',\n    'FAIRPLAY': 'com.apple.fairplay'\n  };\n\n  /**\n   * @member - The drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - The license URL\n   * @type {string}\n   */\n  licenseURL: string;\n\n  /**\n   * @member - The drm certificate\n   * @type {?string}\n   */\n  certificate: ?string;\n\n  /**\n   * @constructor\n   * @param {Object} drm The json response\n   */\n  constructor(drm: any) {\n    this.scheme = drm.scheme;\n    this.licenseURL = drm.licenseURL;\n    this.certificate = drm.certificate;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js","// @flow\nexport type ProviderMediaInfoObject = {\n  entryId: string | number,\n  ks?: string\n};\n\nexport default class ProviderMediaInfo {\n  _entryId: number | string;\n  _ks: string;\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string) {\n    this._ks = value;\n  }\n\n  get entryId(): number | string {\n    return this._entryId;\n  }\n\n  constructor(entryId: number | string) {\n    this._entryId = entryId;\n  }\n\n  toJSON(): ProviderMediaInfoObject {\n    const response: ProviderMediaInfoObject = {\n      entryId: this.entryId\n    };\n    if (this.ks) response.ks = this.ks;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-media-info.js","// @flow\nexport type ProviderEnvConfigObject = {\n  serviceUrl: string,\n  cdnUrl?: string\n};\n\nexport default class ProviderEnvConfig {\n  _serviceUrl: string;\n  _cdnUrl: string;\n\n  get serviceUrl(): string {\n    return this._serviceUrl;\n  }\n\n  get cdnUrl(): string {\n    return this._cdnUrl;\n  }\n\n  set cdnUrl(value: string): void {\n    if (typeof value !== 'string') return;\n    this._cdnUrl = value;\n  }\n\n  constructor(serviceUrl: string | ProviderEnvConfigObject, cdnUrl?: string) {\n    validate(serviceUrl);\n    if (typeof serviceUrl === 'string') {\n      this._serviceUrl = serviceUrl;\n      if (cdnUrl) {\n        this.cdnUrl = cdnUrl;\n      }\n    } else if (typeof serviceUrl === 'object') {\n      this.fromJSON(serviceUrl);\n    }\n  }\n\n  fromJSON(json: ProviderEnvConfigObject): void {\n    this._serviceUrl = json.serviceUrl;\n    if (json.cdnUrl) {\n      this.cdnUrl = json.cdnUrl;\n    }\n  }\n\n  toJSON(): ProviderEnvConfigObject {\n    const response: ProviderEnvConfigObject = {\n      serviceUrl: this.serviceUrl\n    };\n    if (this.cdnUrl) response.cdnUrl = this.cdnUrl;\n    return response;\n  }\n}\n\n/**\n * Validate user input\n * @param {string | ProviderEnvConfigObject} param - user input\n * @returns {void}\n */\nfunction validate(param: string | ProviderEnvConfigObject): void {\n  if (typeof param === 'string') return;\n  if (typeof param === 'object' && typeof param.serviceUrl === 'string') return;\n  throw new TypeError('Invalid ProviderEnnConfig: serviceUrl must be provided and be a string');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-options/provider-env-config.js","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder'\nimport OVPConfiguration from '../config'\n\nconst config = OVPConfiguration.get();\nconst SERVICE_NAME: string = \"multirequest\";\n\nexport default class OVPService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ovp params\n   * @function getMultiRequest\n   * @param {string} playerVersion The player version\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(playerVersion: string, ks: string, partnerId?: number): MultiRequestBuilder {\n    const ovpParams = config.serviceParams;\n    Object.assign(ovpParams, {ks: ks, clientTag: 'html5:v' + playerVersion});\n    if (partnerId) {\n      Object.assign(ovpParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = \"POST\";\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ovpParams;\n    return multiReq;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/ovp-service.js","// @flow\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport MediaEntry from '../../entities/media-entry'\nimport MediaSources from '../../entities/media-sources'\nimport MediaSource from '../../entities/media-source'\nimport type {OTTKalturaPlaybackSource} from '../ott/response-types/kaltura-playback-source'\nimport type {OVPKalturaPlaybackSource} from '../ovp/response-types/kaltura-playback-source'\n\nexport default class BaseProviderParser {\n  static getMediaEntry(...parms): MediaEntry { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaEntry method must be implement by the derived class`);\n  }\n\n  static _getParsedSources(...parms): MediaSources { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_getParsedSources method must be implement by the derived class`);\n  }\n\n  static _parseAdaptiveSource(...parms): MediaSource { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseAdaptiveSource method must be implement by the derived class`);\n  }\n\n  static _isProgressiveSource(source: OVPKalturaPlaybackSource | OTTKalturaPlaybackSource): boolean {\n    const sourceFormat = SupportedStreamFormat.get(source.format);\n    return !!sourceFormat && sourceFormat.name === 'mp4';\n  }\n\n  static hasBlockActions(assetResponse: any): any {\n    if (assetResponse && assetResponse.playBackContextResult) {\n      const playbackContext = assetResponse.playBackContextResult;\n      for (let actionIndex = 0; actionIndex < playbackContext.actions.length; actionIndex++) {\n        if (playbackContext.actions[actionIndex].type === \"BLOCK\") {\n          return playbackContext.actions[actionIndex];\n        }\n      }\n    }\n    return null;\n  }\n\n  static hasErrorMessage(assetResponse: any): any {\n    const messages = assetResponse.playBackContextResult.messages;\n    for (let messagesIndex = 0; messagesIndex < messages.length; messagesIndex++) {\n      if (messages[messagesIndex].code !== \"OK\") {\n        return messages[messagesIndex];\n      }\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider-parser.js","// @flow\nimport {setLogLevel, getLogLevel, LogLevel} from '../../util/logger'\nimport DataLoaderManager from './data-loader-manager'\nimport ProviderOptions from './provider-options/provider-options'\nimport ProviderMediaConfig from './provider-media-config'\n\nexport default class BaseProvider<MI> {\n  _partnerId: number;\n  _ks: string;\n  _uiConfId: ?number;\n  _dataLoader: DataLoaderManager;\n  _playerVersion: string;\n  _logger: any;\n  _isAnonymous: boolean;\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get uiConfId(): ?number {\n    return this._uiConfId;\n  }\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string): void {\n    this._ks = value;\n  }\n\n  get playerVersion(): string {\n    return this._playerVersion;\n  }\n\n  get isAnonymous(): boolean {\n    return this._isAnonymous;\n  }\n\n  constructor(options: ProviderOptions, playerVersion: string) {\n    this._partnerId = options.partnerId;\n    this._uiConfId = options.uiConfId;\n    this._isAnonymous = !options.ks;\n    this.ks = options.ks;\n    this._playerVersion = playerVersion;\n    if (options.logLevel && this.LogLevel[options.logLevel]) {\n      setLogLevel(this.LogLevel[options.logLevel]);\n    }\n  }\n\n  getMediaConfig(mediaInfo: MI): Promise<ProviderMediaConfig> { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaConfig method must be implement by the derived class`);\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>): ProviderMediaConfig { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseDataFromResponse method must be implement by the derived class`);\n  }\n\n  get LogLevel(): { [level: string]: Object } {\n    return LogLevel;\n  }\n\n  getLogLevel(name?: string): Object {\n    return getLogLevel(name);\n  }\n\n  setLogLevel(level: Object, name?: string): void {\n    setLogLevel(level, name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider.js","//@flow\nexport default class KalturaAccessControlMessage {\n  /**\n   * @member - The access control message\n   * @type {string}\n   */\n  message: string;\n  /**\n   *  @member - The access control message code\n   * @@type {string}\n   */\n  code: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: Object) {\n    this.message = data.message;\n    this.code = data.code;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-access-control-message.js","//@flow\nexport default class KalturaRuleAction {\n  static Type: { [type: string]: string | number } = {\n    DRM_POLICY: \"drm.DRM_POLICY\",\n    BLOCK: 1,\n    PREVIEW: 2,\n    LIMIT_FLAVORS: 3,\n    ADD_TO_STORAGE: 4,\n    LIMIT_DELIVERY_PROFILES: 5,\n    SERVE_FROM_REMOTE_SERVER: 6,\n    REQUEST_HOST_REGEX: 7,\n    LIMIT_THUMBNAIL_CAPTURE: 8\n  };\n\n  /**\n   * @member - The type of the action\n   * @type {string|number}\n   */\n  type: string | number;\n\n  /**\n   * @constructor\n   * @param {Object} data - The response\n   */\n  constructor(data: Object) {\n    this.type = data.type;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-rule-action.js","const clone = (data) => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if (\n        (typeof e === \"object\" && e !== {}) ||\n        (Array.isArray(e) && e.length > 0)\n      ) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === \"object\") {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach((key) => {\n      if (\n        (typeof node[key] === \"object\" && node[key] !== {}) ||\n        (Array.isArray(node[key]) && node[key].length > 0)\n      ) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n\n\n\n// WEBPACK FOOTER //\n// ./util/clone.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 24\n// module chunks = 0 1","//@flow\nexport default class KalturaFlavorAsset {\n  static Status: { [status: string]: number } = {\n    ERROR: -1,\n    QUEUED: 0,\n    CONVERTING: 1,\n    READY: 2,\n    DELETED: 3,\n    NOT_APPLICABLE: 4,\n    TEMP: 5,\n    WAIT_FOR_CONVERT: 6,\n    IMPORTING: 7,\n    VALIDATING: 8,\n    EXPORTING: 9\n  };\n\n  /**\n   * @member - The ID of the Flavor Asset\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member -The Flavor Params used to create this Flavor Asset\n   * @type {string}\n   */\n  flavorParamsId: string;\n  /**\n   * @member -The file extension\n   * @type {string}\n   */\n  fileExt: string;\n  /**\n   * @member - The overall bitrate (in KBits) of the Flavor Asset\n   *  @type {string}\n   */\n  bitrate: number;\n  /**\n   * @member - The width of the Flavor Asset\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - The height of the Flavor Asset\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - The frame rate (in FPS) of the Flavor Asset\n   * @type {number}\n   */\n  frameRate: number;\n  /**\n   * @member - True if this Flavor Asset is the original source\n   * @type {number}\n   */\n  isOriginal: boolean;\n  /**\n   * @member - True if this Flavor Asset is playable in KDP\n   * @type {boolean}\n   */\n  isWeb: boolean;\n  /**\n   * @member - The container format\n   * @type {boolean}\n   */\n  containerFormat: string;\n  /**\n   *@member - The video codec\n   * @type {boolean}\n   */\n  videoCodecId: string;\n  /**\n   * @member - The status of the Flavor Asset\n   * @type {number}\n   */\n  status: number;\n  /**\n   * @member - The language of the flavor asset\n   * @type {Status}\n   */\n  language: string;\n  /**\n   * @member - The label of the flavor asset\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: any) {\n    this.id = data.id;\n    this.flavorParamsId = data.flavorParamsId;\n    this.fileExt = data.fileExt;\n    this.bitrate = data.bitrate;\n    this.width = data.width;\n    this.height = data.height;\n    this.id = data.id;\n    this.frameRate = data.frameRate;\n    this.isOriginal = data.isOriginal;\n    this.isWeb = data.isWeb;\n    this.containerFormat = data.containerFormat;\n    this.videoCodecId = data.videoCodecId;\n    this.status = data.status;\n    this.language = data.language;\n    this.label = data.label;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-flavor-asset.js","//@flow\nexport default class KalturaMediaEntry {\n  static EntryType: { [entryType: string]: { value: number | string } } = {\n    AUTOMATIC: {value: -1},\n    EXTERNAL_MEDIA: {value: \"externalMedia.externalMedia\"},\n    MEDIA_CLIP: {value: 1},\n    MIX: {value: 2},\n    PLAYLIST: {value: 5},\n    DATA: {value: 6},\n    LIVE_STREAM: {value: 7},\n    LIVE_CHANNEL: {value: 8},\n    DOCUMENT: {value: 10}\n  };\n\n  static MediaType: { [mediaType: string]: { value: number } } = {\n    VIDEO: {value: 1},\n    IMAGE: {value: 2},\n    AUDIO: {value: 5},\n    LIVE_STREAM_FLASH: {value: 201},\n    LIVE_STREAM_WINDOWS_MEDIA: {value: 202},\n    LIVE_STREAM_REAL_MEDIA: {value: 203},\n    LIVE_STREAM_QUICK_TIME: {value: 204}\n  };\n\n  static EntryStatus: { [status: string]: string | number } = {\n    ERROR_IMPORTING: -2,\n    ERROR_CONVERTING: -1,\n    SCAN_FAILURE: \"virusScan.ScanFailure\",\n    IMPORT: 0,\n    INFECTED: \"virusScan.Infected\",\n    PRECONVERT: 1,\n    READY: 2,\n    DELETED: 3,\n    PENDING: 4,\n    MODERATE: 5,\n    BLOCKED: 6,\n    NO_CONTENT: 7\n  };\n\n  static EntryModerationStatus: { [status: string]: number } = {\n    PENDING_MODERATION: 1,\n    APPROVED: 2,\n    REJECTED: 3,\n    FLAGGED_FOR_REVIEW: 4,\n    MODERATE: 5,\n    AUTO_APPROVED: 6\n  };\n\n  /**\n   * @member - The entry id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - Entry name (Min 1 chars)\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - Entry description\n   * @type {string}\n   */\n  description: string;\n  /**\n   * @member - The URL used for playback. This is not the download URL.\n   * @type {string}\n   */\n  dataUrl: string;\n  /**\n   * @member - Comma separated flavor params ids that exists for this media entry\n   * @type {string}\n   */\n  flavorParamsIds: string;\n  /**\n   * @member - The entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - The type of the entry, this is auto filled by the derived entry object\n   * @type {{ value: string | number }}\n   */\n  type: { value: string | number };\n  /**\n   * @member - The type of the entry, this is auto filled by the derived entry object (Image, Audio etc.)\n   * @type {{ value: number }}\n   */\n  entryType: { value: number };\n  /**\n   * @member - Entry poster image\n   * @type {string}\n   */\n  poster: string;\n  /**\n   * @member - DVR status\n   * @type {number}\n   */\n  dvrStatus: number;\n\n  /**\n   * @constructor\n   * @param {Object} entry The json response\n   */\n  constructor(entry: Object) {\n    this.id = entry.id;\n    this.name = entry.name;\n    this.description = entry.description;\n    this.dataUrl = entry.dataUrl;\n    this.type = entry.type;\n    this.entryType = entry.mediaType;\n    this.flavorParamsIds = entry.flavorParamsIds;\n    this.duration = entry.duration;\n    this.poster = entry.thumbnailUrl;\n    this.dvrStatus = entry.dvrStatus;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-media-entry.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaMetadata from './kaltura-metadata'\n\nexport default class KalturaMetadataListResponse extends ServiceResult {\n  totalCount: number;\n  metas: Array<KalturaMetadata>;\n\n  /**\n   * @constructor\n   * @param {Object} responseObj The response\n   */\n  constructor(responseObj: Object) {\n    super(responseObj);\n    if (!this.hasError) {\n      this.totalCount = responseObj.totalCount;\n      if (this.totalCount > 0) {\n        this.metas = [];\n        responseObj.objects.map(meta => this.metas.push(new KalturaMetadata(meta)));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-metadata-list-response.js","//@flow\nimport KalturaDrmPlaybackPluginData from '../../common/response-types/kaltura-drm-playback-plugin-data'\n\nexport type OVPKalturaPlaybackSource = KalturaPlaybackSource;\n\nexport default class KalturaPlaybackSource {\n  /**\n   * @member - source format according to delivery profile streamer type (applehttp, mpegdash etc.)\n   * @type {string}\n   */\n  format: string;\n  /**\n   * @member - delivery profile Id\n   * @type {string}\n   */\n  deliveryProfileId: string;\n  /**\n   * @member - The source URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - comma separated string according to deliveryProfile media protocols ('http,https' etc.)\n   * @type {string}\n   */\n  protocols: string;\n  /**\n   * @member - comma separated string of flavor ids\n   * @type {string}\n   */\n  flavorIds: string;\n  /**\n   * @member - drm data object containing relevant license url ,scheme name and certificate\n   * @type {Array<KalturaDrmPlaybackPluginData>}\n   */\n  drm: Array<KalturaDrmPlaybackPluginData> = [];\n\n  /**\n   * @constructor\n   * @param {Object} source The response\n   */\n  constructor(source: Object) {\n    this.format = source.format;\n    this.deliveryProfileId = source.deliveryProfileId;\n    this.url = source.url;\n    this.protocols = source.protocols;\n    this.flavorIds = source.flavorIds;\n    if (source.drm) {\n      source.drm.map(drm => this.drm.push(new KalturaDrmPlaybackPluginData(drm)));\n    }\n  }\n\n  /**\n   * Checks if source has DRM data\n   * @function hasDrmData\n   * @returns {boolean} Is source has DRM\n   */\n  hasDrmData(): boolean {\n    return this.drm && this.drm.length > 0;\n  }\n\n  /**\n   * Checks if source has flavor IDs\n   * @function hasFlavorIds\n   * @returns {boolean} Is source ha flavor IDs\n   */\n  hasFlavorIds(): boolean {\n    return !!this.flavorIds && this.flavorIds.length > 0;\n  }\n\n  /**\n   * Returns source desired protocol if supported\n   * @param {string} protocol - the desired protocol for the source (base play url protocol)\n   * @returns {string} - protocol if protocol is in the protocols list - if not empty string returned\n   */\n  getProtocol(protocol: string): string {\n    let returnValue: string = \"\";\n    if (this.protocols && this.protocols.length > 0) {\n      let protocolsArr: Array<string> = this.protocols.split(\",\");\n      protocolsArr.forEach((p) => {\n        if (p === protocol) {\n          returnValue = p;\n        }\n      });\n    } else if (protocol === \"http\") {\n      return protocol;\n    }\n    return returnValue;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-playback-source.js","//@flow\nimport getLogger from '../../util/logger'\nimport OVPConfiguration from './config'\nimport OVPProviderParser from './provider-parser'\nimport OVPMediaEntryLoader from './loaders/media-entry-loader'\nimport OVPSessionLoader from './loaders/session-loader'\nimport OVPDataLoaderManager from './loaders/data-loader-manager'\nimport BaseProvider from '../common/base-provider'\nimport ProviderOptions from '../common/provider-options/provider-options'\nimport ProviderMediaConfig from '../common/provider-media-config'\nimport ProviderMediaInfo from '../common/provider-media-info'\n\nexport default class OVPProvider extends BaseProvider<ProviderMediaInfo> {\n  /**\n   * @constructor\n   * @param {ProviderOptions} options - provider options\n   * @param {string} playerVersion - player version\n   */\n  constructor(options: ProviderOptions, playerVersion: string) {\n    super(options, playerVersion);\n    this._logger = getLogger(\"OVPProvider\");\n    const _options = options.toJSON();\n    OVPConfiguration.set(_options.env);\n  }\n\n  /**\n   * Gets the backend media config.\n   * @param {ProviderMediaInfo} mediaInfo - ovp media info\n   * @returns {Promise<ProviderMediaConfig>} - The provider media config\n   */\n  getMediaConfig(mediaInfo: ProviderMediaInfo): Promise<ProviderMediaConfig> {\n    const _mediaInfo = mediaInfo.toJSON();\n    if (_mediaInfo.ks) {\n      this.ks = _mediaInfo.ks;\n    }\n    this._dataLoader = new OVPDataLoaderManager(this.playerVersion, this.partnerId, this.ks);\n    return new Promise((resolve, reject) => {\n      const entryId = _mediaInfo.entryId;\n      if (entryId) {\n        let ks: string = this.ks;\n        if (!ks) {\n          ks = \"{1:result:ks}\";\n          this._dataLoader.add(OVPSessionLoader, {partnerId: this.partnerId});\n        }\n        this._dataLoader.add(OVPMediaEntryLoader, {entryId: entryId, ks: ks});\n        this._dataLoader.fetchData()\n          .then(response => {\n            resolve(this._parseDataFromResponse(response));\n          }, err => {\n            reject(err);\n          });\n      } else {\n        reject({success: false, data: \"Missing mandatory parameter\"});\n      }\n    });\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>): ProviderMediaConfig {\n    this._logger.debug(\"Data parsing started\");\n    const mediaConfig = new ProviderMediaConfig(this.partnerId, this.uiConfId);\n    if (data) {\n      if (data.has(OVPSessionLoader.id)) {\n        const sessionLoader = data.get(OVPSessionLoader.id);\n        if (sessionLoader && sessionLoader.response) {\n          this.ks = sessionLoader.response;\n          mediaConfig.session.ks = this.ks;\n        }\n      } else {\n        mediaConfig.session.ks = this.ks;\n      }\n      if (data.has(OVPMediaEntryLoader.id)) {\n        const mediaLoader = data.get(OVPMediaEntryLoader.id);\n        if (mediaLoader && mediaLoader.response) {\n          const blockedAction = OVPProviderParser.hasBlockActions(mediaLoader.response);\n          if (blockedAction) {\n            const errorMessage = OVPProviderParser.hasErrorMessage(mediaLoader.response);\n            if (errorMessage) {\n              this._logger.error(`Entry is blocked, error message: `, errorMessage);\n              throw errorMessage;\n            } else {\n              this._logger.error(`Entry is blocked, action: `, blockedAction);\n              throw blockedAction;\n            }\n          }\n          const mediaEntry = OVPProviderParser.getMediaEntry(\n            this.isAnonymous ? '' : this.ks,\n            this.partnerId,\n            this.uiConfId,\n            mediaLoader.response\n          );\n          mediaConfig.id = mediaEntry.id;\n          mediaConfig.name = mediaEntry.name;\n          mediaConfig.sources = mediaEntry.sources;\n          mediaConfig.duration = mediaEntry.duration;\n          mediaConfig.type = mediaEntry.type;\n          mediaConfig.dvr = !!mediaEntry.dvrStatus;\n          mediaConfig.metadata = mediaEntry.metadata;\n        }\n      }\n    }\n    this._logger.debug(\"Data parsing finished\", mediaConfig);\n    return mediaConfig;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/provider.js","// @flow\nimport ProviderMediaInfo from '../common/provider-media-info'\nimport ProviderOptions from '../common/provider-options/provider-options'\nimport ProviderEnvConfig from '../common/provider-options/provider-env-config'\nimport ProviderMediaConfig from '../common/provider-media-config'\nimport OVPProvider from './provider'\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-ovp';\nconst VERSION = __VERSION__;\n\nexport {\n  ProviderOptions,\n  ProviderEnvConfig,\n  ProviderMediaConfig,\n  ProviderMediaInfo,\n  OVPProvider as Provider,\n  NAME,\n  VERSION\n};\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/index.js","// @flow\nimport DataLoaderManager from '../../common/data-loader-manager'\nimport OVPService from '../services/ovp-service'\n\nexport default class OVPDataLoaderManager extends DataLoaderManager {\n  /**\n   * @constructor\n   * @param {string} playerVersion - player version\n   * @param {string} partnerId - partner id\n   * @param {string} ks - ks\n   */\n  constructor(playerVersion: string, partnerId: number, ks: string = \"\") {\n    super();\n    this._multiRequest = OVPService.getMultiRequest(playerVersion, ks, partnerId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/data-loader-manager.js","//@flow\nimport RequestBuilder from '../../../util/request-builder'\nimport OVPBaseEntryService from '../services/base-entry-service'\nimport OVPMetadataService from '../services/meta-data-service'\nimport OVPConfiguration from '../config'\nimport KalturaPlaybackContext from '../response-types/kaltura-playback-context'\nimport KalturaMetadataListResponse from '../response-types/kaltura-metadata-list-response'\nimport KalturaBaseEntryListResponse from '../response-types/kaltura-base-entry-list-response'\n\nconst config = OVPConfiguration.get();\n\nexport default class OVPMediaEntryLoader implements ILoader {\n  _entryId: string;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"media\";\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._entryId = params.entryId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    let mediaEntryResponse: KalturaBaseEntryListResponse = new KalturaBaseEntryListResponse(response[0].data);\n    this._response.entry = mediaEntryResponse.entries[0];\n    this._response.playBackContextResult = new KalturaPlaybackContext(response[1].data);\n    this._response.metadataListResult = new KalturaMetadataListResponse(response[2].data);\n  }\n\n  get response(): any {\n    return this._response;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    let requests: Array<RequestBuilder> = [];\n    requests.push(OVPBaseEntryService.list(config.serviceUrl, params.ks, params.entryId));\n    requests.push(OVPBaseEntryService.getPlaybackContext(config.serviceUrl, params.ks, params.entryId));\n    requests.push(OVPMetadataService.list(config.serviceUrl, params.ks, params.entryId));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._entryId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/media-entry-loader.js","//@flow\nimport OVPSessionService from '../services/session-service'\nimport OVPConfiguration from '../config'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst config = OVPConfiguration.get();\n\nexport default class OVPSessionLoader implements ILoader {\n  _partnerId: number;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"session\";\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.ks = response[0].data.ks;\n  }\n\n  get response(): any {\n    return this._response.ks;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._partnerId = params.partnerId;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    let requests: Array<RequestBuilder> = [];\n    requests.push(OVPSessionService.anonymousSession(config.serviceUrl, params.partnerId));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._partnerId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/session-loader.js","//@flow\nimport OVPConfiguration from './config'\n\nconst config = OVPConfiguration.get();\n\nexport default class PlaySourceUrlBuilder {\n  /**\n   * Returns source url by given url params\n   * @function build\n   * @param {Object} urlParams The params\n   * @returns {string} The URL\n   * @static\n   */\n  static build(urlParams: Object): string {\n    const cdnUrl: string = config.cdnUrl;\n    const partnerId: string = urlParams.partnerId;\n    const entryId: string = urlParams.entryId;\n    const ks: string = urlParams.ks;\n    const uiConfId: string = urlParams.uiConfId;\n    const format: string = urlParams.format;\n    const protocol: string = urlParams.protocol;\n    const extension: string = urlParams.extension;\n    const flavorIds: string = urlParams.flavorIds;\n\n    if (cdnUrl === \"\" && partnerId === \"\" && entryId === \"\" && extension === \"\" && format === \"\") {\n      return \"\";\n    }\n\n    let playUrl = cdnUrl;\n    if (!cdnUrl.endsWith(\"/\")) {\n      playUrl += \"/\";\n    }\n    playUrl += \"p/\" + partnerId + \"/sp/\" + partnerId + \"00\" + \"/playManifest/entryId/\" + entryId + \"/protocol/\" + protocol + \"/format/\" + format;\n\n    if (flavorIds !== \"\") {\n      playUrl += \"/flavorIds/\" + flavorIds;\n    }\n    else if (uiConfId !== \"\") {\n      playUrl += \"/uiConfId/\" + uiConfId;\n    }\n\n    if (ks !== \"\") {\n      playUrl += \"/ks/\" + ks;\n    }\n\n    playUrl += \"/a.\" + extension;\n\n    if (uiConfId && flavorIds !== \"\") {\n      playUrl += \"?uiConfId=\" + uiConfId;\n    }\n\n    return playUrl;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/play-source-url-builder.js","//@flow\n// import KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport KalturaFlavorAsset from './response-types/kaltura-flavor-asset'\nimport KalturaMetadataListResponse from './response-types/kaltura-metadata-list-response'\nimport KalturaMediaEntry from './response-types/kaltura-media-entry'\nimport KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport KalturaDrmPlaybackPluginData from '../common/response-types/kaltura-drm-playback-plugin-data'\nimport PlaySourceUrlBuilder from './play-source-url-builder'\nimport XmlParser from '../../util/xml-parser'\nimport getLogger from '../../util/logger'\nimport OVPConfiguration from './config'\nimport MediaEntry from '../../entities/media-entry'\nimport Drm from '../../entities/drm'\nimport MediaSource from '../../entities/media-source'\nimport MediaSources from '../../entities/media-sources'\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport BaseProviderParser from '../common/base-provider-parser'\n\nconst config = OVPConfiguration.get();\n\nexport default class OVPProviderParser extends BaseProviderParser{\n  static _logger = getLogger(\"OVPProviderParser\");\n\n  /**\n   * Returns parsed media entry by given OVP response objects\n   * @function getMediaEntry\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {any} mediaEntryResponse - The media entry response\n   * @returns {MediaEntry} - The media entry\n   * @static\n   * @public\n   */\n  static getMediaEntry(ks: string, partnerId: number, uiConfId: ?number, mediaEntryResponse: any): MediaEntry {\n    const mediaEntry = new MediaEntry();\n    const entry = mediaEntryResponse.entry;\n    const playbackContext = mediaEntryResponse.playBackContextResult;\n    const metadataList = mediaEntryResponse.metadataListResult;\n    const kalturaSources = playbackContext.sources;\n\n    mediaEntry.sources = OVPProviderParser._getParsedSources(kalturaSources, ks, partnerId, uiConfId, entry, playbackContext);\n    mediaEntry.metadata = this._parseMetadata(metadataList);\n    mediaEntry.metadata.description = entry.description;\n    mediaEntry.metadata.poster = entry.poster;\n    mediaEntry.id = entry.id;\n    mediaEntry.name = entry.name;\n    mediaEntry.duration = entry.duration;\n\n    let type = MediaEntry.Type.UNKNOWN;\n    switch (entry.entryType) {\n      case KalturaMediaEntry.MediaType.IMAGE.value:\n        type = MediaEntry.Type.IMAGE;\n        break;\n      case KalturaMediaEntry.MediaType.AUDIO.value:\n        type = MediaEntry.Type.AUDIO;\n        break;\n      default:\n        switch (entry.type) {\n          case KalturaMediaEntry.EntryType.MEDIA_CLIP.value:\n            type = MediaEntry.Type.VOD;\n            break;\n          case KalturaMediaEntry.EntryType.LIVE_STREAM.value:\n          case KalturaMediaEntry.EntryType.LIVE_CHANNEL.value:\n            type = MediaEntry.Type.LIVE;\n            mediaEntry.dvrStatus = entry.dvrStatus;\n            break;\n          default:\n            type = MediaEntry.Type.UNKNOWN;\n        }\n    }\n    mediaEntry.type = type;\n\n    return mediaEntry;\n  }\n\n  /**\n   * Returns the parsed sources\n   * @function _getParsedSources\n   * @param {Array<KalturaPlaybackSource>} kalturaSources - The kaltura sources\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {Object} entry - The entry\n   * @param {Object} playbackContext - The playback context\n   * @return {MediaSources} - A media sources\n   * @static\n   * @private\n   */\n  static _getParsedSources(kalturaSources: Array<KalturaPlaybackSource>, ks: string, partnerId: number, uiConfId: ?number, entry: Object, playbackContext: Object): MediaSources {\n    const sources = new MediaSources();\n    const addAdaptiveSource = (source: KalturaPlaybackSource) => {\n      const parsedSource = OVPProviderParser._parseAdaptiveSource(source, playbackContext.flavorAssets, ks, partnerId, uiConfId, entry.id);\n      const sourceFormat = SupportedStreamFormat.get(source.format);\n      sources.map(parsedSource, sourceFormat);\n    };\n    const parseAdaptiveSources = () => {\n      kalturaSources.filter((source) => !OVPProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n    const parseProgressiveSources = () => {\n      const progressiveSource = kalturaSources.find(OVPProviderParser._isProgressiveSource);\n      sources.progressive = OVPProviderParser._parseProgressiveSources(progressiveSource, playbackContext.flavorAssets, ks, partnerId, uiConfId, entry.id);\n    };\n    if (kalturaSources && kalturaSources.length > 0) {\n      parseAdaptiveSources();\n      parseProgressiveSources();\n    }\n    return sources;\n  }\n\n  /**\n   * Returns a parsed adaptive source\n   * @function _parseAdaptiveSource\n   * @param {KalturaPlaybackSource} kalturaSource - A kaltura source\n   * @param {Array<KalturaFlavorAsset>} flavorAssets - The flavor Assets of the kaltura source\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {string} entryId - The entry id\n   * @returns {MediaSource} - The parsed adaptive kalturaSource\n   * @static\n   * @private\n   */\n  static _parseAdaptiveSource(kalturaSource: ?KalturaPlaybackSource, flavorAssets: Array<KalturaFlavorAsset>, ks: string, partnerId: number, uiConfId: ?number, entryId: string): MediaSource {\n    const mediaSource: MediaSource = new MediaSource();\n    if (kalturaSource) {\n      let playUrl: string = \"\";\n      const mediaFormat = SupportedStreamFormat.get(kalturaSource.format);\n      let extension: string = \"\";\n      if (mediaFormat) {\n        extension = mediaFormat.pathExt;\n        mediaSource.mimetype = mediaFormat.mimeType;\n      }\n      // in case playbackSource doesn't have flavors we don't need to build the url and we'll use the provided one.\n      if (kalturaSource.hasFlavorIds()) {\n        if (!extension && flavorAssets && flavorAssets.length > 0) {\n          extension = flavorAssets[0].fileExt;\n        }\n        playUrl = PlaySourceUrlBuilder.build({\n          entryId: entryId,\n          flavorIds: kalturaSource.flavorIds,\n          format: kalturaSource.format,\n          ks: ks,\n          partnerId: partnerId,\n          uiConfId: uiConfId,\n          extension: extension,\n          protocol: kalturaSource.getProtocol(this._getBaseProtocol())\n        });\n      } else {\n        playUrl = kalturaSource.url;\n      }\n      if (playUrl === \"\") {\n        OVPProviderParser._logger.error(`failed to create play url from source, discarding source: (${entryId}_${kalturaSource.deliveryProfileId}), ${kalturaSource.format}.`);\n        return mediaSource;\n      }\n      mediaSource.url = playUrl;\n      mediaSource.id = entryId + \"_\" + kalturaSource.deliveryProfileId + \",\" + kalturaSource.format;\n      if (kalturaSource.hasDrmData()) {\n        const drmParams: Array<Drm> = [];\n        kalturaSource.drm.forEach((drm) => {\n          drmParams.push(new Drm(drm.licenseURL, KalturaDrmPlaybackPluginData.Scheme[drm.scheme], drm.certificate));\n        });\n        mediaSource.drmData = drmParams;\n      }\n    }\n    return mediaSource;\n  }\n\n  /**\n   * Returns parsed progressive sources\n   * @function _parseProgressiveSources\n   * @param {KalturaPlaybackSource} kalturaSource - A kaltura source\n   * @param {Array<KalturaFlavorAsset>} flavorAssets - The flavor Assets of the kaltura source\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {string} entryId - The entry id\n   * @returns {Array<MediaSource>} - The parsed progressive kalturaSources\n   * @static\n   * @private\n   */\n  static _parseProgressiveSources(kalturaSource: ?KalturaPlaybackSource, flavorAssets: Array<KalturaFlavorAsset>, ks: string, partnerId: number, uiConfId: ?number, entryId: string): Array<MediaSource> {\n    const sources = [];\n    if (kalturaSource) {\n      const protocol = kalturaSource.getProtocol(this._getBaseProtocol());\n      const format = kalturaSource.format;\n      const sourceId = kalturaSource.deliveryProfileId + \",\" + kalturaSource.format;\n      flavorAssets.map((flavor) => {\n        if (flavor.height && flavor.width) {\n          const mediaSource: MediaSource = new MediaSource();\n          mediaSource.id = flavor.id + sourceId;\n          mediaSource.mimetype = 'video/mp4';\n          mediaSource.height = flavor.height;\n          mediaSource.width = flavor.width;\n          mediaSource.bandwidth = flavor.bitrate * 1024;\n          mediaSource.label = flavor.label || flavor.language;\n          mediaSource.url = PlaySourceUrlBuilder.build({\n            entryId: entryId,\n            flavorIds: flavor.id,\n            format: format,\n            ks: ks,\n            partnerId: partnerId,\n            uiConfId: uiConfId,\n            extension: 'mp4',\n            protocol: protocol\n          });\n          sources.push(mediaSource);\n        }\n      });\n    }\n    return sources;\n  }\n\n  /**\n   * Ovp metadata parser\n   * @function _parseMetaData\n   * @param {KalturaMetadataListResponse} metadataList The metadata list\n   * @returns {Object} Parsed metadata\n   * @static\n   * @private\n   */\n  static _parseMetadata(metadataList: KalturaMetadataListResponse): Object {\n    const metadata = {};\n    if (metadataList && metadataList.metas && metadataList.metas.length > 0) {\n      metadataList.metas.forEach((meta) => {\n        let metaXml: Object;\n        const domParser: DOMParser = new DOMParser();\n        meta.xml = meta.xml.replace(/\\r?\\n|\\r/g, \"\");\n        meta.xml = meta.xml.replace(/>\\s*/g, '>');\n        meta.xml = meta.xml.replace(/>\\s*/g, '>');\n        metaXml = domParser.parseFromString(meta.xml, 'text/xml');\n        const metasObj: Object = XmlParser.xmlToJson(metaXml);\n        const metaKeys = Object.keys(metasObj.metadata);\n        metaKeys.forEach((key) => {\n          metadata[key] = metasObj.metadata[key][\"#text\"];\n        })\n      })\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the base protocol\n   * @function _getBaseProtocol\n   * @returns {string} - The base protocol\n   * @static\n   * @private\n   */\n  static _getBaseProtocol(): string {\n    const protocolRegex = /^https?:/;\n    const result = protocolRegex.exec(config.cdnUrl);\n    const protocol = result ? result[0] : document.location.protocol;\n    if (typeof protocol === \"string\") {\n      return protocol.slice(0, -1) // remove ':' from the end\n    }\n    return \"https\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/provider-parser.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaMediaEntry from './kaltura-media-entry'\n\nexport default class KalturaBaseEntryListResponse extends ServiceResult {\n  /**\n   * @member - The total count\n   * @type {number}\n   */\n  totalCount: number;\n  /**\n   * @member - The entries\n   * @type {Array<KalturaMediaEntry>}\n   */\n  entries: Array<KalturaMediaEntry>;\n\n  /**\n   * @constructor\n   * @param {Object} responseObj The json response\n   */\n  constructor(responseObj: Object) {\n    super(responseObj);\n    if (!this.hasError) {\n      this.totalCount = responseObj.totalCount;\n      if (this.totalCount > 0) {\n        this.entries = [];\n        responseObj.objects.map(entry => this.entries.push(new KalturaMediaEntry(entry)));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-base-entry-list-response.js","//@flow\nexport default class KalturaMetadata {\n  static ObjectType: { [type: string]: string | number } = {\n    AD_CUE_POINT: \"adCuePointMetadata.AdCuePoint\",\n    ANNOTATION: \"annotationMetadata.Annotation\",\n    CODE_CUE_POINT: \"codeCuePointMetadata.CodeCuePoint\",\n    THUMB_CUE_POINT: \"thumbCuePointMetadata.thumbCuePoint\",\n    ENTRY: 1,\n    CATEGORY: 2,\n    USER: 3,\n    PARTNER: 4,\n    DYNAMIC_OBJECT: 5\n  };\n\n  static Status: { [status: string]: number } = {\n    VALID: 1,\n    INVALID: 2,\n    DELETED: 3\n  };\n\n  id: number;\n  metadataProfileId: number;\n  metadataProfileVersion: number;\n  metadataObjectType: string | number;\n  objectId: string;\n  version: number;\n  created: Date;\n  updated: Date;\n  status: number;\n  xml: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The response\n   */\n  constructor(data: Object) {\n    this.id = data.id;\n    this.metadataProfileId = data.metadataProfileId;\n    this.metadataProfileVersion = data.metadataProfileVersion;\n    this.metadataProfileId = data.metadataProfileId;\n    this.metadataObjectType = data.metadataObjectType;\n    this.objectId = data.objectId;\n    this.version = data.version;\n    this.created = new Date(0);\n    this.created.setUTCSeconds(data.createdAt);\n    this.updated = new Date(0);\n    this.updated.setUTCSeconds(data.updatedAt);\n    this.status = data.status;\n    this.xml = data.xml;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-metadata.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaAccessControlMessage from '../../common/response-types/kaltura-access-control-message'\nimport KalturaPlaybackSource from './kaltura-playback-source'\nimport KalturaRuleAction from '../../common/response-types/kaltura-rule-action'\nimport KalturaFlavorAsset from './kaltura-flavor-asset'\n\nexport default class KalturaPlaybackContext extends ServiceResult {\n  /**\n   * @member - The playback sources\n   * @type {Array<KalturaPlaybackSource>}\n   */\n  sources: Array<KalturaPlaybackSource> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaRuleAction>}\n   */\n  actions: Array<KalturaRuleAction> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaAccessControlMessage>}\n   */\n  messages: Array<KalturaAccessControlMessage> = [];\n  /**\n   * @member - The flavor assets\n   * @type {Array<KalturaFlavorAsset>}\n   */\n  flavorAssets: Array<KalturaFlavorAsset> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n      const messages = response.messages;\n      if (messages) {\n        messages.map(message => this.messages.push(new KalturaAccessControlMessage(message)));\n      }\n      const actions = response.actions;\n      if (actions) {\n        actions.map(action => this.actions.push(new KalturaRuleAction(action)));\n      }\n      const sources = response.sources;\n      if (sources) {\n        sources.map(source => this.sources.push(new KalturaPlaybackSource(source)));\n      }\n      const flavorAssets = response.flavorAssets;\n      if (flavorAssets) {\n        flavorAssets.map(flavor => this.flavorAssets.push(new KalturaFlavorAsset(flavor)));\n      }\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-playback-context.js","//@flow\nimport OVPService from './ovp-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"baseEntry\";\n\nexport default class OVPBaseEntryService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for baseentry.getPlaybackContext\n   * @function getPlaybackContext\n   * @param {string} serviceUrl The service base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static getPlaybackContext(serviceUrl: string, ks: string, entryId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"getPlaybackContext\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"baseEntry-getPlaybackContext\";\n    const contextDataParams = {objectType: \"KalturaContextDataParams\", flavorTags: \"all\"};\n    request.params = {entryId: entryId, ks: ks, contextDataParams: contextDataParams};\n    return request;\n  }\n\n  /**\n   * Creates an instance of RequestBuilder for baseentry.list\n   * @function list\n   * @param {string} serviceUrl The base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static list(serviceUrl: string, ks: string, entryId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"list\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"list\";\n    request.params = OVPBaseEntryService.getEntryListReqParams(entryId, ks);\n    return request;\n  }\n\n  /**\n   * Gets  baseentry.list service params\n   * @function getEntryListReqParams\n   * @param {string} entryId The entry ID\n   * @param {string} ks The ks\n   * @returns {{ks: string, filter: {redirectFromEntryId: string}, responseProfile: {fields: string, type: number}}} The service params object\n   * @static\n   */\n  static getEntryListReqParams(entryId: string, ks: string): any {\n    const filterParams = {redirectFromEntryId: entryId};\n    const responseProfileParams = {\n      fields: \"id,name,description,thumbnailUrl,dataUrl,duration,msDuration,flavorParamsIds,mediaType,type,tags,dvrStatus\",\n      type: 1\n    };\n    return {ks: ks, filter: filterParams, responseProfile: responseProfileParams};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/base-entry-service.js","//@flow\nimport OVPService from './ovp-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"metadata_metadata\";\n\nexport default class OVPMetadataService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for metadata_metadata.list\n   * @function getPlaybackContext\n   * @param {string} serviceUrl The service base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static list(serviceUrl: string, ks: string, entryId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"list\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"metadata_metadata-list\";\n    const filter = {objectType: \"KalturaMetadataFilter\", objectIdEqual: entryId, metadataObjectTypeEqual: \"1\"};\n    request.params = {filter: filter, ks: ks};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/meta-data-service.js","//@flow\nimport OVPService from './ovp-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"session\";\n\nexport default class OVPSessionService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} serviceUrl The service base URL\n   * @param {string} partnerId The partner ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static anonymousSession(serviceUrl: string, partnerId: number): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"startWidgetSession\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"session-startWidget\";\n    request.params = {widgetId: \"_\" + partnerId};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/session-service.js","//@flow\nexport default class XmlParser {\n  /**\n   * Parses xml string to json object\n   * @param {string} xml The xml to parse\n   * @returns {{}} The parsed xml as Json object\n   * @static\n   */\n  static xmlToJson(xml: Object) {\n    let obj = {};\n    if (xml.nodeType === 1) {\n      if (xml.attributes.length > 0) {\n        obj[\"@attributes\"] = {};\n        for (let j = 0; j < xml.attributes.length; j++) {\n          let attribute = xml.attributes.item(j);\n          obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n    }\n    else if (xml.nodeType === 3) {\n      obj = xml.nodeValue;\n    }\n    if (xml.hasChildNodes()) {\n      for (let i = 0; i < xml.childNodes.length; i++) {\n        let item = xml.childNodes.item(i);\n        let nodeName = item.nodeName;\n        if (typeof (obj[nodeName]) === \"undefined\") {\n          obj[nodeName] = this.xmlToJson(item);\n        }\n        else {\n          if (typeof (obj[nodeName].push) === \"undefined\") {\n            let old = obj[nodeName];\n            obj[nodeName] = [];\n            obj[nodeName].push(old);\n          }\n          obj[nodeName].push(this.xmlToJson(item));\n        }\n      }\n    }\n    return obj;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./util/xml-parser.js"],"sourceRoot":""}