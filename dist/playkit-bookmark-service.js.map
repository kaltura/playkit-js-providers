{"version":3,"sources":["./providers/webpack/universalModuleDefinition","./providers/webpack/bootstrap","./providers/./k-provider/common/base-service-result.js","./providers/./k-provider/common/multi-request-builder.js","./providers/./k-provider/ott/config.js","./providers/./k-provider/ott/services/bookmark/bookmark-service.js","./providers/./k-provider/ott/services/bookmark/index.js","./providers/./k-provider/ott/services/ott-service.js","./providers/./util/clone.js","./providers/./util/error/category.js","./providers/./util/error/code.js","./providers/./util/error/error.js","./providers/./util/error/severity.js","./providers/./util/logger.js","./providers/./util/request-builder.js"],"names":["ServiceResult","response","objectType","hasError","error","ServiceError","code","message","data","MultiRequestBuilder","add","request","requests","push","requestParams","serviceDef","service","action","Object","assign","length","params","execute","Promise","resolve","reject","JSON","stringify","err","_logger","Error","Severity","CRITICAL","Category","PROVIDER","Code","FAILED_PARSING_REQUEST","doHttpRequest","then","multiRequestResult","MultiRequestResult","success","headers","responseHeaders","NETWORK","MULTIREQUEST_API_ERROR","url","results","RequestBuilder","getLogger","result","responseArr","Array","isArray","forEach","serviceResult","defaultConfig","serviceParams","apiVersion","OTTConfiguration","set","clientConfig","get","clone","SERVICE_NAME","OTTBookmarkService","serviceUrl","ks","bookmark","Map","method","getUrl","playerData","averageBitrate","totalBitrate","currentBitrate","fileId","bookmarkServiceParams","type","id","position","programId","debug","config","OTTService","NAME","__NAME__","VERSION","__VERSION__","getMultiRequest","partnerId","ottParams","multiReq","node","slice","e","i","keys","key","SERVICE","UNSUPPORTED_SCHEME","BAD_HTTP_STATUS","HTTP_ERROR","TIMEOUT","MALFORMED_DATA_URI","BAD_SERVER_RESPONSE","API_RESPONSE_MISMATCH","ERROR","BLOCK_ACTION","MEDIA_STATUS_NOT_READY","MISSING_MANDATORY_PARAMS","MISSING_PLAY_SOURCE","METHOD_NOT_IMPLEMENTED","CLASS_NAME","severity","category","RECOVERABLE","JsLogger","DEBUG","value","name","INFO","OFF","TIME","TRACE","WARN","createDefaultHandler","enabledFor","getLevel","info","log","setHandler","setLevel","time","timeEnd","trace","useDefaults","warn","LogLevel","setLogger","logger","getLogLevel","setLogLevel","level","KALTURA_HEADER_PREFIX","async","timeout","maxAttempts","promise","_requestPromise","_createXHR","XMLHttpRequest","onreadystatechange","readyState","status","parse","responseText","_getResponseHeaders","_createError","text","open","retryConfig","requestTime","performance","now","ontimeout","_handleError","statusText","onerror","onabort","setRequestHeader","send","getAllResponseHeaders","split","filter","header","toLowerCase","indexOf","_attemptCounter","attempt"],"mappings":"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","file":"playkit-bookmark-service.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bookmark\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"services\"] = root[\"playkit\"][\"services\"] || {}, root[\"playkit\"][\"services\"][\"bookmark\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./k-provider/ott/services/bookmark/index.js\");\n","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else if (response.error && response.error.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.error.code, response.error.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n","//@flow\nimport RequestBuilder from '../../util/request-builder';\nimport getLogger from '../../util/logger';\nimport ServiceResult from './base-service-result';\nimport Error from '../../util/error/error';\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger('MultiRequestBuilder');\n  /**\n   * @memberof - MultiRequestBuilder\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(): Promise<Object> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.params = JSON.stringify(this.params);\n      } catch (err) {\n        MultiRequestBuilder._logger.error(`${err.message}`);\n        reject(\n          new Error(Error.Severity.CRITICAL, Error.Category.PROVIDER, Error.Code.FAILED_PARSING_REQUEST, {\n            error: err,\n            params: this.params\n          })\n        );\n      }\n      this.doHttpRequest().then(\n        data => {\n          const multiRequestResult = new MultiRequestResult(data);\n          if (multiRequestResult.success) {\n            resolve({\n              headers: this.responseHeaders,\n              response: multiRequestResult\n            });\n          } else {\n            reject(\n              new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MULTIREQUEST_API_ERROR, {\n                url: this.url,\n                headers: this.responseHeaders,\n                results: multiRequestResult.results\n              })\n            );\n          }\n        },\n        err => {\n          reject(err);\n        }\n      );\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger('MultiRequestResult');\n  /**\n   * @memberof MultiRequestResult\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @memberof MultiRequestResult\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n  /**\n   * @constructor\n   * @param {Object} response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    const result = response.result ? response.result : response;\n    const responseArr = Array.isArray(result) ? result : [result];\n    responseArr.forEach(result => {\n      const serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        MultiRequestResult._logger.error(\n          `Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`\n        );\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n","//@flow\nimport {clone} from '../../util/clone';\n\nconst defaultConfig: Object = {\n  serviceParams: {\n    apiVersion: '5.2.6'\n  }\n};\n\nexport default class OTTConfiguration {\n  static set(clientConfig?: ProviderEnvConfigObject) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OTTConfiguration};\n","//@flow\nimport OTTService from '../ott-service';\nimport RequestBuilder from '../../../../util/request-builder';\nimport OTTConfiguration from '../../config';\nimport getLogger from '../../../../util/logger';\n\nconst SERVICE_NAME: string = 'bookmark';\n\nexport default class OTTBookmarkService extends OTTService {\n  /**\n   * The BookmarkService logger\n   * @member {OTTBookmarkService} _logger\n   * @private\n   * @static\n   */\n  static _logger: any = getLogger('BookmarkService');\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function add\n   * @param {string} serviceUrl - The service url\n   * @param {string} ks - The ks\n   * @param {Object} bookmark - The udid\n   * @returns {RequestBuilder} - The request builder\n   * @static\n   */\n  static add(serviceUrl: string, ks: string, bookmark: Object): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set('Content-Type', 'application/json');\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = 'add';\n    request.method = 'POST';\n    request.url = request.getUrl(serviceUrl);\n    const playerData: Object = {\n      objectType: 'KalturaBookmarkPlayerData',\n      action: bookmark.playerData.action,\n      averageBitrate: bookmark.playerData.averageBitrate,\n      totalBitrate: bookmark.playerData.totalBitrate,\n      currentBitrate: bookmark.playerData.currentBitrate,\n      fileId: bookmark.playerData.fileId\n    };\n    const bookmarkServiceParams: Object = {\n      objectType: 'KalturaBookmark',\n      type: bookmark.type,\n      id: bookmark.id,\n      position: bookmark.position,\n      playerData: playerData\n    };\n    if (bookmark.programId) bookmarkServiceParams.programId = bookmark.programId;\n    this._logger.debug('bookmark added', bookmarkServiceParams);\n    const config = OTTConfiguration.get();\n    const serviceParams = config.serviceParams;\n    Object.assign(serviceParams, {bookmark: bookmarkServiceParams, ks: ks});\n    request.params = JSON.stringify(serviceParams);\n    return request;\n  }\n}\n","// @flow\nimport RequestBuilder from '../../../../util/request-builder';\nimport OTTConfiguration from '../../config';\nimport OTTBookmarkService from './bookmark-service';\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-bookmark-service';\nconst VERSION = __VERSION__;\n\nexport {OTTBookmarkService, OTTConfiguration, RequestBuilder, NAME, VERSION};\n","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder';\nimport OTTConfiguration from '../config';\n\nconst SERVICE_NAME: string = 'multirequest';\n\nexport default class OTTService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ott params\n   * @function getMultiRequest\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(ks: string, partnerId?: number): MultiRequestBuilder {\n    const config = OTTConfiguration.get();\n    const ottParams = config.serviceParams;\n    if (ks) {\n      Object.assign(ottParams, {ks: ks});\n    }\n    if (partnerId) {\n      Object.assign(ottParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set('Content-Type', 'application/json');\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = 'POST';\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ottParams;\n    return multiReq;\n  }\n}\n","const clone = data => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if ((typeof e === 'object' && e !== {}) || (Array.isArray(e) && e.length > 0)) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === 'object') {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach(key => {\n      if ((typeof node[key] === 'object' && node[key] !== {}) || (Array.isArray(node[key]) && node[key].length > 0)) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n","//@flow\ntype CategoryType = {[category: string]: number};\n\nconst Category: CategoryType = {\n  /** Errors from the network stack. */\n  NETWORK: 1,\n  SERVICE: 2,\n  PROVIDER: 3\n};\n\nexport {Category};\nexport type {CategoryType};\n","//@flow\n\ntype CodeType = {[code: string]: number};\n\nconst Code: CodeType = {\n  /**\n   * A network request was made using an unsupported URI scheme.\n   */\n  UNSUPPORTED_SCHEME: 1000,\n\n  /**\n   * An HTTP network request returned an HTTP status that indicated a failure.\n   */\n  BAD_HTTP_STATUS: 1001,\n\n  /**\n   * An HTTP network request failed with an error, but not from the server.\n   */\n  HTTP_ERROR: 1002,\n\n  /**\n   * A network request timed out.\n   */\n  TIMEOUT: 1003,\n\n  /**\n   * A network request was made with a malformed data URI.\n   */\n  MALFORMED_DATA_URI: 1004,\n\n  /**\n   * The server responsded with 2xx response, but it couldn't be parsed\n   */\n  BAD_SERVER_RESPONSE: 1005,\n\n  /**\n   * The server response had a valid structure but contained an error from the API\n   */\n  MULTIREQUEST_API_ERROR: 1006,\n\n  /**\n   * The server response had a valid structure and valid API result, but it did not match the request\n   */\n  API_RESPONSE_MISMATCH: 1007,\n\n  /**\n   * The server responded with an error\n   */\n  ERROR: 2000,\n\n  /**\n   * The server responded with a block action\n   */\n  BLOCK_ACTION: 2001,\n\n  /**\n   * The server responded with status import or pre convert\n   */\n  MEDIA_STATUS_NOT_READY: 2002,\n\n  /**\n   * The provider is missing mandatory parameter/s\n   */\n\n  MISSING_MANDATORY_PARAMS: 3000,\n\n  /**\n   * The server responded with empty sources objects (for HLS, Dash and progressive)\n   */\n  MISSING_PLAY_SOURCE: 3001,\n\n  /**\n   * The provider doesn't implement the called api\n   */\n  METHOD_NOT_IMPLEMENTED: 3002\n};\n\nexport {Code};\nexport type {CodeType};\n","//@flow\nimport getLogger from '../logger';\nimport {Severity} from './severity';\nimport type {SeverityType} from './severity';\nimport {Code} from './code';\nimport type {CodeType} from './code';\nimport {Category} from './category';\nimport type {CategoryType} from './category';\n\nconst CLASS_NAME: string = 'Error';\n\n/**\n * @classdesc This is a description of the error class.\n */\nexport default class Error {\n  severity: number;\n  category: number;\n  code: number;\n  data: any;\n  /**\n   * @enum {number}\n   */\n  static Severity: SeverityType = Severity;\n  /**\n   * @enum {number}\n   */\n  static Category: CategoryType = Category;\n  /**\n   * @enum {number}\n   */\n  static Code: CodeType = Code;\n  static _logger: any = getLogger(CLASS_NAME);\n\n  /**\n   * @constructor\n   * @param {number} severity - error's severity\n   * @param {number} category - error's category.\n   * @param {number} code - error's code.\n   * @param {any} data - additional data for the error.\n   */\n  constructor(severity: number, category: number, code: number, data: any = {}) {\n    this.severity = severity;\n    this.category = category;\n    this.code = code;\n    this.data = data;\n    Error._logger.error(`Category:${category} | Code:${code} |`, data);\n  }\n}\n","//@flow\n\ntype SeverityType = {[severity: string]: number};\n\nconst Severity: SeverityType = {\n  /**\n   * An error occurred, but the Player is attempting to recover from the error.\n   *\n   * If the Player cannot ultimately recover, it still may not throw a CRITICAL\n   * error.  For example, retrying for a media segment will never result in\n   * a CRITICAL error (the Player will just retry forever).\n   */\n  RECOVERABLE: 1,\n  /**\n   * A critical error that the library cannot recover from.  These usually cause\n   * the Player to stop loading or updating.  A new manifest must be loaded\n   * to reset the library.\n   */\n  CRITICAL: 2\n};\n\nexport {Severity};\nexport type {SeverityType};\n","//@flow\nexport type LogLevelObject = {value: number, name: string};\nexport type LogLevelType = {[level: string]: LogLevelObject};\nexport type loggerFunctionType = {\n  VERSION: String,\n  DEBUG: LogLevelObject,\n  ERROR: LogLevelObject,\n  INFO: LogLevelObject,\n  OFF: LogLevelObject,\n  TIME: LogLevelObject,\n  TRACE: LogLevelObject,\n  WARN: LogLevelObject,\n  createDefaultHandler: Function,\n  debug: Function,\n  enabledFor: Function,\n  error: Function,\n  get: Function,\n  getLevel: Function,\n  info: Function,\n  log: Function,\n  setHandler: Function,\n  setLevel: Function,\n  time: Function,\n  timeEnd: Function,\n  trace: Function,\n  useDefaults: Function,\n  warn: Function\n};\n\nexport type LoggerType = {\n  getLogger: loggerFunctionType,\n  LogLevel: LogLevelType\n};\n\nlet JsLogger = {\n  get: () => ({\n    VERSION: '',\n    DEBUG: {value: '', name: ''},\n    ERROR: {value: '', name: ''},\n    INFO: {value: '', name: ''},\n    OFF: {value: '', name: ''},\n    TIME: {value: '', name: ''},\n    TRACE: {value: '', name: ''},\n    WARN: {value: '', name: ''},\n    createDefaultHandler: () => {},\n    debug: () => {},\n    enabledFor: () => {},\n    error: () => {},\n    get: () => {},\n    getLevel: () => {},\n    info: () => {},\n    log: () => {},\n    setHandler: () => {},\n    setLevel: () => {},\n    time: () => {},\n    timeEnd: () => {},\n    trace: () => {},\n    useDefaults: () => {},\n    warn: () => {}\n  })\n};\n\nlet LogLevel: LogLevelType = {};\n/**\n * set logger\n * @param {LoggerType} logger - the logger\n * @returns {void}\n */\nfunction setLogger(logger: ?LoggerType): void {\n  if (logger && typeof logger.getLogger === 'function') {\n    JsLogger.get = logger.getLogger;\n  }\n  if (logger && logger.LogLevel) {\n    LogLevel = logger.LogLevel;\n  }\n}\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  //$FlowFixMe\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name?: string): LogLevelObject {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: LogLevelObject, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {getLogLevel, setLogLevel, setLogger, LogLevel};\n","//@flow\nimport Error from './error/error';\n\nconst KALTURA_HEADER_PREFIX: string = 'x-';\n\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @memberof - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @memberof - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @memberof - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @memberof - Service tag\n   * @type {string}\n   */\n  tag: string;\n  /**\n   * @memberof - the response headers of the arra\n   * @type {Array<string>}\n   */\n  responseHeaders: Array<string>;\n  /**\n   * @description network retry configuration\n   * @memberof RequestBuilder\n   * @type {ProviderNetworkRetryParameters}\n   */\n  retryConfig: ProviderNetworkRetryParameters = {\n    async: true,\n    timeout: 0,\n    maxAttempts: 4\n  };\n\n  /**\n   * @description number of xhr attempts for the same multi - request.\n   * @memberof RequestBuilder\n   * @type {number}\n   * @private\n   */\n  _attemptCounter: number = 1;\n\n  /**\n   * @description hold the promise result of the XHR request(s) - if all tries fails, it rejects with the error.\n   * @memberof RequestBuilder\n   * @type {Object}\n   * @private\n   */\n  _requestPromise: Object;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    const promise = new Promise((resolve, reject) => {\n      this._requestPromise = {\n        resolve,\n        reject\n      };\n    });\n    if (!this.url) {\n      this._requestPromise.reject(\n        new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MALFORMED_DATA_URI, {\n          url: this.url\n        })\n      );\n    }\n    this._createXHR();\n    return promise;\n  }\n\n  _createXHR(): void {\n    let request = new XMLHttpRequest();\n    request.onreadystatechange = () => {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          try {\n            const response = JSON.parse(request.responseText);\n            this.responseHeaders = this._getResponseHeaders(request);\n            // the promise returns the response for backwards compatibility\n            return this._requestPromise.resolve(response);\n          } catch (error) {\n            this._requestPromise.reject(\n              this._createError(request, Error.Code.BAD_SERVER_RESPONSE, {\n                text: request.responseText\n              })\n            );\n          }\n        }\n      }\n    };\n    request.open(this.method, this.url, this.retryConfig.async);\n    if (this.retryConfig.async && this.retryConfig.timeout) {\n      request.timeout = this.retryConfig.timeout;\n    }\n    const requestTime = performance.now();\n    request.ontimeout = () => {\n      this._handleError(request, Error.Code.TIMEOUT, {\n        timeout: (performance.now() - requestTime) / 1000,\n        statusText: request.statusText\n      });\n    };\n    request.onerror = request.onabort = () => {\n      this._handleError(request, Error.Code.HTTP_ERROR, {\n        text: request.responseText,\n        statusText: request.statusText\n      });\n    };\n    this.headers.forEach((value, key) => {\n      request.setRequestHeader(key, value);\n    });\n    request.send(this.params);\n  }\n\n  _getResponseHeaders(request: XMLHttpRequest): Array<string> {\n    return request\n      .getAllResponseHeaders()\n      .split('\\n')\n      .filter(header => header.toLowerCase().indexOf(KALTURA_HEADER_PREFIX) === 0);\n  }\n\n  _handleError(request: XMLHttpRequest, code: number, data: Object): Promise<*> | void {\n    const error = this._createError(request, code, data);\n    request.onreadystatechange = function () {};\n    request.onerror = function () {};\n    request.ontimeout = function () {};\n    request.onabort = function () {};\n    if (this.retryConfig.maxAttempts && this._attemptCounter < this.retryConfig.maxAttempts) {\n      this._attemptCounter++;\n      this._createXHR();\n    } else {\n      return this._requestPromise.reject(error);\n    }\n  }\n\n  _createError(request: XMLHttpRequest, code: number, data: Object): Error {\n    Object.assign(data, {\n      url: this.url,\n      headers: this._getResponseHeaders(request),\n      attempt: this._attemptCounter\n    });\n    return new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, code, data);\n  }\n}\n"],"sourceRoot":""}