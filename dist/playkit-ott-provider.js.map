{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///webpack/bootstrap 9b5c4a30cc0c30eb667f?4c23","webpack:///./util/request-builder.js?3e89","webpack:///./entities/media-sources.js?fb37","webpack:///./util/logger.js?8c6e","webpack:///./k-provider/common/provider-media-config.js?3f82","webpack:///./k-provider/common/provider-options/provider-options.js?8a1d","webpack:///./k-provider/common/base-service-result.js?3ffa","webpack:///./entities/media-format.js?60b5","webpack:///./entities/media-source.js?489a","webpack:///./entities/drm.js?1c78","webpack:///./entities/media-entry.js?f496","webpack:///./k-provider/common/data-loader-manager.js?4c3e","webpack:///./k-provider/common/multi-request-builder.js?9930","webpack:///./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js?bb31","webpack:///./k-provider/common/provider-media-info.js?9642","webpack:///./k-provider/common/provider-options/provider-env-config.js?c667","./providers/./k-provider/ott/config.js","webpack:///./k-provider/common/base-provider-parser.js?8bd6","webpack:///./k-provider/common/base-provider.js?8ae2","webpack:///./k-provider/common/response-types/kaltura-access-control-message.js?bbd4","webpack:///./k-provider/common/response-types/kaltura-rule-action.js?05c3","./providers/./k-provider/ott/services/ott-service.js","webpack:///./util/clone.js?3f6f","webpack:///../~/js-logger/src/logger.js?779b","./providers/./k-provider/ott/provider-media-info.js","./providers/./k-provider/ott/response-types/kaltura-asset.js","./providers/./k-provider/ott/response-types/kaltura-playback-context.js","./providers/./k-provider/ott/response-types/kaltura-playback-source.js","./providers/./k-provider/ott/provider.js","./providers/./k-provider/ott/index.js","./providers/./k-provider/ott/loaders/asset-loader.js","./providers/./k-provider/ott/loaders/data-loader-manager.js","./providers/./k-provider/ott/loaders/session-loader.js","./providers/./k-provider/ott/provider-parser.js","./providers/./k-provider/ott/services/asset-service.js","./providers/./k-provider/ott/services/user-service.js"],"names":["RequestBuilder","headers","Map","serviceUrl","service","action","url","Error","request","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","status","jsonResponse","JSON","parse","responseText","code","message","open","method","forEach","value","key","setRequestHeader","send","params","MediaSources","progressive","dash","hls","source","mediaFormat","name","MP4","push","DASH","HLS","response","p","toJSON","h","d","JsLogger","LogLevel","DEBUG","INFO","TIME","WARN","ERROR","OFF","useDefaults","defaultLevel","getLogger","get","getLogLevel","getLevel","setLogLevel","level","setLevel","ProviderMediaConfig","_id","_name","_session","_sources","_duration","_type","_dvr","_metadata","partnerId","uiConfId","id","SessionConfig","sources","duration","type","dvr","metadata","session","_ks","_partnerId","_uiConfId","ks","ProviderOptions","_logLevel","_env","validate","fromJSON","json","logLevel","env","cdnUrl","param","TypeError","ServiceResult","hasError","objectType","error","ServiceError","data","MediaFormat","mimeType","pathExt","WVM","MP3","SupportedStreamFormat","MediaSource","mimetype","bandwidth","width","height","label","drmData","length","Array","isArray","Drm","licenseUrl","scheme","certificate","MediaEntry","Type","UNKNOWN","dvrStatus","VOD","LIVE","IMAGE","AUDIO","DataLoaderManager","_loaders","loader","execution_loader","isValid","set","startIndex","_multiRequest","requests","add","executionLoaderResponseMap","from","val","index","_loadersResponseMap","execute","then","_multiResponse","success","preparedData","prepareData","err","loaderDataIndexes","results","slice","MultiRequestBuilder","requestParams","serviceDef","Object","assign","stringify","_logger","doHttpRequest","MultiRequestResult","errorText","responseArr","result","serviceResult","KalturaDrmPlaybackPluginData","drm","licenseURL","Scheme","ProviderMediaInfo","_entryId","entryId","ProviderEnvConfig","_serviceUrl","_cdnUrl","defaultConfig","serviceParams","apiVersion","OTTConfiguration","clientConfig","BaseProviderParser","sourceFormat","format","assetResponse","playBackContextResult","playbackContext","actionIndex","actions","messages","messagesIndex","BaseProvider","_playerVersion","_isAnonymous","options","playerVersion","mediaInfo","KalturaAccessControlMessage","KalturaRuleAction","DRM_POLICY","BLOCK","PREVIEW","LIMIT_FLAVORS","ADD_TO_STORAGE","LIMIT_DELIVERY_PROFILES","SERVE_FROM_REMOTE_SERVER","REQUEST_HOST_REGEX","LIMIT_THUMBNAIL_CAPTURE","config","SERVICE_NAME","OTTService","ottParams","multiReq","getUrl","clone","node","e","i","keys","OTTProviderMediaInfo","_protocol","_fileIds","_mediaType","_contextType","assetId","mediaType","contextType","MEDIA","PLAYBACK","protocol","fileIds","KalturaAsset","description","tags","metas","pictures","_formatTagsMetas","images","objectToParse","parsed","objects","object","RECORDING","EPG","KalturaPlaybackContext","map","TRAILER","CATCHUP","START_OVER","KalturaPlaybackSource","adsPolicy","adsParam","fileId","protocols","returnValue","protocolsArr","split","OTTProvider","_options","_mediaInfo","_dataLoader","mediaProtocol","assetFileIds","context","fetchData","_parseDataFromResponse","debug","mediaConfig","has","sessionLoader","assetLoader","blockedAction","hasBlockActions","errorMessage","hasErrorMessage","mediaEntry","getMediaEntry","NAME","__NAME__","VERSION","Provider","OTTAssetLoader","_response","buildRequests","getPlaybackContext","_requests","mediaDataResult","OTTDataLoaderManager","getMultiRequest","OTTSessionLoader","anonymousLogin","udid","OTTProviderParser","kalturaSources","metaData","_getParsedSources","Math","max","apply","addAdaptiveSource","parsedSource","_parseAdaptiveSource","parseAdaptiveSources","filter","_isProgressiveSource","parseProgressiveSources","kalturaSource","mediaSource","playUrl","hasDrmData","drmParams","OTTAssetService","playbackContextOptions","contextDataParams","assetType","assetReferenceType","OTTUserService"],"mappings":"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ACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AA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","file":"playkit-ott-provider.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ott\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"providers\"] = root[\"playkit\"][\"providers\"] || {}, root[\"playkit\"][\"providers\"][\"ott\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9b5c4a30cc0c30eb667f","//@flow\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @member - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @member - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @member - Service tag\n   * @type {string}\n   */\n  tag: string;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    if (!this.url) {\n      throw new Error(\"serviceUrl is mandatory for request builder\");\n    }\n    let request = new XMLHttpRequest();\n    return new Promise((resolve, reject) => {\n      request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n          if (request.status === 200) {\n            let jsonResponse = JSON.parse(request.responseText);\n            if (jsonResponse && typeof(jsonResponse) === 'object' && jsonResponse.code && jsonResponse.message)\n              reject(jsonResponse);\n            else\n              resolve(jsonResponse);\n          } else {\n            reject(request.responseText);\n          }\n        }\n      };\n      request.open(this.method, this.url);\n      this.headers.forEach((value, key) => {\n        request.setRequestHeader(key, value);\n      });\n      request.send(this.params);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/request-builder.js","// @flow\nimport MediaSource from './media-source'\nimport type {MediaSourceObject} from './media-source'\nimport type {MediaFormatType} from './media-format'\nimport {MediaFormat} from './media-format'\n\nexport type MediaSourcesObject = {\n  progressive: Array<MediaSourceObject>,\n  dash: Array<MediaSourceObject>,\n  hls: Array<MediaSourceObject>\n};\n\nexport default class MediaSources {\n  /**\n   * Progressive download media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  progressive: Array<MediaSource>;\n  /**\n   * Dash media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  dash: Array<MediaSource>;\n  /**\n   * Hls media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  hls: Array<MediaSource>;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.progressive = [];\n    this.dash = [];\n    this.hls = [];\n  }\n\n  /**\n   * Maps the source to one of the containers according to his media format.\n   * @param {MediaSource} source - The source to add to one of the containers.\n   * @param {MediaFormat} mediaFormat - The media format of the source.\n   * @returns {void}\n   */\n  map(source: MediaSource, mediaFormat: ?MediaFormatType) {\n    if (mediaFormat) {\n      switch (mediaFormat.name) {\n        case MediaFormat.MP4.name:\n          this.progressive.push(source);\n          break;\n        case MediaFormat.DASH.name:\n          this.dash.push(source);\n          break;\n        case MediaFormat.HLS.name:\n          this.hls.push(source);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {MediaSourcesObject} - The json class object.\n   */\n  toJSON(): MediaSourcesObject {\n    const response: MediaSourcesObject = {\n      progressive: [],\n      dash: [],\n      hls: []\n    };\n    this.progressive.forEach(p => response.progressive.push(p.toJSON()));\n    this.hls.forEach(h => response.hls.push(h.toJSON()));\n    this.dash.forEach(d => response.dash.push(d.toJSON()));\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-sources.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nconst LogLevel: { [level: string]: Object } = {\n  DEBUG: JsLogger.DEBUG,\n  INFO: JsLogger.INFO,\n  TIME: JsLogger.TIME,\n  WARN: JsLogger.WARN,\n  ERROR: JsLogger.ERROR,\n  OFF: JsLogger.OFF\n};\n\nJsLogger.useDefaults({defaultLevel: JsLogger.ERROR});\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  if (!name) {\n    return JsLogger;\n  }\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {Object} - the log level\n */\nfunction getLogLevel(name?: string): Object {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {Object} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: Object, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {LogLevel, getLogLevel, setLogLevel};\n\n\n\n// WEBPACK FOOTER //\n// ./util/logger.js","// @flow\nimport MediaSources from '../../entities/media-sources'\nimport type {MediaSourcesObject} from '../../entities/media-sources'\n\nexport type SessionConfigObject = {\n  partnerId: number,\n  uiConfId?: number,\n  ks?: string\n};\n\nexport type ProviderMediaConfigObject = {\n  id: string,\n  name: string,\n  session: SessionConfigObject,\n  sources: MediaSourcesObject,\n  duration: number,\n  type: string,\n  dvr: boolean,\n  metadata: Object\n};\n\nexport default class ProviderMediaConfig {\n  _id: string;\n  _name: string;\n  _session: SessionConfig;\n  _sources: MediaSources;\n  _duration: number;\n  _type: string;\n  _dvr: boolean;\n  _metadata: Object;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string): void {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string): void {\n    this._name = value;\n  }\n\n  get session(): SessionConfig {\n    return this._session;\n  }\n\n  get sources(): MediaSources {\n    return this._sources;\n  }\n\n  set sources(value: MediaSources): void {\n    this._sources = value;\n  }\n\n  get duration(): number {\n    return this._duration;\n  }\n\n  set duration(value: number): void {\n    this._duration = value;\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  set type(value: string): void {\n    this._type = value;\n  }\n\n  get dvr(): boolean {\n    return this._dvr;\n  }\n\n  set dvr(value: boolean): void {\n    this._dvr = value;\n  }\n\n  get metadata(): Object {\n    return this._metadata;\n  }\n\n  set metadata(value: Object): void {\n    this._metadata = value;\n  }\n\n  constructor(partnerId: number, uiConfId: ?number) {\n    this.id = '';\n    this.name = '';\n    this._session = new SessionConfig(partnerId, uiConfId);\n    this.sources = new MediaSources();\n    this.duration = 0;\n    this.type = 'Unknown';\n    this.dvr = false;\n    this.metadata = {};\n  }\n\n  toJSON(): ProviderMediaConfigObject {\n    return {\n      id: this.id,\n      name: this.name,\n      session: this.session.toJSON(),\n      sources: this.sources.toJSON(),\n      duration: this.duration,\n      type: this.type,\n      dvr: this.dvr,\n      metadata: this.metadata\n    };\n  }\n}\n\nclass SessionConfig {\n  _partnerId: number;\n  _uiConfId: ?number;\n  _ks: ?string;\n\n  get ks(): ?string {\n    return this._ks;\n  }\n\n  set ks(value: ?string): void {\n    this._ks = value;\n  }\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get uiConfId(): ?number {\n    return this._uiConfId;\n  }\n\n  constructor(partnerId: number, uiConfId: ?number) {\n    this._partnerId = partnerId;\n    this._uiConfId = uiConfId;\n  }\n\n  toJSON(): SessionConfigObject {\n    const response: SessionConfigObject = {\n      partnerId: this.partnerId\n    };\n    if (this.uiConfId) response.uiConfId = this.uiConfId;\n    if (this.ks) response.ks = this.ks;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-media-config.js","// @flow\nimport ProviderEnvConfig from './provider-env-config'\nimport type {ProviderEnvConfigObject} from './provider-env-config'\nimport {LogLevel} from '../../../util/logger'\n\nexport type ProviderOptionsObject = {\n  partnerId: number,\n  logLevel: string,\n  ks: string,\n  uiConfId?: number,\n  env?: ProviderEnvConfigObject\n};\n\nexport default class ProviderOptions {\n  _partnerId: number;\n  _logLevel: string = 'ERROR';\n  _ks: string = '';\n  _uiConfId: number;\n  _env: ProviderEnvConfig;\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get logLevel(): string {\n    return this._logLevel;\n  }\n\n  set logLevel(value: string): void {\n    if (typeof value === 'string' && LogLevel[value]) {\n      this._logLevel = value;\n    }\n  }\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string): void {\n    if (typeof value !== 'string') return;\n    this._ks = value;\n  }\n\n  get uiConfId(): number {\n    return this._uiConfId;\n  }\n\n  get env(): ProviderEnvConfig {\n    return this._env;\n  }\n\n  set env(value: ProviderEnvConfig) {\n    if (value instanceof ProviderEnvConfig) {\n      this._env = value;\n    } else {\n      this._env = new ProviderEnvConfig(value);\n    }\n  }\n\n  constructor(partnerId: number | ProviderOptionsObject, uiConfId?: number) {\n    validate(partnerId);\n    if (typeof partnerId === 'number') {\n      this._partnerId = partnerId;\n      if (typeof uiConfId === 'number') {\n        this._uiConfId = uiConfId;\n      }\n    } else if (typeof partnerId === 'object') {\n      this.fromJSON(partnerId);\n    }\n  }\n\n  fromJSON(json: ProviderOptionsObject): void {\n    this._partnerId = json.partnerId;\n    this.ks = json.ks || this._ks;\n    this.logLevel = json.logLevel || this._logLevel;\n    if (typeof json.uiConfId === 'number') {\n      this._uiConfId = json.uiConfId;\n    }\n    if (json.env) {\n      this.env = new ProviderEnvConfig(json.env.serviceUrl, json.env.cdnUrl);\n    }\n  }\n\n  toJSON(): ProviderOptionsObject {\n    const response: ProviderOptionsObject = {\n      partnerId: this.partnerId,\n      logLevel: this.logLevel,\n      ks: this.ks\n    };\n    if (this.uiConfId) response.uiConfId = this.uiConfId;\n    if (this.env) response.env = this.env.toJSON();\n    return response;\n  }\n}\n\n/**\n * Validate user input\n * @param {number | ProviderOptionsObject} param - user input\n * @returns {void}\n */\nfunction validate(param: number | ProviderOptionsObject): void {\n  if (typeof param === 'number') return;\n  if (typeof param === 'object' && typeof param.partnerId === 'number') return;\n  throw new TypeError('Invalid ProviderOptions: partnerId must be provided and be a number');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-options/provider-options.js","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-service-result.js","//@flow\nexport type MediaFormatType = {\n  name: string,\n  mimeType: string,\n  pathExt: string\n};\n\nexport const MediaFormat: { [name: string]: MediaFormatType } = {\n  DASH: {\n    name: 'dash',\n    mimeType: 'application/dash+xml',\n    pathExt: 'mpd'\n  },\n  HLS: {\n    name: 'hls',\n    mimeType: 'application/x-mpegURL',\n    pathExt: 'm3u8'\n  },\n  WVM: {\n    name: 'wvm',\n    mimeType: 'video/wvm',\n    pathExt: 'wvm'\n  },\n  MP4: {\n    name: 'mp4',\n    mimeType: 'video/mp4',\n    pathExt: 'mp4'\n  },\n  MP3: {\n    name: 'mp3',\n    mimeType: 'audio/mpeg',\n    pathExt: 'mp3'\n  }\n};\n\nexport const SupportedStreamFormat: Map<string, MediaFormatType> = new Map([\n  [\"mpegdash\", MediaFormat.DASH],\n  [\"applehttp\", MediaFormat.HLS],\n  [\"url\", MediaFormat.MP4]\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-format.js","//@flow\nimport Drm from './drm'\nimport type {DrmObject} from './drm'\n\nexport type MediaSourceObject = {\n  id: string,\n  url: string,\n  mimetype: string,\n  bandwidth?: number,\n  width?: number,\n  height?: number,\n  label?: string,\n  drmData?: Array<DrmObject>\n};\n\nexport default class MediaSource {\n  /**\n   * @member - media source id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - media source url\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - media source mimetype\n   * @type {string}\n   */\n  mimetype: string;\n  /**\n   * @member - media source drm data\n   * @type {Array<Drm>}\n   */\n  drmData: Array<Drm>;\n  /**\n   * @member - media source bandwidth\n   * @type {number}\n   */\n  bandwidth: number;\n  /**\n   * @member - media source width\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - media source height\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - media source label\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * Convert class to native js object.\n   * @returns {MediaSourceObject} - The json class object.\n   */\n  toJSON(): MediaSourceObject {\n    const response: MediaSourceObject = {\n      id: this.id,\n      url: this.url,\n      mimetype: this.mimetype\n    };\n    if (this.bandwidth) response.bandwidth = this.bandwidth;\n    if (this.width) response.width = this.width;\n    if (this.height) response.height = this.height;\n    if (this.label) response.label = this.label;\n    if (this.drmData && this.drmData.length > 0) {\n      response.drmData = [];\n      this.drmData.forEach(d => {\n        if (Array.isArray(response.drmData)) {\n          response.drmData.push(d.toJSON());\n        }\n      });\n    }\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-source.js","//@flow\nexport type DrmObject = {\n  licenseUrl: string,\n  scheme: string,\n  certificate?: string\n};\n\nexport default class Drm {\n  /**\n   * @member - license url\n   * @type {string}\n   */\n  licenseUrl: string;\n  /**\n   * @member - drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - drm certificate\n   * @type {string}\n   */\n  certificate: string;\n\n  /**\n   * @constructor\n   * @param {string} licenseUrl - the license url\n   * @param {string} scheme - the drm scheme\n   * @param {?string} certificate - the drm certificate\n   */\n  constructor(licenseUrl: string, scheme: string, certificate: ?string) {\n    this.licenseUrl = licenseUrl;\n    this.scheme = scheme;\n    if (certificate) {\n      this.certificate = certificate;\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {DrmObject} - The json class object.\n   */\n  toJSON(): DrmObject {\n    const response: DrmObject = {\n      licenseUrl: this.licenseUrl,\n      scheme: this.scheme\n    };\n    if (this.certificate) response.certificate = this.certificate;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/drm.js","//@flow\nimport MediaSources from './media-sources'\nimport type {MediaSourcesObject} from './media-sources'\n\nexport type MediaEntryObject = {\n  id: string,\n  name: string,\n  sources: MediaSourcesObject,\n  duration: number,\n  dvrStatus: number,\n  metadata: Object,\n  type: string\n};\n\nexport default class MediaEntry {\n  static Type: { [type: string]: string } = {\n    VOD: 'Vod',\n    LIVE: 'Live',\n    IMAGE: 'Image',\n    AUDIO: 'Audio',\n    UNKNOWN: 'Unknown'\n  };\n\n  /**\n   * @member - entry id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - entry name\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - entry sources\n   * @type {MediaSources}\n   */\n  sources: MediaSources;\n  /**\n   * @member - entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - entry type\n   * @type {string}\n   */\n  type: string;\n  /**\n   * @member - entry metadata\n   * @type {Object}\n   */\n  metadata: Object;\n  /**\n   * @member - DVR status\n   * @type {number}\n   */\n  dvrStatus: number;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.metadata = new Map();\n    this.sources = new MediaSources();\n    this.type = MediaEntry.Type.UNKNOWN;\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {MediaEntryObject} - The json class object.\n   */\n  toJSON(): MediaEntryObject {\n    return {\n      id: this.id,\n      name: this.name,\n      sources: this.sources.toJSON(),\n      duration: this.duration,\n      dvrStatus: this.dvrStatus,\n      metadata: this.metadata,\n      type: this.type\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-entry.js","// @flow\nimport MultiRequestBuilder, {MultiRequestResult} from './multi-request-builder'\n\nexport default class DataLoaderManager {\n  /**\n   * @member - Loaders response map index\n   * @type {Map<string,Array<number>>}\n   * @private\n   * @static\n   */\n  static _loadersResponseMap: Map<string, Array<number>> = new Map();\n  /**\n   * @member - Loaders multi request\n   * @type {MultiRequestBuilder}\n   * @protected\n   */\n  _multiRequest: MultiRequestBuilder;\n  /**\n   * @member - Loaders multi response\n   * @type {MultiRequestResult}\n   * @private\n   */\n  _multiResponse: MultiRequestResult;\n  /**\n   * @member - Loaders to execute\n   * @type {Map<string,Function>}\n   * @private\n   */\n  _loaders: Map<string, ILoader> = new Map();\n\n  /**\n   * Add loader too execution loaders map\n   * @function\n   * @param {Function} loader Loader to add\n   * @param {Object} params Loader params\n   * @returns {void}\n   */\n  add(loader: Function, params: Object): void {\n    let execution_loader = new loader(params);\n    if (execution_loader.isValid()) {\n      this._loaders.set(loader.id, execution_loader);\n      // Get the start index from the multiReqeust before adding current execution_loader requests\n      let startIndex = this._multiRequest.requests.length;\n      // Get the requests\n      let requests = execution_loader.requests;\n      // Add requests to muktiRequest queue\n      requests.forEach((request) => {\n        this._multiRequest.add(request);\n      });\n      // Create range array of current execution_loader requests\n      let executionLoaderResponseMap = Array.from(new Array(requests.length), (val, index) => index + startIndex);\n      // Add to map\n      DataLoaderManager._loadersResponseMap.set(loader.id, executionLoaderResponseMap);\n    }\n  }\n\n  /**\n   * Get data from all loaders using multi request\n   * @function\n   * @returns {Promise} Promise\n   */\n  fetchData(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._multiRequest.execute()\n        .then(response => {\n          this._multiResponse = response;\n          if (!response.success) {\n            reject(response);\n          } else {\n            let preparedData: Object = this.prepareData(response);\n            if (preparedData.success) {\n              resolve(this._loaders);\n            } else {\n              reject({success: false, data: preparedData.error});\n            }\n          }\n        }, err => {\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Prepare fetched data\n   * @function\n   * @param {MultiRequestResult} response - The multi request result\n   * @returns {Object} - The prepared data\n   */\n  prepareData(response: MultiRequestResult): Object {\n    this._loaders.forEach(function (loader, name) {\n      let loaderDataIndexes = DataLoaderManager._loadersResponseMap.get(name);\n      try {\n        if (loaderDataIndexes && loaderDataIndexes.length > 0) {\n          loader.response = (response.results.slice(loaderDataIndexes[0], loaderDataIndexes[loaderDataIndexes.length - 1] + 1));\n        }\n      } catch (err) {\n        return {success: false, error: err};\n      }\n    });\n    return {success: true, data: this._loaders};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/data-loader-manager.js","//@flow\nimport RequestBuilder from '../../util/request-builder'\nimport getLogger from '../../util/logger'\nimport ServiceResult from './base-service-result'\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger(\"MultiRequestBuilder\");\n  /**\n   * @member - Array of requests\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(): Promise<Object> {\n    try {\n      this.params = JSON.stringify(this.params);\n    } catch (err) {\n      MultiRequestBuilder._logger.error(`${err.message}`);\n    }\n    return new Promise((resolve, reject) => {\n      this.doHttpRequest().then(data => {\n        resolve(new MultiRequestResult(data));\n      }, err => {\n        const errorText: string = `Error on multiRequest execution, error <${err}>.`;\n        reject(errorText);\n      });\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger(\"MultiRequestResult\");\n  /**\n   * @member - Is success\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @member - Multi request response data\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    const responseArr = response.result ? response.result : response;\n    responseArr.forEach((result) => {\n      const serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        MultiRequestResult._logger.error(`Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`);\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/multi-request-builder.js","//@flow\nexport default class KalturaDrmPlaybackPluginData {\n  static Scheme: { [scheme: string]: string } = {\n    'drm.PLAYREADY_CENC': 'com.microsoft.playready',\n    'drm.WIDEVINE_CENC': 'com.widevine.alpha',\n    'fairplay.FAIRPLAY': 'com.apple.fairplay',\n    'WIDEVINE_CENC': 'com.widevine.alpha',\n    'PLAYREADY_CENC': 'com.microsoft.playready',\n    'FAIRPLAY': 'com.apple.fairplay'\n  };\n\n  /**\n   * @member - The drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - The license URL\n   * @type {string}\n   */\n  licenseURL: string;\n\n  /**\n   * @member - The drm certificate\n   * @type {?string}\n   */\n  certificate: ?string;\n\n  /**\n   * @constructor\n   * @param {Object} drm The json response\n   */\n  constructor(drm: any) {\n    this.scheme = drm.scheme;\n    this.licenseURL = drm.licenseURL;\n    this.certificate = drm.certificate;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js","// @flow\nexport type ProviderMediaInfoObject = {\n  entryId: string | number,\n  ks?: string\n};\n\nexport default class ProviderMediaInfo {\n  _entryId: number | string;\n  _ks: string;\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string) {\n    this._ks = value;\n  }\n\n  get entryId(): number | string {\n    return this._entryId;\n  }\n\n  constructor(entryId: number | string) {\n    this._entryId = entryId;\n  }\n\n  toJSON(): ProviderMediaInfoObject {\n    const response: ProviderMediaInfoObject = {\n      entryId: this.entryId\n    };\n    if (this.ks) response.ks = this.ks;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-media-info.js","// @flow\nexport type ProviderEnvConfigObject = {\n  serviceUrl: string,\n  cdnUrl?: string\n};\n\nexport default class ProviderEnvConfig {\n  _serviceUrl: string;\n  _cdnUrl: string;\n\n  get serviceUrl(): string {\n    return this._serviceUrl;\n  }\n\n  get cdnUrl(): string {\n    return this._cdnUrl;\n  }\n\n  set cdnUrl(value: string): void {\n    if (typeof value !== 'string') return;\n    this._cdnUrl = value;\n  }\n\n  constructor(serviceUrl: string | ProviderEnvConfigObject, cdnUrl?: string) {\n    validate(serviceUrl);\n    if (typeof serviceUrl === 'string') {\n      this._serviceUrl = serviceUrl;\n      if (cdnUrl) {\n        this.cdnUrl = cdnUrl;\n      }\n    } else if (typeof serviceUrl === 'object') {\n      this.fromJSON(serviceUrl);\n    }\n  }\n\n  fromJSON(json: ProviderEnvConfigObject): void {\n    this._serviceUrl = json.serviceUrl;\n    if (json.cdnUrl) {\n      this.cdnUrl = json.cdnUrl;\n    }\n  }\n\n  toJSON(): ProviderEnvConfigObject {\n    const response: ProviderEnvConfigObject = {\n      serviceUrl: this.serviceUrl\n    };\n    if (this.cdnUrl) response.cdnUrl = this.cdnUrl;\n    return response;\n  }\n}\n\n/**\n * Validate user input\n * @param {string | ProviderEnvConfigObject} param - user input\n * @returns {void}\n */\nfunction validate(param: string | ProviderEnvConfigObject): void {\n  if (typeof param === 'string') return;\n  if (typeof param === 'object' && typeof param.serviceUrl === 'string') return;\n  throw new TypeError('Invalid ProviderEnnConfig: serviceUrl must be provided and be a string');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/provider-options/provider-env-config.js","//@flow\nimport {clone} from '../../util/clone'\n\nconst defaultConfig: Object = {\n  serviceUrl: \"//api-preprod.ott.kaltura.com/v4_6/api_v3\",\n  cdnUrl: \"//api-preprod.ott.kaltura.com/v4_7\",\n  serviceParams: {\n    apiVersion: '4.7.1'\n  }\n};\n\nexport default class OTTConfiguration {\n  static set(clientConfig?: Object) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OTTConfiguration};\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/config.js","// @flow\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport MediaEntry from '../../entities/media-entry'\nimport MediaSources from '../../entities/media-sources'\nimport MediaSource from '../../entities/media-source'\nimport type {OTTKalturaPlaybackSource} from '../ott/response-types/kaltura-playback-source'\nimport type {OVPKalturaPlaybackSource} from '../ovp/response-types/kaltura-playback-source'\n\nexport default class BaseProviderParser {\n  static getMediaEntry(...parms): MediaEntry { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaEntry method must be implement by the derived class`);\n  }\n\n  static _getParsedSources(...parms): MediaSources { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_getParsedSources method must be implement by the derived class`);\n  }\n\n  static _parseAdaptiveSource(...parms): MediaSource { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseAdaptiveSource method must be implement by the derived class`);\n  }\n\n  static _isProgressiveSource(source: OVPKalturaPlaybackSource | OTTKalturaPlaybackSource): boolean {\n    const sourceFormat = SupportedStreamFormat.get(source.format);\n    return !!sourceFormat && sourceFormat.name === 'mp4';\n  }\n\n  static hasBlockActions(assetResponse: any): any {\n    if (assetResponse && assetResponse.playBackContextResult) {\n      const playbackContext = assetResponse.playBackContextResult;\n      for (let actionIndex = 0; actionIndex < playbackContext.actions.length; actionIndex++) {\n        if (playbackContext.actions[actionIndex].type === \"BLOCK\") {\n          return playbackContext.actions[actionIndex];\n        }\n      }\n    }\n    return null;\n  }\n\n  static hasErrorMessage(assetResponse: any): any {\n    const messages = assetResponse.playBackContextResult.messages;\n    for (let messagesIndex = 0; messagesIndex < messages.length; messagesIndex++) {\n      if (messages[messagesIndex].code !== \"OK\") {\n        return messages[messagesIndex];\n      }\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider-parser.js","// @flow\nimport {setLogLevel, getLogLevel, LogLevel} from '../../util/logger'\nimport DataLoaderManager from './data-loader-manager'\nimport ProviderOptions from './provider-options/provider-options'\nimport ProviderMediaConfig from './provider-media-config'\n\nexport default class BaseProvider<MI> {\n  _partnerId: number;\n  _ks: string;\n  _uiConfId: ?number;\n  _dataLoader: DataLoaderManager;\n  _playerVersion: string;\n  _logger: any;\n  _isAnonymous: boolean;\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get uiConfId(): ?number {\n    return this._uiConfId;\n  }\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string): void {\n    this._ks = value;\n  }\n\n  get playerVersion(): string {\n    return this._playerVersion;\n  }\n\n  get isAnonymous(): boolean {\n    return this._isAnonymous;\n  }\n\n  constructor(options: ProviderOptions, playerVersion: string) {\n    this._partnerId = options.partnerId;\n    this._uiConfId = options.uiConfId;\n    this._isAnonymous = !options.ks;\n    this.ks = options.ks;\n    this._playerVersion = playerVersion;\n    if (options.logLevel && this.LogLevel[options.logLevel]) {\n      setLogLevel(this.LogLevel[options.logLevel]);\n    }\n  }\n\n  getMediaConfig(mediaInfo: MI): Promise<ProviderMediaConfig> { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaConfig method must be implement by the derived class`);\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>): ProviderMediaConfig { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseDataFromResponse method must be implement by the derived class`);\n  }\n\n  get LogLevel(): { [level: string]: Object } {\n    return LogLevel;\n  }\n\n  getLogLevel(name?: string): Object {\n    return getLogLevel(name);\n  }\n\n  setLogLevel(level: Object, name?: string): void {\n    setLogLevel(level, name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider.js","//@flow\nexport default class KalturaAccessControlMessage {\n  /**\n   * @member - The access control message\n   * @type {string}\n   */\n  message: string;\n  /**\n   *  @member - The access control message code\n   * @@type {string}\n   */\n  code: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: Object) {\n    this.message = data.message;\n    this.code = data.code;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-access-control-message.js","//@flow\nexport default class KalturaRuleAction {\n  static Type: { [type: string]: string | number } = {\n    DRM_POLICY: \"drm.DRM_POLICY\",\n    BLOCK: 1,\n    PREVIEW: 2,\n    LIMIT_FLAVORS: 3,\n    ADD_TO_STORAGE: 4,\n    LIMIT_DELIVERY_PROFILES: 5,\n    SERVE_FROM_REMOTE_SERVER: 6,\n    REQUEST_HOST_REGEX: 7,\n    LIMIT_THUMBNAIL_CAPTURE: 8\n  };\n\n  /**\n   * @member - The type of the action\n   * @type {string|number}\n   */\n  type: string | number;\n\n  /**\n   * @constructor\n   * @param {Object} data - The response\n   */\n  constructor(data: Object) {\n    this.type = data.type;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-rule-action.js","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder'\nimport OTTConfiguration from '../config'\n\nconst config = OTTConfiguration.get();\nconst SERVICE_NAME: string = \"multirequest\";\n\nexport default class OTTService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ott params\n   * @function getMultiRequest\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(ks: string, partnerId?: number): MultiRequestBuilder {\n    const ottParams = config.serviceParams;\n    if (ks) {\n      Object.assign(ottParams, {ks: ks});\n    }\n    if (partnerId) {\n      Object.assign(ottParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = \"POST\";\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ottParams;\n    return multiReq;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/ott-service.js","const clone = (data) => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if (\n        (typeof e === \"object\" && e !== {}) ||\n        (Array.isArray(e) && e.length > 0)\n      ) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === \"object\") {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach((key) => {\n      if (\n        (typeof node[key] === \"object\" && node[key] !== {}) ||\n        (Array.isArray(node[key]) && node[key].length > 0)\n      ) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n\n\n\n// WEBPACK FOOTER //\n// ./util/clone.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 24\n// module chunks = 0 1","// @flow\nimport type {ProviderMediaInfoObject} from '../common/provider-media-info'\nimport ProviderMediaInfo from '../common/provider-media-info'\nimport KalturaAsset from './response-types/kaltura-asset'\nimport KalturaPlaybackContext from './response-types/kaltura-playback-context'\n\nexport type OTTProviderMediaInfoObject = ProviderMediaInfoObject & {\n  mediaType: string,\n  contextType: string,\n  protocol?: string,\n  fileIds?: string\n};\n\nexport default class OTTProviderMediaInfo extends ProviderMediaInfo {\n  _mediaType: string;\n  _contextType: string;\n  _protocol: string;\n  _fileIds: string;\n\n  get protocol(): string {\n    return this._protocol;\n  }\n\n  set protocol(value: string): void {\n    this._protocol = value;\n  }\n\n  get fileIds(): string {\n    return this._fileIds;\n  }\n\n  set fileIds(value: string) {\n    this._fileIds = value;\n  }\n\n  get mediaType(): string {\n    return this._mediaType;\n  }\n\n  set mediaType(value: string): void {\n    this._mediaType = value;\n  }\n\n  get contextType(): string {\n    return this._contextType;\n  }\n\n  set contextType(value: string): void {\n    this._contextType = value;\n  }\n\n  constructor(assetId: number, mediaType?: string, contextType?: string) {\n    super(assetId);\n    this._mediaType = mediaType || KalturaAsset.Type.MEDIA;\n    this._contextType = contextType || KalturaPlaybackContext.Type.PLAYBACK;\n  }\n\n  toJSON(): OTTProviderMediaInfoObject {\n    const response: OTTProviderMediaInfoObject = {\n      entryId: this.entryId,\n      mediaType: this.mediaType,\n      contextType: this.contextType\n    };\n    if (this.protocol) response.protocol = this.protocol;\n    if (this.fileIds) response.fileIds = this.fileIds;\n    if (this.ks) response.ks = this.ks;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/provider-media-info.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\n\nexport default class KalturaAsset extends ServiceResult {\n  static Type: { [type: string]: string } = {\n    MEDIA: \"media\",\n    RECORDING: \"recording\",\n    EPG: \"epg\"\n  };\n  /**\n   * @member - The asset id\n   * @type {number}\n   */\n  id: number;\n  /**\n   * @member - The asset name\n   * @type {string}\n   */\n  name: string = \"\";\n  /**\n   * @member - The asset name description\n   * @type {string}\n   */\n  description: string = \"\";\n  /**\n   * @member - The asset tags\n   * @type {Array<Object>}\n   */\n  tags: Array<Object> = [];\n  /**\n   * @member - The asset metas\n   * @type {Array<Object>}\n   */\n  metas: Array<Object> = [];\n  /**\n   * @member - The asset images\n   * @type {Array<any>}\n   */\n  pictures: Array<any> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n      this.id = response.id;\n      this.name = response.name;\n      this.description = response.description;\n      this.metas = this._formatTagsMetas(response.metas);\n      this.tags = this._formatTagsMetas(response.tags);\n      this.pictures = response.images;\n    }\n  }\n\n  _formatTagsMetas(objectToParse: any): Array<Object> {\n    const parsed = [];\n    Object.keys(objectToParse).forEach(function (key) {\n      if (objectToParse[key].objects) {\n        let value = \"\";\n        objectToParse[key].objects.forEach(function (object) {\n          value += object.value + \"|\";\n        });\n        parsed.push({key: key, value: value});\n      } else {\n        parsed.push({key: key, value: objectToParse[key].value});\n      }\n    });\n    return parsed;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-asset.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaAccessControlMessage from '../../common/response-types/kaltura-access-control-message'\nimport KalturaRuleAction from '../../common/response-types/kaltura-rule-action'\nimport KalturaPlaybackSource from './kaltura-playback-source'\n\nexport default class KalturaPlaybackContext extends ServiceResult {\n  static Type: { [type: string]: string } = {\n    TRAILER: \"TRAILER\",\n    CATCHUP: \"CATCHUP\",\n    START_OVER: \"START_OVER\",\n    PLAYBACK: \"PLAYBACK\"\n  };\n  /**\n   * @member - The playback sources\n   * @type {Array<KalturaPlaybackSource>}\n   */\n  sources: Array<KalturaPlaybackSource> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaRuleAction>}\n   */\n  actions: Array<KalturaRuleAction> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaAccessControlMessage>}\n   */\n  messages: Array<KalturaAccessControlMessage> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n      const messages = response.messages;\n      if (messages) {\n        messages.map(message => this.messages.push(new KalturaAccessControlMessage(message)));\n      }\n      const actions = response.actions;\n      if (actions) {\n        actions.map(action => this.actions.push(new KalturaRuleAction(action)));\n      }\n      const sources = response.sources;\n      if (sources) {\n        sources.map(source => this.sources.push(new KalturaPlaybackSource(source)));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-playback-context.js","//@flow\nimport KalturaDrmPlaybackPluginData from '../../common/response-types/kaltura-drm-playback-plugin-data'\n\nexport type OTTKalturaPlaybackSource = KalturaPlaybackSource;\n\nexport default class KalturaPlaybackSource {\n  format: string;\n  protocols: string;\n  drm: Array<KalturaDrmPlaybackPluginData> = [];\n  adsPolicy: string;\n  adsParam: string;\n  duration: number;\n  url: string;\n  type: string;\n  fileId: number;\n\n  /**\n   * @constructor\n   * @param {Object} source The response\n   */\n  constructor(source: Object) {\n    this.format = source.format;\n    this.adsPolicy = source.adsPolicy;\n    this.adsParam = source.adsParam;\n    this.duration = source.duration;\n    this.url = source.url;\n    this.type = source.type;\n    this.fileId = source.id;\n    this.protocols = source.protocols;\n    if (source.drm) {\n      source.drm.map(drm => this.drm.push(new KalturaDrmPlaybackPluginData(drm)));\n    }\n  }\n\n  /**\n   * Checks if source has DRM data\n   * @function hasDrmData\n   * @returns {boolean} Is source has DRM\n   */\n  hasDrmData(): boolean {\n    return this.drm && this.drm.length > 0;\n  }\n\n  /**\n   * Returns source desired protocol if supported\n   * @param {string} protocol - the desired protocol for the source (base play url protocol)\n   * @returns {string} - protocol if protocol is in the protocols list - if not empty string returned\n   */\n  getProtocol(protocol: string): string {\n    let returnValue: string = \"\";\n    if (this.protocols && this.protocols.length > 0) {\n      let protocolsArr: Array<string> = this.protocols.split(\",\");\n      protocolsArr.forEach((p) => {\n        if (p === protocol) {\n          returnValue = p;\n        }\n      });\n    } else if (protocol === \"http\") {\n      return protocol;\n    }\n    return returnValue;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/response-types/kaltura-playback-source.js","// @flow\nimport BaseProvider from '../common/base-provider'\nimport getLogger from '../../util/logger'\nimport OTTConfiguration from './config'\nimport OTTProviderMediaInfo from './provider-media-info'\nimport OTTDataLoaderManager from './loaders/data-loader-manager'\nimport OTTSessionLoader from './loaders/session-loader'\nimport OTTAssetLoader from './loaders/asset-loader'\nimport OTTProviderParser from './provider-parser'\nimport ProviderOptions from '../common/provider-options/provider-options'\nimport ProviderMediaConfig from '../common/provider-media-config'\n\nexport default class OTTProvider extends BaseProvider<OTTProviderMediaInfo> {\n  /**\n   * @constructor\n   * @param {ProviderOptions} options - provider options\n   * @param {string} playerVersion - player version\n   */\n  constructor(options: ProviderOptions, playerVersion: string) {\n    super(options, playerVersion);\n    this._logger = getLogger(\"OTTProvider\");\n    const _options = options.toJSON();\n    OTTConfiguration.set(_options.env);\n  }\n\n  /**\n   * Gets the backend media config.\n   * @param {OTTProviderMediaInfo} mediaInfo - ott media info\n   * @returns {Promise<ProviderMediaConfig>} - The provider media config\n   */\n  getMediaConfig(mediaInfo: OTTProviderMediaInfo): Promise<ProviderMediaConfig> {\n    const _mediaInfo = mediaInfo.toJSON();\n    if (_mediaInfo.ks) {\n      this.ks = _mediaInfo.ks;\n    }\n    this._dataLoader = new OTTDataLoaderManager(this.partnerId, this.ks);\n    return new Promise((resolve, reject) => {\n      const entryId = _mediaInfo.entryId;\n      if (entryId) {\n        let ks: string = this.ks;\n        if (!ks) {\n          ks = \"{1:result:ks}\";\n          this._dataLoader.add(OTTSessionLoader, {partnerId: this.partnerId});\n        }\n        const playbackContext = {\n          mediaProtocol: _mediaInfo.protocol,\n          assetFileIds: _mediaInfo.fileIds,\n          context: _mediaInfo.contextType\n        };\n        this._dataLoader.add(OTTAssetLoader, {\n          entryId: entryId,\n          ks: ks,\n          type: _mediaInfo.mediaType,\n          playbackContext: playbackContext\n        });\n        this._dataLoader.fetchData()\n          .then(response => {\n            try {\n              resolve(this._parseDataFromResponse(response));\n            } catch (err) {\n              reject({success: false, data: err});\n            }\n          }, err => {\n            reject(err);\n          });\n      } else {\n        reject({success: false, data: \"Missing mandatory parameter\"});\n      }\n    });\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>): ProviderMediaConfig {\n    this._logger.debug(\"Data parsing started\");\n    const mediaConfig = new ProviderMediaConfig(this.partnerId, this.uiConfId);\n    if (data) {\n      if (data.has(OTTSessionLoader.id)) {\n        const sessionLoader = data.get(OTTSessionLoader.id);\n        if (sessionLoader && sessionLoader.response) {\n          this.ks = sessionLoader.response;\n          mediaConfig.session.ks = this.ks;\n        }\n      } else {\n        mediaConfig.session.ks = this.ks;\n      }\n      if (data.has(OTTAssetLoader.id)) {\n        const assetLoader = data.get(OTTAssetLoader.id);\n        if (assetLoader && assetLoader.response) {\n          const blockedAction = OTTProviderParser.hasBlockActions(assetLoader.response);\n          if (blockedAction) {\n            const errorMessage = OTTProviderParser.hasErrorMessage(assetLoader.response);\n            if (errorMessage) {\n              this._logger.error(`Asset is blocked, error message: `, errorMessage);\n              throw errorMessage;\n            } else {\n              this._logger.error(`Asset is blocked, action: `, blockedAction);\n              throw blockedAction;\n            }\n          }\n          const mediaEntry = OTTProviderParser.getMediaEntry(assetLoader.response);\n          mediaConfig.sources = mediaEntry.sources;\n          mediaConfig.id = mediaEntry.id;\n          mediaConfig.name = mediaEntry.name;\n          mediaConfig.duration = mediaEntry.duration;\n          mediaConfig.metadata = mediaEntry.metadata;\n        }\n      }\n    }\n    this._logger.debug(\"Data parsing finished\", mediaConfig);\n    return mediaConfig;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/provider.js","// @flow\nimport ProviderOptions from '../common/provider-options/provider-options'\nimport ProviderEnvConfig from '../common/provider-media-config'\nimport ProviderMediaConfig from '../common/provider-media-config'\nimport OTTProviderMediaInfo from './provider-media-info'\nimport OTTProvider from './provider'\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-ott';\nconst VERSION = __VERSION__;\n\nexport {\n  ProviderOptions,\n  ProviderEnvConfig,\n  ProviderMediaConfig,\n  OTTProviderMediaInfo as ProviderMediaInfo,\n  OTTProvider as Provider,\n  NAME,\n  VERSION\n};\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/index.js","//@flow\nimport OTTAssetService from '../services/asset-service'\nimport OTTConfiguration from '../config'\nimport RequestBuilder from '../../../util/request-builder'\nimport KalturaPlaybackContext from '../response-types/kaltura-playback-context'\nimport KalturaAsset from '../response-types/kaltura-asset'\n\nconst config = OTTConfiguration.get();\n\nexport default class OTTAssetLoader implements ILoader {\n  _entryId: string;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"asset\";\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._entryId = params.entryId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.mediaDataResult = new KalturaAsset(response[0].data);\n    this._response.playBackContextResult = new KalturaPlaybackContext(response[1].data);\n  }\n\n  get response(): any {\n    return this._response;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    const requests: Array<RequestBuilder> = [];\n    requests.push(OTTAssetService.get(config.serviceUrl, params.ks, params.entryId));\n    requests.push(OTTAssetService.getPlaybackContext(config.serviceUrl, params.ks, params.entryId, params.type, params.playbackContext));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._entryId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/asset-loader.js","// @flow\nimport DataLoaderManager from '../../common/data-loader-manager'\nimport OTTService from '../services/ott-service'\n\nexport default class OTTDataLoaderManager extends DataLoaderManager {\n  /**\n   * @constructor\n   * @param {string} partnerId - partner id\n   * @param {string} ks - ks\n   */\n  constructor(partnerId: number, ks: string = \"\") {\n    super();\n    this._multiRequest = OTTService.getMultiRequest(ks, partnerId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/data-loader-manager.js","//@flow\nimport UserService from '../services/user-service'\nimport OTTConfiguration from '../config'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst config = OTTConfiguration.get();\n\nexport default class OTTSessionLoader implements ILoader {\n  _partnerId: number;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"session\";\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._partnerId = params.partnerId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.ks = response[0].data.ks;\n  }\n\n  get response(): any {\n    return this._response.ks;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    const requests: Array<RequestBuilder> = [];\n    requests.push(UserService.anonymousLogin(config.serviceUrl, params.partnerId, params.udid));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._partnerId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/loaders/session-loader.js","//@flow\nimport KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport getLogger from '../../util/logger'\nimport MediaEntry from '../../entities/media-entry'\nimport Drm from '../../entities/drm'\nimport MediaSource from '../../entities/media-source'\nimport MediaSources from '../../entities/media-sources'\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport KalturaDrmPlaybackPluginData from '../common/response-types/kaltura-drm-playback-plugin-data'\nimport BaseProviderParser from '../common/base-provider-parser'\n\nexport default class OTTProviderParser extends BaseProviderParser {\n  static _logger = getLogger(\"OTTProviderParser\");\n\n  /**\n   * Returns parsed media entry by given OTT response objects\n   * @function getMediaEntry\n   * @param {any} assetResponse - The asset response\n   * @returns {MediaEntry} - The media entry\n   * @static\n   * @public\n   */\n  static getMediaEntry(assetResponse: any): MediaEntry {\n    const mediaEntry = new MediaEntry();\n    const playbackContext = assetResponse.playBackContextResult;\n    const metadata = assetResponse.mediaDataResult;\n    const kalturaSources = playbackContext.sources;\n    mediaEntry.name = metadata.name;\n    mediaEntry.id = metadata.id;\n    const metaData = {description: metadata.description};\n    Object.assign(metaData, metadata.metas);\n    Object.assign(metaData, metadata.tags);\n    mediaEntry.metadata = metaData;\n    mediaEntry.sources = OTTProviderParser._getParsedSources(kalturaSources);\n    mediaEntry.duration = Math.max.apply(Math, kalturaSources.map(source => source.duration));\n    return mediaEntry;\n  }\n\n  /**\n   * Returns the parsed sources\n   * @function _getParsedSources\n   * @param {Array<KalturaPlaybackSource>} kalturaSources - The kaltura sources\n   * @param {Object} playbackContext - The playback context\n   * @return {MediaSources} - A media sources\n   * @static\n   * @private\n   */\n  static _getParsedSources(kalturaSources: Array<KalturaPlaybackSource>): MediaSources {\n    const sources = new MediaSources();\n    const addAdaptiveSource = (source: KalturaPlaybackSource) => {\n      const parsedSource = OTTProviderParser._parseAdaptiveSource(source);\n      const sourceFormat = SupportedStreamFormat.get(source.format);\n      sources.map(parsedSource, sourceFormat);\n    };\n    const parseAdaptiveSources = () => {\n      kalturaSources.filter((source) => !OTTProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n    const parseProgressiveSources = () => {\n      kalturaSources.filter((source) => OTTProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n    if (kalturaSources && kalturaSources.length > 0) {\n      parseAdaptiveSources();\n      parseProgressiveSources();\n    }\n    return sources;\n  }\n\n  /**\n   * Returns a parsed adaptive source\n   * @function _parseAdaptiveSource\n   * @param {KalturaPlaybackSource} kalturaSource - A kaltura source\n   * @returns {MediaSource} - The parsed adaptive kalturaSource\n   * @static\n   * @private\n   */\n  static _parseAdaptiveSource(kalturaSource: ?KalturaPlaybackSource): MediaSource {\n    const mediaSource = new MediaSource();\n    if (kalturaSource) {\n      const playUrl = kalturaSource.url;\n      const mediaFormat = SupportedStreamFormat.get(kalturaSource.format);\n      if (mediaFormat) {\n        mediaSource.mimetype = mediaFormat.mimeType;\n      }\n      if (playUrl === '') {\n        OTTProviderParser._logger.error(`failed to create play url from source, discarding source: (${kalturaSource.fileId}), ${kalturaSource.format}.`);\n        return mediaSource;\n      }\n      mediaSource.url = playUrl;\n      mediaSource.id = kalturaSource.fileId + ',' + kalturaSource.format;\n      if (kalturaSource.hasDrmData()) {\n        const drmParams: Array<Drm> = [];\n        kalturaSource.drm.forEach((drm) => {\n          drmParams.push(new Drm(drm.licenseURL, KalturaDrmPlaybackPluginData.Scheme[drm.scheme], drm.certificate));\n        });\n        mediaSource.drmData = drmParams;\n      }\n    }\n    return mediaSource;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/provider-parser.js","//@flow\nimport OTTService from './ott-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"asset\";\n\nexport type PlaybackContextOptions = {\n  mediaProtocol: string,\n  assetFileIds: string,\n  context: string\n};\n\nexport default class OTTAssetService extends OTTService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} serviceUrl The service base URL\n   * @param {string} ks The partner ID\n   * @param {string} assetId The asset ID\n   * @param {string} type The asset type (media/recording/epg)\n   * @param {PlaybackContextOptions} playbackContextOptions The playbackContextOptions\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static getPlaybackContext(serviceUrl: string, ks: string, assetId: string, type: string, playbackContextOptions: PlaybackContextOptions): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"getPlaybackContext\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    const contextDataParams: Object = {objectType: \"KalturaPlaybackContextOptions\"};\n    Object.assign(contextDataParams, playbackContextOptions);\n    request.params = {assetId: assetId, assetType: type, contextDataParams: contextDataParams, ks: ks};\n    return request;\n  }\n\n  static get(serviceUrl: string, ks: string, assetId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"get\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.params = {id: assetId, assetReferenceType: \"media\", ks: ks};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/asset-service.js","//@flow\nimport OTTService from './ott-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"ottuser\";\n\nexport default class OTTUserService extends OTTService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} serviceUrl The service base URL\n   * @param {string} partnerId The partner ID\n   * @param {string} udid The udid\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static anonymousLogin(serviceUrl: string, partnerId: number, udid?: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"anonymousLogin\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    const params: Object = {partnerId: partnerId};\n    if (udid) {\n      Object.assign(params, {udid: udid});\n    }\n    request.params = params;\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ott/services/user-service.js"],"sourceRoot":""}