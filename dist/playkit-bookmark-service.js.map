{"version":3,"sources":["./providers/webpack/universalModuleDefinition","./providers/webpack/bootstrap","./providers/./util/error/error.js","./providers/./util/error/severity.js","./providers/./util/error/category.js","./providers/./util/error/code.js","./providers/./util/request-builder.js","./providers/./util/logger.js","./providers/./util/clone.js","./providers/./k-provider/common/base-service-result.js","./providers/./k-provider/common/multi-request-builder.js","./providers/./k-provider/ott/config.js","./providers/./k-provider/ott/services/bookmark/bookmark-service.js","./providers/./k-provider/ott/services/ott-service.js","./providers/./k-provider/ott/services/bookmark/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Error","severity","category","code","data","this","_logger","error","RECOVERABLE","CRITICAL","NETWORK","SERVICE","PROVIDER","UNSUPPORTED_SCHEME","BAD_HTTP_STATUS","HTTP_ERROR","TIMEOUT","MALFORMED_DATA_URI","BAD_SERVER_RESPONSE","MULTIREQUEST_API_ERROR","API_RESPONSE_MISMATCH","ERROR","BLOCK_ACTION","MEDIA_STATUS_NOT_READY","MISSING_MANDATORY_PARAMS","MISSING_PLAY_SOURCE","METHOD_NOT_IMPLEMENTED","getLogger","RequestBuilder","headers","Map","async","timeout","maxAttempts","getUrl","serviceUrl","service","action","doHttpRequest","promise","Promise","resolve","reject","_requestPromise","url","Severity","Category","Code","_createXHR","request","XMLHttpRequest","onreadystatechange","readyState","status","response","JSON","parse","responseText","responseHeaders","_getResponseHeaders","_createError","text","open","method","retryConfig","requestTime","performance","now","ontimeout","_handleError","statusText","onerror","onabort","forEach","setRequestHeader","send","params","getAllResponseHeaders","split","filter","header","toLowerCase","indexOf","_attemptCounter","assign","attempt","JsLogger","VERSION","DEBUG","INFO","OFF","TIME","TRACE","WARN","createDefaultHandler","debug","enabledFor","getLevel","info","log","setHandler","setLevel","time","timeEnd","trace","useDefaults","warn","clone","node","Array","isArray","length","slice","e","keys","ServiceResult","objectType","hasError","ServiceError","message","MultiRequestBuilder","add","requests","push","requestParams","serviceDef","execute","requestsMustSucceed","stringify","err","FAILED_PARSING_REQUEST","then","multiRequestResult","MultiRequestResult","success","results","result","map","errorResults","serviceResult","defaultConfig","serviceParams","apiVersion","OTTConfiguration","set","clientConfig","OTTBookmarkService","ks","bookmark","playerData","averageBitrate","totalBitrate","currentBitrate","fileId","bookmarkServiceParams","type","context","id","position","programId","getMultiRequest","partnerId","config","ottParams","multiReq","NAME","__NAME__","__VERSION__"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAkB,SAAID,KAEtBD,EAAc,QAAIA,EAAc,SAAK,GAAIA,EAAc,QAAY,SAAIA,EAAc,QAAY,UAAK,GAAIA,EAAc,QAAY,SAAY,SAAIC,KARtJ,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,oMCzErD,IAKqBC,EA0BnB,WAAYC,EAAkBC,EAAkBC,EAAcC,QAAgB,IAAhBA,MAAY,IACxEC,KAAKJ,SAAWA,EAChBI,KAAKH,SAAWA,EAChBG,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,EACZJ,EAAMM,QAAQC,MAAd,YAAgCL,EAAhC,WAAmDC,EAAnD,KAA6DC,I,EA/B5CJ,E,WCVU,CAQ7BQ,YAAa,EAMbC,SAAU,I,EDJST,E,WEXU,CAE7BU,QAAS,EACTC,QAAS,EACTC,SAAU,I,EFOSZ,E,OGVE,CAIrBa,mBAAoB,IAKpBC,gBAAiB,KAKjBC,WAAY,KAKZC,QAAS,KAKTC,mBAAoB,KAKpBC,oBAAqB,KAKrBC,uBAAwB,KAKxBC,sBAAuB,KAKvBC,MAAO,IAKPC,aAAc,KAKdC,uBAAwB,KAMxBC,yBAA0B,IAK1BC,oBAAqB,KAKrBC,uBAAwB,O,EH5DL1B,E,UAiBG2B,YAtBG,W,kMIN3B,IAEqBC,E,WAwEnB,WAAYC,QAA0C,IAA1CA,MAA+B,IAAIC,KAAO,qBA1BR,CAC5CC,OAAO,EACPC,QAAS,EACTC,YAAa,IAuBuC,yBAd5B,GAexB5B,KAAKwB,QAAUA,E,2BASjBK,OAAA,SAAOC,GACL,OAAOA,EAAa,YAAc9B,KAAK+B,SAAW/B,KAAKgC,OAAS,WAAahC,KAAKgC,OAAS,K,EAQ7FC,cAAA,WAA8B,WACtBC,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpC,EAAKC,gBAAkB,CACrBF,UACAC,aAWJ,OARKrC,KAAKuC,KACRvC,KAAKsC,gBAAgBD,OACnB,IAAI1C,IAAMA,IAAM6C,SAASpC,SAAUT,IAAM8C,SAASpC,QAASV,IAAM+C,KAAK9B,mBAAoB,CACxF2B,IAAKvC,KAAKuC,OAIhBvC,KAAK2C,aACET,G,EAGTS,WAAA,WAAmB,WACbC,EAAU,IAAIC,eAClBD,EAAQE,mBAAqB,WAC3B,GAA2B,IAAvBF,EAAQG,YACa,MAAnBH,EAAQI,OACV,IACE,IAAMC,EAAWC,KAAKC,MAAMP,EAAQQ,cAGpC,OAFA,EAAKC,gBAAkB,EAAKC,oBAAoBV,GAEzC,EAAKN,gBAAgBF,QAAQa,GACpC,MAAO/C,GACP,EAAKoC,gBAAgBD,OACnB,EAAKkB,aAAaX,EAASjD,IAAM+C,KAAK7B,oBAAqB,CACzD2C,KAAMZ,EAAQQ,kBAO1BR,EAAQa,KAAKzD,KAAK0D,OAAQ1D,KAAKuC,IAAKvC,KAAK2D,YAAYjC,OACjD1B,KAAK2D,YAAYjC,OAAS1B,KAAK2D,YAAYhC,UAC7CiB,EAAQjB,QAAU3B,KAAK2D,YAAYhC,SAErC,IAAMiC,EAAcC,YAAYC,MAChClB,EAAQmB,UAAY,WAClB,EAAKC,aAAapB,EAASjD,IAAM+C,KAAK/B,QAAS,CAC7CgB,SAAUkC,YAAYC,MAAQF,GAAe,IAC7CK,WAAYrB,EAAQqB,cAGxBrB,EAAQsB,QAAUtB,EAAQuB,QAAU,WAClC,EAAKH,aAAapB,EAASjD,IAAM+C,KAAKhC,WAAY,CAChD8C,KAAMZ,EAAQQ,aACda,WAAYrB,EAAQqB,cAGxBjE,KAAKwB,QAAQ4C,SAAQ,SAACxF,EAAOM,GAC3B0D,EAAQyB,iBAAiBnF,EAAKN,MAEhCgE,EAAQ0B,KAAKtE,KAAKuE,S,EAGpBjB,oBAAA,SAAoBV,GAClB,OAAOA,EACJ4B,wBACAC,MAAM,MACNC,QAAO,SAAAC,GAAM,OAA4D,IAAxDA,EAAOC,cAAcC,QA9JP,U,EAiKpCb,aAAA,SAAapB,EAAyB9C,EAAcC,GAClD,IAAMG,EAAQF,KAAKuD,aAAaX,EAAS9C,EAAMC,GAK/C,GAJA6C,EAAQE,mBAAqB,aAC7BF,EAAQsB,QAAU,aAClBtB,EAAQmB,UAAY,aACpBnB,EAAQuB,QAAU,eACdnE,KAAK2D,YAAY/B,aAAe5B,KAAK8E,gBAAkB9E,KAAK2D,YAAY/B,aAI1E,OAAO5B,KAAKsC,gBAAgBD,OAAOnC,GAHnCF,KAAK8E,kBACL9E,KAAK2C,c,EAMTY,aAAA,SAAaX,EAAyB9C,EAAcC,GAMlD,OALA1B,OAAO0G,OAAOhF,EAAM,CAClBwC,IAAKvC,KAAKuC,IACVf,QAASxB,KAAKsD,oBAAoBV,GAClCoC,QAAShF,KAAK8E,kBAET,IAAInF,IAAMA,IAAM6C,SAASpC,SAAUT,IAAM8C,SAASpC,QAASP,EAAMC,I,mCCtJ5E,IAAIkF,EAAW,CACbzG,IAAK,iBAAO,CACV0G,QAAS,GACTC,MAAO,CAACvG,MAAO,GAAIV,KAAM,IACzB8C,MAAO,CAACpC,MAAO,GAAIV,KAAM,IACzBkH,KAAM,CAACxG,MAAO,GAAIV,KAAM,IACxBmH,IAAK,CAACzG,MAAO,GAAIV,KAAM,IACvBoH,KAAM,CAAC1G,MAAO,GAAIV,KAAM,IACxBqH,MAAO,CAAC3G,MAAO,GAAIV,KAAM,IACzBsH,KAAM,CAAC5G,MAAO,GAAIV,KAAM,IACxBuH,qBAAsB,aACtBC,MAAO,aACPC,WAAY,aACZzF,MAAO,aACP1B,IAAK,aACLoH,SAAU,aACVC,KAAM,aACNC,IAAK,aACLC,WAAY,aACZC,SAAU,aACVC,KAAM,aACNC,QAAS,aACTC,MAAO,aACPC,YAAa,aACbC,KAAM,gBAwBV,SAAS/E,EAAUpD,GAEjB,OAAO+G,EAASzG,IAAIN,GAsBPoD,O,8BC1Gf,sCAAMgF,EAAQ,SAARA,EAAQvG,GACZ,IAAIwG,EAkBJ,OAjBIC,MAAMC,QAAQ1G,IAChBwG,EAAOxG,EAAK2G,OAAS,EAAI3G,EAAK4G,MAAM,GAAK,IACpCvC,SAAQ,SAACwC,EAAGjJ,IACG,iBAANiJ,GAAkBA,IAAM,IAAQJ,MAAMC,QAAQG,IAAMA,EAAEF,OAAS,KACzEH,EAAK5I,GAAK2I,EAAMM,OAGK,iBAAT7G,GAChBwG,EAAOlI,OAAO0G,OAAO,GAAIhF,GACzB1B,OAAOwI,KAAKN,GAAMnC,SAAQ,SAAAlF,IACE,iBAAdqH,EAAKrH,IAAqBqH,EAAKrH,KAAS,IAAQsH,MAAMC,QAAQF,EAAKrH,KAASqH,EAAKrH,GAAKwH,OAAS,KACzGH,EAAKrH,GAAOoH,EAAMC,EAAKrH,SAI3BqH,EAAOxG,EAEFwG,I,qFClBYO,EAqBnB,SAAY7D,G,aAhBQ,G,EAgBU,c,EAAA,M,sFACA,wBAAxBA,EAAS8D,YACX/G,KAAKgH,UAAW,EAChBhH,KAAKE,MAAQ,IAAI+G,EAAahE,EAASnD,KAAMmD,EAASiE,UAC7CjE,EAAS/C,OAAuC,wBAA9B+C,EAAS/C,MAAM6G,YAC1C/G,KAAKgH,UAAW,EAChBhH,KAAKE,MAAQ,IAAI+G,EAAahE,EAAS/C,MAAMJ,KAAMmD,EAAS/C,MAAMgH,UAElElH,KAAKD,KAAOkD,GAKZgE,EAiBJ,SAAYnH,EAAcoH,GACxBlH,KAAKF,KAAOA,EACZE,KAAKkH,QAAUA,G,8PChDEC,E,2KAMe,I,oHAOlCC,IAAA,SAAIxE,GAA8C,MAChD5C,KAAKqH,SAASC,KAAK1E,GACnB,IAAM2E,EAAgB,GAChBC,EAAqB,CAACzF,QAASa,EAAQb,QAASC,OAAQY,EAAQZ,QAItE,OAHA3D,OAAO0G,OAAOwC,IAAd,MAA+BvH,KAAKqH,SAASX,QAASrI,OAAO0G,OAAOyC,EAAY5E,EAAQ2B,QAAxF,IACAlG,OAAO0G,OAAOwC,EAAevH,KAAKuE,QAClCvE,KAAKuE,OAASgD,EACPvH,M,EASTyH,QAAA,SAAQC,GAAgD,WACtD,OAAO,IAAIvF,SAAQ,SAACC,EAASC,GAC3B,IACE,EAAKkC,OAASrB,KAAKyE,UAAU,EAAKpD,QAClC,MAAOqD,GACPT,EAAoBlH,QAAQC,MAA5B,GAAqC0H,EAAIV,SACzC7E,EACE,IAAI1C,IAAMA,IAAM6C,SAASpC,SAAUT,IAAM8C,SAASlC,SAAUZ,IAAM+C,KAAKmF,uBAAwB,CAC7F3H,MAAO0H,EACPrD,OAAQ,EAAKA,UAInB,EAAKtC,gBAAgB6F,MACnB,SAAA/H,GACE,IAAMgI,EAAqB,IAAIC,EAAmBjI,EAAM2H,GACpDK,EAAmBE,QACrB7F,EAAQ,CACNZ,QAAS,EAAK6B,gBACdJ,SAAU8E,IAGZ1F,EACE,IAAI1C,IAAMA,IAAM6C,SAASpC,SAAUT,IAAM8C,SAASpC,QAASV,IAAM+C,KAAK5B,uBAAwB,CAC5FyB,IAAK,EAAKA,IACVf,QAAS,EAAK6B,gBACd6E,QAASH,EAAmBG,cAKpC,SAAAN,GACEvF,EAAOuF,U,GA7DgCrG,K,EAA5B4F,E,UACF7F,YAAU,wBAmEtB,IAAM0G,EAiBX,WAAY/E,EAAkByE,QAAsC,IAAtCA,OAAgC,GAAM,iBANpC,IAO9B,IAAMS,EAASlF,EAASkF,OAASlF,EAASkF,OAASlF,EAE7CiF,GADc1B,MAAMC,QAAQ0B,GAAUA,EAAS,CAACA,IAC1BC,KAAI,SAAAD,GAAM,OAAI,IAAIrB,EAAcqB,MACtDE,EAAeH,EAAQxD,QAAO,SAAA4D,GAAa,OAAIA,EAActB,YAEnEqB,EAAajE,SAAQ,SAAAkE,GACnBN,EAAmB/H,QAAQC,MAA3B,8CACgDoI,EAAcpI,MAAMJ,KADpE,iBACyFwI,EAAcpI,MAAMgH,QAD7G,QAKFlH,KAAKkI,QAAUA,EACVR,GAAuBW,EAAa3B,QAAW2B,EAAa3B,SAAW1G,KAAKkI,QAAQxB,OACvF1G,KAAKiI,SAAU,GAEfjI,KAAKkI,QAAUlI,KAAKkI,QAAQxD,QAAO,SAAA4D,GAAa,OAAKA,EAActB,YACnEhH,KAAKiI,SAAU,I,EAlCRD,E,UACM1G,YAAU,wB,0RCxEvBiH,EAAwB,CAC5BC,cAAe,CACbC,WAAY,UAIKC,E,kCACZC,IAAP,SAAWC,GACLA,GACFvK,OAAO0G,OAAOwD,EAAeK,I,EAI1BpK,IAAP,WACE,OAAO8H,YAAMiC,I,YCZjB,IAEqBM,E,sKAUZzB,IAAP,SAAWtF,EAAoBgH,EAAYC,GACzC,IAAMvH,EAA+B,IAAIC,IACzCD,EAAQmH,IAAI,eAAgB,oBAC5B,IAAM/F,EAAU,IAAIrB,IAAeC,GACnCoB,EAAQb,QAhBiB,WAiBzBa,EAAQZ,OAAS,MACjBY,EAAQc,OAAS,OACjBd,EAAQL,IAAMK,EAAQf,OAAOC,GAC7B,IAAMkH,EAAqB,CACzBjC,WAAY,4BACZ/E,OAAQ+G,EAASC,WAAWhH,OAC5BiH,eAAgBF,EAASC,WAAWC,eACpCC,aAAcH,EAASC,WAAWE,aAClCC,eAAgBJ,EAASC,WAAWG,eACpCC,OAAQL,EAASC,WAAWI,QAExBC,EAAgC,CACpCtC,WAAY,kBACZuC,KAAMP,EAASO,KACfC,QAASR,EAASQ,QAClBC,GAAIT,EAASS,GACbC,SAAUV,EAASU,SACnBT,WAAYA,GAEVD,EAASW,YAAWL,EAAsBK,UAAYX,EAASW,WACnE,IACMlB,EADSE,EAAiBlK,MACHgK,cAG7B,OAFAnK,OAAO0G,OAAOyD,EAAe,CAACO,SAAUM,EAAuBP,GAAIA,IACnElG,EAAQ2B,OAASrB,KAAKyE,UAAUa,GACzB5F,G,qCC/BF+G,gBAAP,SAAuBb,EAAYc,GACjC,IAAMC,EAASnB,EAAiBlK,MAC1BsL,EAAYD,EAAOrB,cACrBM,GACFzK,OAAO0G,OAAO+E,EAAW,CAAChB,GAAIA,IAE5Bc,GACFvL,OAAO0G,OAAO+E,EAAW,CAACF,UAAWA,IAEvC,IAAMpI,EAA+B,IAAIC,IACzCD,EAAQmH,IAAI,eAAgB,oBAC5B,IAAMoB,EAAW,IAAI5C,IAAoB3F,GAKzC,OAJAuI,EAASrG,OAAS,OAClBqG,EAAShI,QAxBgB,eAyBzBgI,EAASxH,IAAMwH,EAASlI,OAAOgI,EAAO/H,YACtCiI,EAASxF,OAASuF,EACXC,G,MCvBLC,EAAOC,wCACP/E,EAAUgF","file":"playkit-bookmark-service.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bookmark\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"services\"] = root[\"playkit\"][\"services\"] || {}, root[\"playkit\"][\"services\"][\"bookmark\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","//@flow\nimport getLogger from '../logger';\nimport {Severity} from './severity';\nimport type {SeverityType} from './severity';\nimport {Code} from './code';\nimport type {CodeType} from './code';\nimport {Category} from './category';\nimport type {CategoryType} from './category';\n\nconst CLASS_NAME: string = 'Error';\n\n/**\n * @classdesc This is a description of the error class.\n */\nexport default class Error {\n  severity: number;\n  category: number;\n  code: number;\n  data: any;\n  /**\n   * @enum {number}\n   */\n  static Severity: SeverityType = Severity;\n  /**\n   * @enum {number}\n   */\n  static Category: CategoryType = Category;\n  /**\n   * @enum {number}\n   */\n  static Code: CodeType = Code;\n  static _logger: any = getLogger(CLASS_NAME);\n\n  /**\n   * @constructor\n   * @param {number} severity - error's severity\n   * @param {number} category - error's category.\n   * @param {number} code - error's code.\n   * @param {any} data - additional data for the error.\n   */\n  constructor(severity: number, category: number, code: number, data: any = {}) {\n    this.severity = severity;\n    this.category = category;\n    this.code = code;\n    this.data = data;\n    Error._logger.error(`Category:${category} | Code:${code} |`, data);\n  }\n}\n","//@flow\n\ntype SeverityType = {[severity: string]: number};\n\nconst Severity: SeverityType = {\n  /**\n   * An error occurred, but the Player is attempting to recover from the error.\n   *\n   * If the Player cannot ultimately recover, it still may not throw a CRITICAL\n   * error.  For example, retrying for a media segment will never result in\n   * a CRITICAL error (the Player will just retry forever).\n   */\n  RECOVERABLE: 1,\n  /**\n   * A critical error that the library cannot recover from.  These usually cause\n   * the Player to stop loading or updating.  A new manifest must be loaded\n   * to reset the library.\n   */\n  CRITICAL: 2\n};\n\nexport {Severity};\nexport type {SeverityType};\n","//@flow\ntype CategoryType = {[category: string]: number};\n\nconst Category: CategoryType = {\n  /** Errors from the network stack. */\n  NETWORK: 1,\n  SERVICE: 2,\n  PROVIDER: 3\n};\n\nexport {Category};\nexport type {CategoryType};\n","//@flow\n\ntype CodeType = {[code: string]: number};\n\nconst Code: CodeType = {\n  /**\n   * A network request was made using an unsupported URI scheme.\n   */\n  UNSUPPORTED_SCHEME: 1000,\n\n  /**\n   * An HTTP network request returned an HTTP status that indicated a failure.\n   */\n  BAD_HTTP_STATUS: 1001,\n\n  /**\n   * An HTTP network request failed with an error, but not from the server.\n   */\n  HTTP_ERROR: 1002,\n\n  /**\n   * A network request timed out.\n   */\n  TIMEOUT: 1003,\n\n  /**\n   * A network request was made with a malformed data URI.\n   */\n  MALFORMED_DATA_URI: 1004,\n\n  /**\n   * The server responsded with 2xx response, but it couldn't be parsed\n   */\n  BAD_SERVER_RESPONSE: 1005,\n\n  /**\n   * The server response had a valid structure but contained an error from the API\n   */\n  MULTIREQUEST_API_ERROR: 1006,\n\n  /**\n   * The server response had a valid structure and valid API result, but it did not match the request\n   */\n  API_RESPONSE_MISMATCH: 1007,\n\n  /**\n   * The server responded with an error\n   */\n  ERROR: 2000,\n\n  /**\n   * The server responded with a block action\n   */\n  BLOCK_ACTION: 2001,\n\n  /**\n   * The server responded with status import or pre convert\n   */\n  MEDIA_STATUS_NOT_READY: 2002,\n\n  /**\n   * The provider is missing mandatory parameter/s\n   */\n\n  MISSING_MANDATORY_PARAMS: 3000,\n\n  /**\n   * The server responded with empty sources objects (for HLS, Dash and progressive)\n   */\n  MISSING_PLAY_SOURCE: 3001,\n\n  /**\n   * The provider doesn't implement the called api\n   */\n  METHOD_NOT_IMPLEMENTED: 3002\n};\n\nexport {Code};\nexport type {CodeType};\n","//@flow\nimport Error from './error/error';\n\nconst KALTURA_HEADER_PREFIX: string = 'x-';\n\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @memberof - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @memberof - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @memberof - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @memberof - Service tag\n   * @type {string}\n   */\n  tag: string;\n  /**\n   * @memberof - the response headers of the arra\n   * @type {Array<string>}\n   */\n  responseHeaders: Array<string>;\n  /**\n   * @description network retry configuration\n   * @memberof RequestBuilder\n   * @type {ProviderNetworkRetryParameters}\n   */\n  retryConfig: ProviderNetworkRetryParameters = {\n    async: true,\n    timeout: 0,\n    maxAttempts: 4\n  };\n\n  /**\n   * @description number of xhr attempts for the same multi - request.\n   * @memberof RequestBuilder\n   * @type {number}\n   * @private\n   */\n  _attemptCounter: number = 1;\n\n  /**\n   * @description hold the promise result of the XHR request(s) - if all tries fails, it rejects with the error.\n   * @memberof RequestBuilder\n   * @type {Object}\n   * @private\n   */\n  _requestPromise: Object;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    const promise = new Promise((resolve, reject) => {\n      this._requestPromise = {\n        resolve,\n        reject\n      };\n    });\n    if (!this.url) {\n      this._requestPromise.reject(\n        new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MALFORMED_DATA_URI, {\n          url: this.url\n        })\n      );\n    }\n    this._createXHR();\n    return promise;\n  }\n\n  _createXHR(): void {\n    let request = new XMLHttpRequest();\n    request.onreadystatechange = () => {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          try {\n            const response = JSON.parse(request.responseText);\n            this.responseHeaders = this._getResponseHeaders(request);\n            // the promise returns the response for backwards compatibility\n            return this._requestPromise.resolve(response);\n          } catch (error) {\n            this._requestPromise.reject(\n              this._createError(request, Error.Code.BAD_SERVER_RESPONSE, {\n                text: request.responseText\n              })\n            );\n          }\n        }\n      }\n    };\n    request.open(this.method, this.url, this.retryConfig.async);\n    if (this.retryConfig.async && this.retryConfig.timeout) {\n      request.timeout = this.retryConfig.timeout;\n    }\n    const requestTime = performance.now();\n    request.ontimeout = () => {\n      this._handleError(request, Error.Code.TIMEOUT, {\n        timeout: (performance.now() - requestTime) / 1000,\n        statusText: request.statusText\n      });\n    };\n    request.onerror = request.onabort = () => {\n      this._handleError(request, Error.Code.HTTP_ERROR, {\n        text: request.responseText,\n        statusText: request.statusText\n      });\n    };\n    this.headers.forEach((value, key) => {\n      request.setRequestHeader(key, value);\n    });\n    request.send(this.params);\n  }\n\n  _getResponseHeaders(request: XMLHttpRequest): Array<string> {\n    return request\n      .getAllResponseHeaders()\n      .split('\\n')\n      .filter(header => header.toLowerCase().indexOf(KALTURA_HEADER_PREFIX) === 0);\n  }\n\n  _handleError(request: XMLHttpRequest, code: number, data: Object): Promise<*> | void {\n    const error = this._createError(request, code, data);\n    request.onreadystatechange = function () {};\n    request.onerror = function () {};\n    request.ontimeout = function () {};\n    request.onabort = function () {};\n    if (this.retryConfig.maxAttempts && this._attemptCounter < this.retryConfig.maxAttempts) {\n      this._attemptCounter++;\n      this._createXHR();\n    } else {\n      return this._requestPromise.reject(error);\n    }\n  }\n\n  _createError(request: XMLHttpRequest, code: number, data: Object): Error {\n    Object.assign(data, {\n      url: this.url,\n      headers: this._getResponseHeaders(request),\n      attempt: this._attemptCounter\n    });\n    return new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, code, data);\n  }\n}\n","//@flow\nexport type LogLevelObject = {value: number, name: string};\nexport type LogLevelType = {[level: string]: LogLevelObject};\nexport type loggerFunctionType = {\n  VERSION: String,\n  DEBUG: LogLevelObject,\n  ERROR: LogLevelObject,\n  INFO: LogLevelObject,\n  OFF: LogLevelObject,\n  TIME: LogLevelObject,\n  TRACE: LogLevelObject,\n  WARN: LogLevelObject,\n  createDefaultHandler: Function,\n  debug: Function,\n  enabledFor: Function,\n  error: Function,\n  get: Function,\n  getLevel: Function,\n  info: Function,\n  log: Function,\n  setHandler: Function,\n  setLevel: Function,\n  time: Function,\n  timeEnd: Function,\n  trace: Function,\n  useDefaults: Function,\n  warn: Function\n};\n\nexport type LoggerType = {\n  getLogger: loggerFunctionType,\n  LogLevel: LogLevelType\n};\n\nlet JsLogger = {\n  get: () => ({\n    VERSION: '',\n    DEBUG: {value: '', name: ''},\n    ERROR: {value: '', name: ''},\n    INFO: {value: '', name: ''},\n    OFF: {value: '', name: ''},\n    TIME: {value: '', name: ''},\n    TRACE: {value: '', name: ''},\n    WARN: {value: '', name: ''},\n    createDefaultHandler: () => {},\n    debug: () => {},\n    enabledFor: () => {},\n    error: () => {},\n    get: () => {},\n    getLevel: () => {},\n    info: () => {},\n    log: () => {},\n    setHandler: () => {},\n    setLevel: () => {},\n    time: () => {},\n    timeEnd: () => {},\n    trace: () => {},\n    useDefaults: () => {},\n    warn: () => {}\n  })\n};\n\nlet LogLevel: LogLevelType = {};\n/**\n * set logger\n * @param {LoggerType} logger - the logger\n * @returns {void}\n */\nfunction setLogger(logger: ?LoggerType): void {\n  if (logger && typeof logger.getLogger === 'function') {\n    JsLogger.get = logger.getLogger;\n  }\n  if (logger && logger.LogLevel) {\n    LogLevel = logger.LogLevel;\n  }\n}\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  //$FlowFixMe\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name?: string): LogLevelObject {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: LogLevelObject, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {getLogLevel, setLogLevel, setLogger, LogLevel};\n","const clone = data => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if ((typeof e === 'object' && e !== {}) || (Array.isArray(e) && e.length > 0)) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === 'object') {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach(key => {\n      if ((typeof node[key] === 'object' && node[key] !== {}) || (Array.isArray(node[key]) && node[key].length > 0)) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else if (response.error && response.error.objectType === 'KalturaAPIException') {\n      this.hasError = true;\n      this.error = new ServiceError(response.error.code, response.error.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n","//@flow\nimport RequestBuilder from '../../util/request-builder';\nimport getLogger from '../../util/logger';\nimport ServiceResult from './base-service-result';\nimport Error from '../../util/error/error';\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger('MultiRequestBuilder');\n  /**\n   * @memberof - MultiRequestBuilder\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @param {boolean} requestsMustSucceed whether all of the requests must succeed or not\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(requestsMustSucceed?: boolean): Promise<Object> {\n    return new Promise((resolve, reject) => {\n      try {\n        this.params = JSON.stringify(this.params);\n      } catch (err) {\n        MultiRequestBuilder._logger.error(`${err.message}`);\n        reject(\n          new Error(Error.Severity.CRITICAL, Error.Category.PROVIDER, Error.Code.FAILED_PARSING_REQUEST, {\n            error: err,\n            params: this.params\n          })\n        );\n      }\n      this.doHttpRequest().then(\n        data => {\n          const multiRequestResult = new MultiRequestResult(data, requestsMustSucceed);\n          if (multiRequestResult.success) {\n            resolve({\n              headers: this.responseHeaders,\n              response: multiRequestResult\n            });\n          } else {\n            reject(\n              new Error(Error.Severity.CRITICAL, Error.Category.NETWORK, Error.Code.MULTIREQUEST_API_ERROR, {\n                url: this.url,\n                headers: this.responseHeaders,\n                results: multiRequestResult.results\n              })\n            );\n          }\n        },\n        err => {\n          reject(err);\n        }\n      );\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger('MultiRequestResult');\n  /**\n   * @memberof MultiRequestResult\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @memberof MultiRequestResult\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n  /**\n   * @constructor\n   * @param {Object} response data\n   * @param {boolean} requestsMustSucceed whether all of the requests must succeed\n   */\n  constructor(response: Object, requestsMustSucceed?: boolean = true) {\n    const result = response.result ? response.result : response;\n    const responseArr = Array.isArray(result) ? result : [result];\n    const results = responseArr.map(result => new ServiceResult(result));\n    const errorResults = results.filter(serviceResult => serviceResult.hasError);\n\n    errorResults.forEach(serviceResult => {\n      MultiRequestResult._logger.error(\n        `Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`\n      );\n    });\n\n    this.results = results;\n    if ((requestsMustSucceed && errorResults.length) || errorResults.length === this.results.length) {\n      this.success = false;\n    } else {\n      this.results = this.results.filter(serviceResult => !serviceResult.hasError);\n      this.success = true;\n    }\n  }\n}\n","//@flow\nimport {clone} from '../../util/clone';\n\nconst defaultConfig: Object = {\n  serviceParams: {\n    apiVersion: '7.8.1'\n  }\n};\n\nexport default class OTTConfiguration {\n  static set(clientConfig?: ProviderEnvConfigObject) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OTTConfiguration};\n","//@flow\nimport OTTService from '../ott-service';\nimport RequestBuilder from '../../../../util/request-builder';\nimport OTTConfiguration from '../../config';\n\nconst SERVICE_NAME: string = 'bookmark';\n\nexport default class OTTBookmarkService extends OTTService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function add\n   * @param {string} serviceUrl - The service url\n   * @param {string} ks - The ks\n   * @param {Object} bookmark - The udid\n   * @returns {RequestBuilder} - The request builder\n   * @static\n   */\n  static add(serviceUrl: string, ks: string, bookmark: Object): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set('Content-Type', 'application/json');\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = 'add';\n    request.method = 'POST';\n    request.url = request.getUrl(serviceUrl);\n    const playerData: Object = {\n      objectType: 'KalturaBookmarkPlayerData',\n      action: bookmark.playerData.action,\n      averageBitrate: bookmark.playerData.averageBitrate,\n      totalBitrate: bookmark.playerData.totalBitrate,\n      currentBitrate: bookmark.playerData.currentBitrate,\n      fileId: bookmark.playerData.fileId\n    };\n    const bookmarkServiceParams: Object = {\n      objectType: 'KalturaBookmark',\n      type: bookmark.type,\n      context: bookmark.context,\n      id: bookmark.id,\n      position: bookmark.position,\n      playerData: playerData\n    };\n    if (bookmark.programId) bookmarkServiceParams.programId = bookmark.programId;\n    const config = OTTConfiguration.get();\n    const serviceParams = config.serviceParams;\n    Object.assign(serviceParams, {bookmark: bookmarkServiceParams, ks: ks});\n    request.params = JSON.stringify(serviceParams);\n    return request;\n  }\n}\n","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder';\nimport OTTConfiguration from '../config';\n\nconst SERVICE_NAME: string = 'multirequest';\n\nexport default class OTTService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ott params\n   * @function getMultiRequest\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(ks: string, partnerId?: number): MultiRequestBuilder {\n    const config = OTTConfiguration.get();\n    const ottParams = config.serviceParams;\n    if (ks) {\n      Object.assign(ottParams, {ks: ks});\n    }\n    if (partnerId) {\n      Object.assign(ottParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set('Content-Type', 'application/json');\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = 'POST';\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ottParams;\n    return multiReq;\n  }\n}\n","// @flow\nimport RequestBuilder from '../../../../util/request-builder';\nimport OTTConfiguration from '../../config';\nimport OTTBookmarkService from './bookmark-service';\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-bookmark-service';\nconst VERSION = __VERSION__;\n\nexport {OTTBookmarkService, OTTConfiguration, RequestBuilder, NAME, VERSION};\n"],"sourceRoot":""}