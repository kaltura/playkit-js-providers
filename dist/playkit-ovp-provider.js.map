{"version":3,"sources":["./providers/webpack/universalModuleDefinition","./providers/webpack/bootstrap 665f705bccb1cc812193","./providers/./util/request-builder.js","./providers/./util/logger.js","./providers/./k-provider/common/base-service-result.js","./providers/./entities/media-entry.js","./providers/./entities/media-format.js","./providers/./entities/media-source.js","./providers/./entities/media-sources.js","./providers/./k-provider/ovp/config.js","./providers/./entities/drm.js","./providers/./k-provider/common/data-loader-manager.js","./providers/./k-provider/common/multi-request-builder.js","./providers/./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js","./providers/./k-provider/ovp/services/ovp-service.js","./providers/./k-provider/common/base-provider-parser.js","./providers/./k-provider/common/base-provider.js","./providers/./k-provider/common/response-types/kaltura-access-control-message.js","./providers/./k-provider/common/response-types/kaltura-rule-action.js","./providers/./util/clone.js","./providers/../~/js-logger/src/logger.js","./providers/./k-provider/ovp/response-types/kaltura-flavor-asset.js","./providers/./k-provider/ovp/response-types/kaltura-media-entry.js","./providers/./k-provider/ovp/response-types/kaltura-metadata-list-response.js","./providers/./k-provider/ovp/response-types/kaltura-playback-source.js","./providers/./k-provider/ovp/provider.js","./providers/./k-provider/ovp/index.js","./providers/./k-provider/ovp/loaders/data-loader-manager.js","./providers/./k-provider/ovp/loaders/media-entry-loader.js","./providers/./k-provider/ovp/loaders/session-loader.js","./providers/./k-provider/ovp/play-source-url-builder.js","./providers/./k-provider/ovp/provider-parser.js","./providers/./k-provider/ovp/response-types/kaltura-base-entry-list-response.js","./providers/./k-provider/ovp/response-types/kaltura-metadata.js","./providers/./k-provider/ovp/response-types/kaltura-playback-context.js","./providers/./k-provider/ovp/services/base-entry-service.js","./providers/./k-provider/ovp/services/meta-data-service.js","./providers/./k-provider/ovp/services/session-service.js","./providers/./util/xml-parser.js"],"names":["RequestBuilder","headers","Map","serviceUrl","service","action","url","Error","request","XMLHttpRequest","Promise","resolve","reject","onreadystatechange","readyState","status","jsonResponse","JSON","parse","responseText","code","message","open","method","forEach","value","key","setRequestHeader","send","params","JsLogger","LogLevel","DEBUG","INFO","TIME","WARN","ERROR","OFF","useDefaults","defaultLevel","getLogger","name","get","getLogLevel","getLevel","setLogLevel","level","setLevel","ServiceResult","response","hasError","objectType","error","ServiceError","data","MediaEntry","metadata","sources","type","Type","UNKNOWN","id","toJSON","duration","dvrStatus","VOD","LIVE","IMAGE","AUDIO","MediaFormat","DASH","mimeType","pathExt","HLS","WVM","MP4","MP3","SupportedStreamFormat","MediaSource","mimetype","bandwidth","width","height","label","drmData","length","Array","isArray","push","d","MediaSources","progressive","dash","hls","source","mediaFormat","p","h","defaultConfig","cdnUrl","serviceParams","apiVersion","format","OVPConfiguration","clientConfig","Object","assign","Drm","licenseUrl","scheme","certificate","DataLoaderManager","_loaders","loader","execution_loader","isValid","set","startIndex","_multiRequest","requests","add","executionLoaderResponseMap","from","val","index","_loadersResponseMap","execute","then","_multiResponse","success","preparedData","prepareData","err","loaderDataIndexes","results","slice","MultiRequestBuilder","requestParams","serviceDef","stringify","_logger","doHttpRequest","MultiRequestResult","errorText","responseArr","result","serviceResult","KalturaDrmPlaybackPluginData","drm","licenseURL","Scheme","SERVICE_NAME","OVPService","playerVersion","ks","partnerId","config","ovpParams","clientTag","multiReq","getUrl","BaseProviderParser","TypeError","sourceFormat","assetResponse","playBackContextResult","playbackContext","actionIndex","actions","messages","messagesIndex","BaseProvider","_partnerId","_uiConfId","_ks","_playerVersion","_isAnonymous","options","uiConfId","logLevel","mediaInfo","KalturaAccessControlMessage","KalturaRuleAction","DRM_POLICY","BLOCK","PREVIEW","LIMIT_FLAVORS","ADD_TO_STORAGE","LIMIT_DELIVERY_PROFILES","SERVE_FROM_REMOTE_SERVER","REQUEST_HOST_REGEX","LIMIT_THUMBNAIL_CAPTURE","clone","node","e","i","keys","KalturaFlavorAsset","flavorParamsId","fileExt","bitrate","frameRate","isOriginal","isWeb","containerFormat","videoCodecId","language","Status","QUEUED","CONVERTING","READY","DELETED","NOT_APPLICABLE","TEMP","WAIT_FOR_CONVERT","IMPORTING","VALIDATING","EXPORTING","KalturaMediaEntry","entry","description","dataUrl","entryType","mediaType","flavorParamsIds","poster","thumbnailUrl","EntryType","AUTOMATIC","EXTERNAL_MEDIA","MEDIA_CLIP","MIX","PLAYLIST","DATA","LIVE_STREAM","LIVE_CHANNEL","DOCUMENT","MediaType","VIDEO","LIVE_STREAM_FLASH","LIVE_STREAM_WINDOWS_MEDIA","LIVE_STREAM_REAL_MEDIA","LIVE_STREAM_QUICK_TIME","EntryStatus","ERROR_IMPORTING","ERROR_CONVERTING","SCAN_FAILURE","IMPORT","INFECTED","PRECONVERT","PENDING","MODERATE","BLOCKED","NO_CONTENT","EntryModerationStatus","PENDING_MODERATION","APPROVED","REJECTED","FLAGGED_FOR_REVIEW","AUTO_APPROVED","KalturaMetadataListResponse","responseObj","totalCount","metas","objects","map","meta","KalturaPlaybackSource","deliveryProfileId","protocols","flavorIds","protocol","returnValue","protocolsArr","split","OVPProvider","env","_dataLoader","entryId","fetchData","_parseDataFromResponse","debug","mediaConfig","session","dvr","plugins","has","sessionLoader","mediaLoader","blockedAction","hasBlockActions","errorMessage","hasErrorMessage","mediaEntry","getMediaEntry","isAnonymous","NAME","__NAME__","VERSION","Provider","OVPDataLoaderManager","getMultiRequest","OVPMediaEntryLoader","_response","buildRequests","_entryId","list","getPlaybackContext","_requests","mediaEntryResponse","entries","metadataListResult","OVPSessionLoader","anonymousSession","PlaySourceUrlBuilder","urlParams","extension","playUrl","endsWith","OVPProviderParser","metadataList","kalturaSources","_getParsedSources","_parseMetadata","addAdaptiveSource","parsedSource","_parseAdaptiveSource","flavorAssets","parseAdaptiveSources","filter","_isProgressiveSource","parseProgressiveSources","progressiveSource","find","_parseProgressiveSources","kalturaSource","mediaSource","hasFlavorIds","build","getProtocol","_getBaseProtocol","hasDrmData","drmParams","sourceId","flavor","metaXml","domParser","DOMParser","xml","replace","parseFromString","metasObj","xmlToJson","metaKeys","protocolRegex","exec","document","location","KalturaBaseEntryListResponse","KalturaMetadata","metadataProfileId","metadataProfileVersion","metadataObjectType","objectId","version","created","Date","setUTCSeconds","createdAt","updated","updatedAt","ObjectType","AD_CUE_POINT","ANNOTATION","CODE_CUE_POINT","THUMB_CUE_POINT","ENTRY","CATEGORY","USER","PARTNER","DYNAMIC_OBJECT","VALID","INVALID","KalturaPlaybackContext","OVPBaseEntryService","tag","contextDataParams","flavorTags","getEntryListReqParams","filterParams","redirectFromEntryId","responseProfileParams","fields","responseProfile","OVPMetadataService","objectIdEqual","metadataObjectTypeEqual","OVPSessionService","widgetId","XmlParser","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","old"],"mappings":"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C9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;A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","file":"playkit-ovp-provider.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ovp\"] = factory();\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"providers\"] = root[\"playkit\"][\"providers\"] || {}, root[\"playkit\"][\"providers\"][\"ovp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 665f705bccb1cc812193","//@flow\nexport default class RequestBuilder {\n  /**\n   * @member - Service name\n   * @type {string}\n   */\n  service: string;\n  /**\n   * @member - Service action\n   * @type {string}\n   */\n  action: string;\n  /**\n   * @member - Service params\n   * @type {any}\n   */\n  params: any;\n  /**\n   * @member - Service headers\n   * @type {Map<string, string>}\n   */\n  headers: Map<string, string>;\n  /**\n   * @member - Service URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - Service method (POST,GET,DELETE etc..)\n   * @type {string}\n   */\n  method: string;\n  /**\n   * @member - Service tag\n   * @type {string}\n   */\n  tag: string;\n\n  /**\n   * @constructor\n   * @param {Map<string, string>} headers The request headers\n   */\n  constructor(headers: Map<string, string> = new Map()) {\n    this.headers = headers;\n  }\n\n  /**\n   * Builds restful service URL\n   * @function getUrl\n   * @param {string} serviceUrl - The service base URL\n   * @returns {string} The service URL\n   */\n  getUrl(serviceUrl: string): string {\n    return serviceUrl + '/service/' + this.service + (this.action ? '/action/' + this.action : '');\n  }\n\n  /**\n   * Executes service\n   * @function doHttpRequest\n   * @returns {Promise.<any>} Service response as promise\n   */\n  doHttpRequest(): Promise<any> {\n    if (!this.url) {\n      throw new Error(\"serviceUrl is mandatory for request builder\");\n    }\n    let request = new XMLHttpRequest();\n    return new Promise((resolve, reject) => {\n      request.onreadystatechange = function () {\n        if (request.readyState === 4) {\n          if (request.status === 200) {\n            let jsonResponse = JSON.parse(request.responseText);\n            if (jsonResponse && typeof(jsonResponse) === 'object' && jsonResponse.code && jsonResponse.message)\n              reject(jsonResponse);\n            else\n              resolve(jsonResponse);\n          } else {\n            reject(request.responseText);\n          }\n        }\n      };\n      request.open(this.method, this.url);\n      this.headers.forEach((value, key) => {\n        request.setRequestHeader(key, value);\n      });\n      request.send(this.params);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/request-builder.js","//@flow\nimport * as JsLogger from 'js-logger';\n\nexport type LogLevelObject = { value: number, name: string };\nexport type LogLevelType = { [level: string]: LogLevelObject };\n\nconst LogLevel: LogLevelType = {\n  DEBUG: JsLogger.DEBUG,\n  INFO: JsLogger.INFO,\n  TIME: JsLogger.TIME,\n  WARN: JsLogger.WARN,\n  ERROR: JsLogger.ERROR,\n  OFF: JsLogger.OFF\n};\n\nJsLogger.useDefaults({defaultLevel: JsLogger.ERROR});\n\n/**\n * get a logger\n * @param {?string} name - the logger name\n * @returns {Object} - the logger class\n */\nfunction getLogger(name?: string): Object {\n  if (!name) {\n    return JsLogger;\n  }\n  return JsLogger.get(name);\n}\n\n/**\n * get the log level\n * @param {?string} name - the logger name\n * @returns {LogLevelObject} - the log level\n */\nfunction getLogLevel(name?: string): LogLevelObject {\n  return getLogger(name).getLevel();\n}\n\n/**\n * sets the logger level\n * @param {LogLevelObject} level - the log level\n * @param {?string} name - the logger name\n * @returns {void}\n */\nfunction setLogLevel(level: LogLevelObject, name?: string): void {\n  getLogger(name).setLevel(level);\n}\n\nexport default getLogger;\nexport {LogLevel, getLogLevel, setLogLevel};\n\n\n\n// WEBPACK FOOTER //\n// ./util/logger.js","//@flow\nexport default class ServiceResult {\n  /**\n   * @member - Is service returned an error\n   * @type {boolean}\n   */\n  hasError: boolean = false;\n  /**\n   * @member - The service error\n   * @type {ServiceError}\n   */\n  error: ServiceError;\n  /**\n   * @member - The service result data\n   * @type {Object}\n   */\n  data: Object;\n\n  /**\n   * @constructor\n   * @param {Object} response - Service response\n   */\n  constructor(response: Object) {\n    if (response.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.code, response.message);\n    } else if (response.error && response.error.objectType === \"KalturaAPIException\") {\n      this.hasError = true;\n      this.error = new ServiceError(response.error.code, response.error.message);\n    } else {\n      this.data = response;\n    }\n  }\n}\n\nclass ServiceError {\n  /**\n   * @member - The error code\n   * @type {string}\n   */\n  code: string;\n  /**\n   * @member - The error message\n   * @type {string}\n   */\n  message: string;\n\n  /**\n   * @constructor\n   * @param {string} code - The result code\n   * @param {string} message - The result message\n   */\n  constructor(code: string, message: string) {\n    this.code = code;\n    this.message = message;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-service-result.js","//@flow\nimport MediaSources from './media-sources'\n\nexport default class MediaEntry {\n  static Type: { [type: string]: string } = {\n    VOD: 'Vod',\n    LIVE: 'Live',\n    IMAGE: 'Image',\n    AUDIO: 'Audio',\n    UNKNOWN: 'Unknown'\n  };\n\n  /**\n   * @member - entry id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - entry name\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - entry sources\n   * @type {MediaSources}\n   */\n  sources: MediaSources;\n  /**\n   * @member - entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - entry type\n   * @type {string}\n   */\n  type: string;\n  /**\n   * @member - entry metadata\n   * @type {Object}\n   */\n  metadata: Object;\n  /**\n   * @member - DVR status\n   * @type {number}\n   */\n  dvrStatus: number;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.metadata = new Map();\n    this.sources = new MediaSources();\n    this.type = MediaEntry.Type.UNKNOWN;\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderMediaEntryObject} - The json class object.\n   */\n  toJSON(): ProviderMediaEntryObject {\n    return {\n      id: this.id,\n      name: this.name,\n      sources: this.sources.toJSON(),\n      duration: this.duration,\n      dvrStatus: this.dvrStatus,\n      metadata: this.metadata,\n      type: this.type\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-entry.js","//@flow\nexport const MediaFormat: { [name: string]: ProviderMediaFormatType } = {\n  DASH: {\n    name: 'dash',\n    mimeType: 'application/dash+xml',\n    pathExt: 'mpd'\n  },\n  HLS: {\n    name: 'hls',\n    mimeType: 'application/x-mpegURL',\n    pathExt: 'm3u8'\n  },\n  WVM: {\n    name: 'wvm',\n    mimeType: 'video/wvm',\n    pathExt: 'wvm'\n  },\n  MP4: {\n    name: 'mp4',\n    mimeType: 'video/mp4',\n    pathExt: 'mp4'\n  },\n  MP3: {\n    name: 'mp3',\n    mimeType: 'audio/mpeg',\n    pathExt: 'mp3'\n  }\n};\n\nexport const SupportedStreamFormat: Map<string, ProviderMediaFormatType> = new Map([\n  [\"mpegdash\", MediaFormat.DASH],\n  [\"applehttp\", MediaFormat.HLS],\n  [\"url\", MediaFormat.MP4]\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-format.js","//@flow\nimport Drm from './drm'\n\nexport default class MediaSource {\n  /**\n   * @member - media source id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - media source url\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - media source mimetype\n   * @type {string}\n   */\n  mimetype: string;\n  /**\n   * @member - media source drm data\n   * @type {Array<Drm>}\n   */\n  drmData: Array<Drm>;\n  /**\n   * @member - media source bandwidth\n   * @type {number}\n   */\n  bandwidth: number;\n  /**\n   * @member - media source width\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - media source height\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - media source label\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderMediaSourceObject} - The json class object.\n   */\n  toJSON(): ProviderMediaSourceObject {\n    const response: ProviderMediaSourceObject = {\n      id: this.id,\n      url: this.url,\n      mimetype: this.mimetype\n    };\n    if (this.bandwidth) response.bandwidth = this.bandwidth;\n    if (this.width) response.width = this.width;\n    if (this.height) response.height = this.height;\n    if (this.label) response.label = this.label;\n    if (this.drmData && this.drmData.length > 0) {\n      response.drmData = [];\n      this.drmData.forEach(d => {\n        if (Array.isArray(response.drmData)) {\n          response.drmData.push(d.toJSON());\n        }\n      });\n    }\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-source.js","// @flow\nimport MediaSource from './media-source'\nimport {MediaFormat} from './media-format'\n\nexport default class MediaSources {\n  /**\n   * Progressive download media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  progressive: Array<MediaSource>;\n  /**\n   * Dash media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  dash: Array<MediaSource>;\n  /**\n   * Hls media sources container.\n   * @type {Array<MediaSource>}\n   * @public\n   */\n  hls: Array<MediaSource>;\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    this.progressive = [];\n    this.dash = [];\n    this.hls = [];\n  }\n\n  /**\n   * Maps the source to one of the containers according to his media format.\n   * @param {MediaSource} source - The source to add to one of the containers.\n   * @param {MediaFormat} mediaFormat - The media format of the source.\n   * @returns {void}\n   */\n  map(source: MediaSource, mediaFormat: ?ProviderMediaFormatType) {\n    if (mediaFormat) {\n      switch (mediaFormat.name) {\n        case MediaFormat.MP4.name:\n          this.progressive.push(source);\n          break;\n        case MediaFormat.DASH.name:\n          this.dash.push(source);\n          break;\n        case MediaFormat.HLS.name:\n          this.hls.push(source);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderMediaSourcesObject} - The json class object.\n   */\n  toJSON(): ProviderMediaSourcesObject {\n    const response: ProviderMediaSourcesObject = {\n      progressive: [],\n      dash: [],\n      hls: []\n    };\n    this.progressive.forEach(p => response.progressive.push(p.toJSON()));\n    this.hls.forEach(h => response.hls.push(h.toJSON()));\n    this.dash.forEach(d => response.dash.push(d.toJSON()));\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/media-sources.js","//@flow\nimport {clone} from '../../util/clone'\n\nconst defaultConfig: Object = {\n  serviceUrl: \"//www.kaltura.com/api_v3\",\n  cdnUrl: \"//cdnapisec.kaltura.com\",\n  serviceParams: {\n    apiVersion: '3.3.0',\n    format: 1\n  }\n};\n\nexport default class OVPConfiguration {\n  static set(clientConfig?: ProviderEnvConfigObject) {\n    if (clientConfig) {\n      Object.assign(defaultConfig, clientConfig);\n    }\n  }\n\n  static get(): Object {\n    return clone(defaultConfig);\n  }\n}\n\nexport {OVPConfiguration};\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/config.js","//@flow\nexport default class Drm {\n  /**\n   * @member - license url\n   * @type {string}\n   */\n  licenseUrl: string;\n  /**\n   * @member - drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - drm certificate\n   * @type {string}\n   */\n  certificate: string;\n\n  /**\n   * @constructor\n   * @param {string} licenseUrl - the license url\n   * @param {string} scheme - the drm scheme\n   * @param {?string} certificate - the drm certificate\n   */\n  constructor(licenseUrl: string, scheme: string, certificate: ?string) {\n    this.licenseUrl = licenseUrl;\n    this.scheme = scheme;\n    if (certificate) {\n      this.certificate = certificate;\n    }\n  }\n\n  /**\n   * Convert class to native js object.\n   * @returns {ProviderDrmDataObject} - The json class object.\n   */\n  toJSON(): ProviderDrmDataObject {\n    const response: ProviderDrmDataObject = {\n      licenseUrl: this.licenseUrl,\n      scheme: this.scheme\n    };\n    if (this.certificate) response.certificate = this.certificate;\n    return response;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./entities/drm.js","// @flow\nimport MultiRequestBuilder, {MultiRequestResult} from './multi-request-builder'\n\nexport default class DataLoaderManager {\n  /**\n   * @member - Loaders response map index\n   * @type {Map<string,Array<number>>}\n   * @private\n   * @static\n   */\n  static _loadersResponseMap: Map<string, Array<number>> = new Map();\n  /**\n   * @member - Loaders multi request\n   * @type {MultiRequestBuilder}\n   * @protected\n   */\n  _multiRequest: MultiRequestBuilder;\n  /**\n   * @member - Loaders multi response\n   * @type {MultiRequestResult}\n   * @private\n   */\n  _multiResponse: MultiRequestResult;\n  /**\n   * @member - Loaders to execute\n   * @type {Map<string,Function>}\n   * @private\n   */\n  _loaders: Map<string, ILoader> = new Map();\n\n  /**\n   * Add loader too execution loaders map\n   * @function\n   * @param {Function} loader Loader to add\n   * @param {Object} params Loader params\n   * @returns {void}\n   */\n  add(loader: Function, params: Object): void {\n    let execution_loader = new loader(params);\n    if (execution_loader.isValid()) {\n      this._loaders.set(loader.id, execution_loader);\n      // Get the start index from the multiReqeust before adding current execution_loader requests\n      let startIndex = this._multiRequest.requests.length;\n      // Get the requests\n      let requests = execution_loader.requests;\n      // Add requests to muktiRequest queue\n      requests.forEach((request) => {\n        this._multiRequest.add(request);\n      });\n      // Create range array of current execution_loader requests\n      let executionLoaderResponseMap = Array.from(new Array(requests.length), (val, index) => index + startIndex);\n      // Add to map\n      DataLoaderManager._loadersResponseMap.set(loader.id, executionLoaderResponseMap);\n    }\n  }\n\n  /**\n   * Get data from all loaders using multi request\n   * @function\n   * @returns {Promise} Promise\n   */\n  fetchData(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this._multiRequest.execute()\n        .then(response => {\n          this._multiResponse = response;\n          if (!response.success) {\n            reject(response);\n          } else {\n            let preparedData: Object = this.prepareData(response);\n            if (preparedData.success) {\n              resolve(this._loaders);\n            } else {\n              reject({success: false, data: preparedData.error});\n            }\n          }\n        }, err => {\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * Prepare fetched data\n   * @function\n   * @param {MultiRequestResult} response - The multi request result\n   * @returns {Object} - The prepared data\n   */\n  prepareData(response: MultiRequestResult): Object {\n    this._loaders.forEach(function (loader, name) {\n      let loaderDataIndexes = DataLoaderManager._loadersResponseMap.get(name);\n      try {\n        if (loaderDataIndexes && loaderDataIndexes.length > 0) {\n          loader.response = (response.results.slice(loaderDataIndexes[0], loaderDataIndexes[loaderDataIndexes.length - 1] + 1));\n        }\n      } catch (err) {\n        return {success: false, error: err};\n      }\n    });\n    return {success: true, data: this._loaders};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/data-loader-manager.js","//@flow\nimport RequestBuilder from '../../util/request-builder'\nimport getLogger from '../../util/logger'\nimport ServiceResult from './base-service-result'\n\nexport default class MultiRequestBuilder extends RequestBuilder {\n  static _logger = getLogger(\"MultiRequestBuilder\");\n  /**\n   * @member - Array of requests\n   * @type {Array<RequestBuilder>}\n   */\n  requests: Array<RequestBuilder> = [];\n\n  /**\n   * Adds request to requests array\n   * @function add\n   * @param {RequestBuilder} request The request\n   * @returns {MultiRequestBuilder} The multiRequest\n   */\n  add(request: RequestBuilder): MultiRequestBuilder {\n    this.requests.push(request);\n    const requestParams = {};\n    const serviceDef: Object = {service: request.service, action: request.action};\n    Object.assign(requestParams, {[this.requests.length]: Object.assign(serviceDef, request.params)});\n    Object.assign(requestParams, this.params);\n    this.params = requestParams;\n    return this;\n  }\n\n  /**\n   * Executes a multi request\n   * @function execute\n   * @returns {Promise} The multirequest execution promise\n   */\n  execute(): Promise<Object> {\n    try {\n      this.params = JSON.stringify(this.params);\n    } catch (err) {\n      MultiRequestBuilder._logger.error(`${err.message}`);\n    }\n    return new Promise((resolve, reject) => {\n      this.doHttpRequest().then(data => {\n        resolve(new MultiRequestResult(data));\n      }, err => {\n        const errorText: string = `Error on multiRequest execution, error <${err}>.`;\n        reject(errorText);\n      });\n    });\n  }\n}\n\nexport class MultiRequestResult {\n  static _logger = getLogger(\"MultiRequestResult\");\n  /**\n   * @member - Is success\n   * @type {boolean}\n   */\n  success: boolean;\n  /**\n   * @member - Multi request response data\n   * @type {Object}\n   */\n  results: Array<ServiceResult> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response data\n   */\n  constructor(response: Object) {\n    this.success = true;\n    const responseArr = response.result ? response.result : response;\n    responseArr.forEach((result) => {\n      const serviceResult: ServiceResult = new ServiceResult(result);\n      this.results.push(serviceResult);\n      if (serviceResult.hasError) {\n        MultiRequestResult._logger.error(`Service returned an error with error code: ${serviceResult.error.code} and message: ${serviceResult.error.message}.`);\n        this.success = false;\n        return;\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/multi-request-builder.js","//@flow\nexport default class KalturaDrmPlaybackPluginData {\n  static Scheme: { [scheme: string]: string } = {\n    'drm.PLAYREADY_CENC': 'com.microsoft.playready',\n    'drm.WIDEVINE_CENC': 'com.widevine.alpha',\n    'fairplay.FAIRPLAY': 'com.apple.fairplay',\n    'WIDEVINE_CENC': 'com.widevine.alpha',\n    'PLAYREADY_CENC': 'com.microsoft.playready',\n    'FAIRPLAY': 'com.apple.fairplay'\n  };\n\n  /**\n   * @member - The drm scheme\n   * @type {string}\n   */\n  scheme: string;\n\n  /**\n   * @member - The license URL\n   * @type {string}\n   */\n  licenseURL: string;\n\n  /**\n   * @member - The drm certificate\n   * @type {?string}\n   */\n  certificate: ?string;\n\n  /**\n   * @constructor\n   * @param {Object} drm The json response\n   */\n  constructor(drm: any) {\n    this.scheme = drm.scheme;\n    this.licenseURL = drm.licenseURL;\n    this.certificate = drm.certificate;\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-drm-playback-plugin-data.js","//@flow\nimport MultiRequestBuilder from '../../common/multi-request-builder'\nimport OVPConfiguration from '../config'\n\nconst SERVICE_NAME: string = \"multirequest\";\n\nexport default class OVPService {\n  /**\n   * Gets a new instance of MultiRequestBuilder with ovp params\n   * @function getMultiRequest\n   * @param {string} playerVersion The player version\n   * @param {string} ks The ks\n   * @param {string} partnerId The partner ID\n   * @returns {MultiRequestBuilder} The multi request builder\n   * @static\n   */\n  static getMultiRequest(playerVersion: string, ks: string, partnerId?: number): MultiRequestBuilder {\n    const config = OVPConfiguration.get();\n    const ovpParams = config.serviceParams;\n    Object.assign(ovpParams, {ks: ks, clientTag: 'html5:v' + playerVersion});\n    if (partnerId) {\n      Object.assign(ovpParams, {partnerId: partnerId});\n    }\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const multiReq = new MultiRequestBuilder(headers);\n    multiReq.method = \"POST\";\n    multiReq.service = SERVICE_NAME;\n    multiReq.url = multiReq.getUrl(config.serviceUrl);\n    multiReq.params = ovpParams;\n    return multiReq;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/ovp-service.js","// @flow\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport MediaEntry from '../../entities/media-entry'\nimport MediaSources from '../../entities/media-sources'\nimport MediaSource from '../../entities/media-source'\nimport type {OTTKalturaPlaybackSource} from '../ott/response-types/kaltura-playback-source'\nimport type {OVPKalturaPlaybackSource} from '../ovp/response-types/kaltura-playback-source'\n\nexport default class BaseProviderParser {\n  static getMediaEntry(...parms): MediaEntry { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaEntry method must be implement by the derived class`);\n  }\n\n  static _getParsedSources(...parms): MediaSources { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_getParsedSources method must be implement by the derived class`);\n  }\n\n  static _parseAdaptiveSource(...parms): MediaSource { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseAdaptiveSource method must be implement by the derived class`);\n  }\n\n  static _isProgressiveSource(source: OVPKalturaPlaybackSource | OTTKalturaPlaybackSource): boolean {\n    const sourceFormat = SupportedStreamFormat.get(source.format);\n    return !!sourceFormat && sourceFormat.name === 'mp4';\n  }\n\n  static hasBlockActions(assetResponse: any): any {\n    if (assetResponse && assetResponse.playBackContextResult) {\n      const playbackContext = assetResponse.playBackContextResult;\n      for (let actionIndex = 0; actionIndex < playbackContext.actions.length; actionIndex++) {\n        if (playbackContext.actions[actionIndex].type === \"BLOCK\") {\n          return playbackContext.actions[actionIndex];\n        }\n      }\n    }\n    return null;\n  }\n\n  static hasErrorMessage(assetResponse: any): any {\n    const messages = assetResponse.playBackContextResult.messages;\n    for (let messagesIndex = 0; messagesIndex < messages.length; messagesIndex++) {\n      if (messages[messagesIndex].code !== \"OK\") {\n        return messages[messagesIndex];\n      }\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider-parser.js","// @flow\nimport {setLogLevel, getLogLevel, LogLevel} from '../../util/logger'\nimport DataLoaderManager from './data-loader-manager'\n\nexport default class BaseProvider<MI> {\n  _partnerId: number;\n  _ks: string;\n  _uiConfId: ?number;\n  _dataLoader: DataLoaderManager;\n  _playerVersion: string;\n  _logger: any;\n  _isAnonymous: boolean;\n\n  get partnerId(): number {\n    return this._partnerId;\n  }\n\n  get uiConfId(): ?number {\n    return this._uiConfId;\n  }\n\n  get ks(): string {\n    return this._ks;\n  }\n\n  set ks(value: string): void {\n    this._ks = value;\n  }\n\n  get playerVersion(): string {\n    return this._playerVersion;\n  }\n\n  get isAnonymous(): boolean {\n    return this._isAnonymous;\n  }\n\n  constructor(options: ProviderOptionsObject, playerVersion: string) {\n    this._partnerId = options.partnerId;\n    this._uiConfId = options.uiConfId;\n    this._isAnonymous = !options.ks;\n    this._ks = options.ks || '';\n    this._playerVersion = playerVersion;\n    if (options.logLevel && this.LogLevel[options.logLevel]) {\n      setLogLevel(this.LogLevel[options.logLevel]);\n    }\n  }\n\n  getMediaConfig(mediaInfo: MI): Promise<ProviderMediaConfigObject> { // eslint-disable-line no-unused-vars\n    throw new TypeError(`getMediaConfig method must be implement by the derived class`);\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>, ...params: any): ProviderMediaConfigObject { // eslint-disable-line no-unused-vars\n    throw new TypeError(`_parseDataFromResponse method must be implement by the derived class`);\n  }\n\n  get LogLevel(): { [level: string]: Object } {\n    return LogLevel;\n  }\n\n  getLogLevel(name?: string): Object {\n    return getLogLevel(name);\n  }\n\n  setLogLevel(level: Object, name?: string): void {\n    setLogLevel(level, name);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/base-provider.js","//@flow\nexport default class KalturaAccessControlMessage {\n  /**\n   * @member - The access control message\n   * @type {string}\n   */\n  message: string;\n  /**\n   *  @member - The access control message code\n   * @@type {string}\n   */\n  code: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: Object) {\n    this.message = data.message;\n    this.code = data.code;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-access-control-message.js","//@flow\nexport default class KalturaRuleAction {\n  static Type: { [type: string]: string | number } = {\n    DRM_POLICY: \"drm.DRM_POLICY\",\n    BLOCK: 1,\n    PREVIEW: 2,\n    LIMIT_FLAVORS: 3,\n    ADD_TO_STORAGE: 4,\n    LIMIT_DELIVERY_PROFILES: 5,\n    SERVE_FROM_REMOTE_SERVER: 6,\n    REQUEST_HOST_REGEX: 7,\n    LIMIT_THUMBNAIL_CAPTURE: 8\n  };\n\n  /**\n   * @member - The type of the action\n   * @type {string|number}\n   */\n  type: string | number;\n\n  /**\n   * @constructor\n   * @param {Object} data - The response\n   */\n  constructor(data: Object) {\n    this.type = data.type;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/common/response-types/kaltura-rule-action.js","const clone = (data) => {\n  let node;\n  if (Array.isArray(data)) {\n    node = data.length > 0 ? data.slice(0) : [];\n    node.forEach((e, i) => {\n      if (\n        (typeof e === \"object\" && e !== {}) ||\n        (Array.isArray(e) && e.length > 0)\n      ) {\n        node[i] = clone(e);\n      }\n    });\n  } else if (typeof data === \"object\") {\n    node = Object.assign({}, data);\n    Object.keys(node).forEach((key) => {\n      if (\n        (typeof node[key] === \"object\" && node[key] !== {}) ||\n        (Array.isArray(node[key]) && node[key].length > 0)\n      ) {\n        node[key] = clone(node[key]);\n      }\n    });\n  } else {\n    node = data;\n  }\n  return node;\n};\n\nexport {clone};\n\n\n\n// WEBPACK FOOTER //\n// ./util/clone.js","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.4.1\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.DEBUG = defineLogLevel(1, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(2, 'INFO');\r\n\tLogger.TIME = defineLogLevel(3, 'TIME');\r\n\tLogger.WARN = defineLogLevel(4, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/js-logger/src/logger.js\n// module id = 22\n// module chunks = 0 1","//@flow\nexport default class KalturaFlavorAsset {\n  static Status: { [status: string]: number } = {\n    ERROR: -1,\n    QUEUED: 0,\n    CONVERTING: 1,\n    READY: 2,\n    DELETED: 3,\n    NOT_APPLICABLE: 4,\n    TEMP: 5,\n    WAIT_FOR_CONVERT: 6,\n    IMPORTING: 7,\n    VALIDATING: 8,\n    EXPORTING: 9\n  };\n\n  /**\n   * @member - The ID of the Flavor Asset\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member -The Flavor Params used to create this Flavor Asset\n   * @type {string}\n   */\n  flavorParamsId: string;\n  /**\n   * @member -The file extension\n   * @type {string}\n   */\n  fileExt: string;\n  /**\n   * @member - The overall bitrate (in KBits) of the Flavor Asset\n   *  @type {string}\n   */\n  bitrate: number;\n  /**\n   * @member - The width of the Flavor Asset\n   * @type {number}\n   */\n  width: number;\n  /**\n   * @member - The height of the Flavor Asset\n   * @type {number}\n   */\n  height: number;\n  /**\n   * @member - The frame rate (in FPS) of the Flavor Asset\n   * @type {number}\n   */\n  frameRate: number;\n  /**\n   * @member - True if this Flavor Asset is the original source\n   * @type {number}\n   */\n  isOriginal: boolean;\n  /**\n   * @member - True if this Flavor Asset is playable in KDP\n   * @type {boolean}\n   */\n  isWeb: boolean;\n  /**\n   * @member - The container format\n   * @type {boolean}\n   */\n  containerFormat: string;\n  /**\n   *@member - The video codec\n   * @type {boolean}\n   */\n  videoCodecId: string;\n  /**\n   * @member - The status of the Flavor Asset\n   * @type {number}\n   */\n  status: number;\n  /**\n   * @member - The language of the flavor asset\n   * @type {Status}\n   */\n  language: string;\n  /**\n   * @member - The label of the flavor asset\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The json response\n   */\n  constructor(data: any) {\n    this.id = data.id;\n    this.flavorParamsId = data.flavorParamsId;\n    this.fileExt = data.fileExt;\n    this.bitrate = data.bitrate;\n    this.width = data.width;\n    this.height = data.height;\n    this.id = data.id;\n    this.frameRate = data.frameRate;\n    this.isOriginal = data.isOriginal;\n    this.isWeb = data.isWeb;\n    this.containerFormat = data.containerFormat;\n    this.videoCodecId = data.videoCodecId;\n    this.status = data.status;\n    this.language = data.language;\n    this.label = data.label;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-flavor-asset.js","//@flow\nexport default class KalturaMediaEntry {\n  static EntryType: { [entryType: string]: { value: number | string } } = {\n    AUTOMATIC: {value: -1},\n    EXTERNAL_MEDIA: {value: \"externalMedia.externalMedia\"},\n    MEDIA_CLIP: {value: 1},\n    MIX: {value: 2},\n    PLAYLIST: {value: 5},\n    DATA: {value: 6},\n    LIVE_STREAM: {value: 7},\n    LIVE_CHANNEL: {value: 8},\n    DOCUMENT: {value: 10}\n  };\n\n  static MediaType: { [mediaType: string]: { value: number } } = {\n    VIDEO: {value: 1},\n    IMAGE: {value: 2},\n    AUDIO: {value: 5},\n    LIVE_STREAM_FLASH: {value: 201},\n    LIVE_STREAM_WINDOWS_MEDIA: {value: 202},\n    LIVE_STREAM_REAL_MEDIA: {value: 203},\n    LIVE_STREAM_QUICK_TIME: {value: 204}\n  };\n\n  static EntryStatus: { [status: string]: string | number } = {\n    ERROR_IMPORTING: -2,\n    ERROR_CONVERTING: -1,\n    SCAN_FAILURE: \"virusScan.ScanFailure\",\n    IMPORT: 0,\n    INFECTED: \"virusScan.Infected\",\n    PRECONVERT: 1,\n    READY: 2,\n    DELETED: 3,\n    PENDING: 4,\n    MODERATE: 5,\n    BLOCKED: 6,\n    NO_CONTENT: 7\n  };\n\n  static EntryModerationStatus: { [status: string]: number } = {\n    PENDING_MODERATION: 1,\n    APPROVED: 2,\n    REJECTED: 3,\n    FLAGGED_FOR_REVIEW: 4,\n    MODERATE: 5,\n    AUTO_APPROVED: 6\n  };\n\n  /**\n   * @member - The entry id\n   * @type {string}\n   */\n  id: string;\n  /**\n   * @member - Entry name (Min 1 chars)\n   * @type {string}\n   */\n  name: string;\n  /**\n   * @member - Entry description\n   * @type {string}\n   */\n  description: string;\n  /**\n   * @member - The URL used for playback. This is not the download URL.\n   * @type {string}\n   */\n  dataUrl: string;\n  /**\n   * @member - Comma separated flavor params ids that exists for this media entry\n   * @type {string}\n   */\n  flavorParamsIds: string;\n  /**\n   * @member - The entry duration\n   * @type {number}\n   */\n  duration: number;\n  /**\n   * @member - The type of the entry, this is auto filled by the derived entry object\n   * @type {{ value: string | number }}\n   */\n  type: { value: string | number };\n  /**\n   * @member - The type of the entry, this is auto filled by the derived entry object (Image, Audio etc.)\n   * @type {{ value: number }}\n   */\n  entryType: { value: number };\n  /**\n   * @member - Entry poster image\n   * @type {string}\n   */\n  poster: string;\n  /**\n   * @member - DVR status\n   * @type {number}\n   */\n  dvrStatus: number;\n\n  /**\n   * @constructor\n   * @param {Object} entry The json response\n   */\n  constructor(entry: Object) {\n    this.id = entry.id;\n    this.name = entry.name;\n    this.description = entry.description;\n    this.dataUrl = entry.dataUrl;\n    this.type = entry.type;\n    this.entryType = entry.mediaType;\n    this.flavorParamsIds = entry.flavorParamsIds;\n    this.duration = entry.duration;\n    this.poster = entry.thumbnailUrl;\n    this.dvrStatus = entry.dvrStatus;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-media-entry.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaMetadata from './kaltura-metadata'\n\nexport default class KalturaMetadataListResponse extends ServiceResult {\n  totalCount: number;\n  metas: Array<KalturaMetadata>;\n\n  /**\n   * @constructor\n   * @param {Object} responseObj The response\n   */\n  constructor(responseObj: Object) {\n    super(responseObj);\n    if (!this.hasError) {\n      this.totalCount = responseObj.totalCount;\n      if (this.totalCount > 0) {\n        this.metas = [];\n        responseObj.objects.map(meta => this.metas.push(new KalturaMetadata(meta)));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-metadata-list-response.js","//@flow\nimport KalturaDrmPlaybackPluginData from '../../common/response-types/kaltura-drm-playback-plugin-data'\n\nexport type OVPKalturaPlaybackSource = KalturaPlaybackSource;\n\nexport default class KalturaPlaybackSource {\n  /**\n   * @member - source format according to delivery profile streamer type (applehttp, mpegdash etc.)\n   * @type {string}\n   */\n  format: string;\n  /**\n   * @member - delivery profile Id\n   * @type {string}\n   */\n  deliveryProfileId: string;\n  /**\n   * @member - The source URL\n   * @type {string}\n   */\n  url: string;\n  /**\n   * @member - comma separated string according to deliveryProfile media protocols ('http,https' etc.)\n   * @type {string}\n   */\n  protocols: string;\n  /**\n   * @member - comma separated string of flavor ids\n   * @type {string}\n   */\n  flavorIds: string;\n  /**\n   * @member - drm data object containing relevant license url ,scheme name and certificate\n   * @type {Array<KalturaDrmPlaybackPluginData>}\n   */\n  drm: Array<KalturaDrmPlaybackPluginData> = [];\n\n  /**\n   * @constructor\n   * @param {Object} source The response\n   */\n  constructor(source: Object) {\n    this.format = source.format;\n    this.deliveryProfileId = source.deliveryProfileId;\n    this.url = source.url;\n    this.protocols = source.protocols;\n    this.flavorIds = source.flavorIds;\n    if (source.drm) {\n      source.drm.map(drm => this.drm.push(new KalturaDrmPlaybackPluginData(drm)));\n    }\n  }\n\n  /**\n   * Checks if source has DRM data\n   * @function hasDrmData\n   * @returns {boolean} Is source has DRM\n   */\n  hasDrmData(): boolean {\n    return this.drm && this.drm.length > 0;\n  }\n\n  /**\n   * Checks if source has flavor IDs\n   * @function hasFlavorIds\n   * @returns {boolean} Is source ha flavor IDs\n   */\n  hasFlavorIds(): boolean {\n    return !!this.flavorIds && this.flavorIds.length > 0;\n  }\n\n  /**\n   * Returns source desired protocol if supported\n   * @param {string} protocol - the desired protocol for the source (base play url protocol)\n   * @returns {string} - protocol if protocol is in the protocols list - if not empty string returned\n   */\n  getProtocol(protocol: string): string {\n    let returnValue: string = \"\";\n    if (this.protocols && this.protocols.length > 0) {\n      let protocolsArr: Array<string> = this.protocols.split(\",\");\n      protocolsArr.forEach((p) => {\n        if (p === protocol) {\n          returnValue = p;\n        }\n      });\n    } else if (protocol === \"http\") {\n      return protocol;\n    }\n    return returnValue;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-playback-source.js","//@flow\nimport getLogger from '../../util/logger'\nimport OVPConfiguration from './config'\nimport OVPProviderParser from './provider-parser'\nimport OVPMediaEntryLoader from './loaders/media-entry-loader'\nimport OVPSessionLoader from './loaders/session-loader'\nimport OVPDataLoaderManager from './loaders/data-loader-manager'\nimport BaseProvider from '../common/base-provider'\nimport MediaEntry from '../../entities/media-entry'\n\nexport default class OVPProvider extends BaseProvider<ProviderMediaInfoObject> {\n  /**\n   * @constructor\n   * @param {ProviderOptionsObject} options - provider options\n   * @param {string} playerVersion - player version\n   */\n  constructor(options: ProviderOptionsObject, playerVersion: string) {\n    super(options, playerVersion);\n    this._logger = getLogger(\"OVPProvider\");\n    OVPConfiguration.set(options.env);\n  }\n\n  /**\n   * Gets the backend media config.\n   * @param {ProviderMediaInfoObject} mediaInfo - ovp media info\n   * @returns {Promise<ProviderMediaConfigObject>} - The provider media config\n   */\n  getMediaConfig(mediaInfo: ProviderMediaInfoObject): Promise<ProviderMediaConfigObject> {\n    if (mediaInfo.ks) {\n      this.ks = mediaInfo.ks;\n    }\n    this._dataLoader = new OVPDataLoaderManager(this.playerVersion, this.partnerId, this.ks);\n    return new Promise((resolve, reject) => {\n      const entryId = mediaInfo.entryId;\n      if (entryId) {\n        let ks: string = this.ks;\n        if (!ks) {\n          ks = \"{1:result:ks}\";\n          this._dataLoader.add(OVPSessionLoader, {partnerId: this.partnerId});\n        }\n        this._dataLoader.add(OVPMediaEntryLoader, {entryId: entryId, ks: ks});\n        this._dataLoader.fetchData()\n          .then(response => {\n            resolve(this._parseDataFromResponse(response));\n          }, err => {\n            reject(err);\n          });\n      } else {\n        reject({success: false, data: \"Missing mandatory parameter\"});\n      }\n    });\n  }\n\n  _parseDataFromResponse(data: Map<string, Function>): ProviderMediaConfigObject {\n    this._logger.debug(\"Data parsing started\");\n    const mediaConfig: ProviderMediaConfigObject = {\n      id: '',\n      name: '',\n      session: {\n        partnerId: this.partnerId\n      },\n      sources: {hls: [], dash: [], progressive: []},\n      duration: 0,\n      type: MediaEntry.Type.UNKNOWN,\n      dvr: false,\n      metadata: {},\n      plugins: {}\n    };\n    if (this.uiConfId) {\n      mediaConfig.session.uiConfId = this.uiConfId;\n    }\n    if (data) {\n      if (data.has(OVPSessionLoader.id)) {\n        const sessionLoader = data.get(OVPSessionLoader.id);\n        if (sessionLoader && sessionLoader.response) {\n          this.ks = sessionLoader.response;\n          mediaConfig.session.ks = this.ks;\n        }\n      } else {\n        mediaConfig.session.ks = this.ks;\n      }\n      if (data.has(OVPMediaEntryLoader.id)) {\n        const mediaLoader = data.get(OVPMediaEntryLoader.id);\n        if (mediaLoader && mediaLoader.response) {\n          const blockedAction = OVPProviderParser.hasBlockActions(mediaLoader.response);\n          if (blockedAction) {\n            const errorMessage = OVPProviderParser.hasErrorMessage(mediaLoader.response);\n            if (errorMessage) {\n              this._logger.error(`Entry is blocked, error message: `, errorMessage);\n              throw errorMessage;\n            } else {\n              this._logger.error(`Entry is blocked, action: `, blockedAction);\n              throw blockedAction;\n            }\n          }\n          const mediaEntry = OVPProviderParser.getMediaEntry(\n            this.isAnonymous ? '' : this.ks,\n            this.partnerId,\n            this.uiConfId,\n            mediaLoader.response\n          );\n          mediaConfig.id = mediaEntry.id;\n          mediaConfig.name = mediaEntry.name;\n          mediaConfig.sources = mediaEntry.sources.toJSON();\n          mediaConfig.duration = mediaEntry.duration;\n          mediaConfig.type = mediaEntry.type;\n          mediaConfig.dvr = !!mediaEntry.dvrStatus;\n          mediaConfig.metadata = mediaEntry.metadata;\n        }\n      }\n    }\n    this._logger.debug(\"Data parsing finished\", mediaConfig);\n    return mediaConfig;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/provider.js","// @flow\nimport OVPProvider from './provider'\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nconst NAME = __NAME__ + '-ovp';\nconst VERSION = __VERSION__;\n\nexport {\n  OVPProvider as Provider,\n  NAME,\n  VERSION\n};\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/index.js","// @flow\nimport DataLoaderManager from '../../common/data-loader-manager'\nimport OVPService from '../services/ovp-service'\n\nexport default class OVPDataLoaderManager extends DataLoaderManager {\n  /**\n   * @constructor\n   * @param {string} playerVersion - player version\n   * @param {string} partnerId - partner id\n   * @param {string} ks - ks\n   */\n  constructor(playerVersion: string, partnerId: number, ks: string = \"\") {\n    super();\n    this._multiRequest = OVPService.getMultiRequest(playerVersion, ks, partnerId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/data-loader-manager.js","//@flow\nimport RequestBuilder from '../../../util/request-builder'\nimport OVPBaseEntryService from '../services/base-entry-service'\nimport OVPMetadataService from '../services/meta-data-service'\nimport OVPConfiguration from '../config'\nimport KalturaPlaybackContext from '../response-types/kaltura-playback-context'\nimport KalturaMetadataListResponse from '../response-types/kaltura-metadata-list-response'\nimport KalturaBaseEntryListResponse from '../response-types/kaltura-base-entry-list-response'\n\nexport default class OVPMediaEntryLoader implements ILoader {\n  _entryId: string;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"media\";\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._entryId = params.entryId;\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    let mediaEntryResponse: KalturaBaseEntryListResponse = new KalturaBaseEntryListResponse(response[0].data);\n    this._response.entry = mediaEntryResponse.entries[0];\n    this._response.playBackContextResult = new KalturaPlaybackContext(response[1].data);\n    this._response.metadataListResult = new KalturaMetadataListResponse(response[2].data);\n  }\n\n  get response(): any {\n    return this._response;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    const config = OVPConfiguration.get();\n    const requests: Array<RequestBuilder> = [];\n    requests.push(OVPBaseEntryService.list(config.serviceUrl, params.ks, params.entryId));\n    requests.push(OVPBaseEntryService.getPlaybackContext(config.serviceUrl, params.ks, params.entryId));\n    requests.push(OVPMetadataService.list(config.serviceUrl, params.ks, params.entryId));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._entryId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/media-entry-loader.js","//@flow\nimport OVPSessionService from '../services/session-service'\nimport OVPConfiguration from '../config'\nimport RequestBuilder from '../../../util/request-builder'\n\nexport default class OVPSessionLoader implements ILoader {\n  _partnerId: number;\n  _requests: Array<RequestBuilder>;\n  _response: any = {};\n\n  static get id(): string {\n    return \"session\";\n  }\n\n  set requests(requests: Array<RequestBuilder>) {\n    this._requests = requests;\n  }\n\n  get requests(): Array<RequestBuilder> {\n    return this._requests;\n  }\n\n  set response(response: any) {\n    this._response.ks = response[0].data.ks;\n  }\n\n  get response(): any {\n    return this._response.ks;\n  }\n\n  /**\n   * @constructor\n   * @param {Object} params loader params\n   */\n  constructor(params: Object) {\n    this.requests = this.buildRequests(params);\n    this._partnerId = params.partnerId;\n  }\n\n  /**\n   * Builds loader requests\n   * @function\n   * @param {Object} params Requests parameters\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  buildRequests(params: Object): Array<RequestBuilder> {\n    const config = OVPConfiguration.get();\n    const requests: Array<RequestBuilder> = [];\n    requests.push(OVPSessionService.anonymousSession(config.serviceUrl, params.partnerId));\n    return requests;\n  }\n\n  /**\n   * Loader validation function\n   * @function\n   * @returns {boolean} Is valid\n   */\n  isValid(): boolean {\n    return !!this._partnerId;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/loaders/session-loader.js","//@flow\nimport OVPConfiguration from './config'\n\nexport default class PlaySourceUrlBuilder {\n  /**\n   * Returns source url by given url params\n   * @function build\n   * @param {Object} urlParams The params\n   * @returns {string} The URL\n   * @static\n   */\n  static build(urlParams: Object): string {\n    const config = OVPConfiguration.get();\n    const cdnUrl: string = config.cdnUrl;\n    const partnerId: string = urlParams.partnerId;\n    const entryId: string = urlParams.entryId;\n    const ks: string = urlParams.ks;\n    const uiConfId: string = urlParams.uiConfId;\n    const format: string = urlParams.format;\n    const protocol: string = urlParams.protocol;\n    const extension: string = urlParams.extension;\n    const flavorIds: string = urlParams.flavorIds;\n\n    if (cdnUrl === \"\" && partnerId === \"\" && entryId === \"\" && extension === \"\" && format === \"\") {\n      return \"\";\n    }\n\n    let playUrl = cdnUrl;\n    if (!cdnUrl.endsWith(\"/\")) {\n      playUrl += \"/\";\n    }\n    playUrl += \"p/\" + partnerId + \"/sp/\" + partnerId + \"00\" + \"/playManifest/entryId/\" + entryId + \"/protocol/\" + protocol + \"/format/\" + format;\n\n    if (flavorIds !== \"\") {\n      playUrl += \"/flavorIds/\" + flavorIds;\n    }\n    else if (uiConfId !== \"\") {\n      playUrl += \"/uiConfId/\" + uiConfId;\n    }\n\n    if (ks !== \"\") {\n      playUrl += \"/ks/\" + ks;\n    }\n\n    playUrl += \"/a.\" + extension;\n\n    if (uiConfId && flavorIds !== \"\") {\n      playUrl += \"?uiConfId=\" + uiConfId;\n    }\n\n    return playUrl;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/play-source-url-builder.js","//@flow\n// import KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport KalturaFlavorAsset from './response-types/kaltura-flavor-asset'\nimport KalturaMetadataListResponse from './response-types/kaltura-metadata-list-response'\nimport KalturaMediaEntry from './response-types/kaltura-media-entry'\nimport KalturaPlaybackSource from './response-types/kaltura-playback-source'\nimport KalturaDrmPlaybackPluginData from '../common/response-types/kaltura-drm-playback-plugin-data'\nimport PlaySourceUrlBuilder from './play-source-url-builder'\nimport XmlParser from '../../util/xml-parser'\nimport getLogger from '../../util/logger'\nimport OVPConfiguration from './config'\nimport MediaEntry from '../../entities/media-entry'\nimport Drm from '../../entities/drm'\nimport MediaSource from '../../entities/media-source'\nimport MediaSources from '../../entities/media-sources'\nimport {SupportedStreamFormat} from '../../entities/media-format'\nimport BaseProviderParser from '../common/base-provider-parser'\n\nexport default class OVPProviderParser extends BaseProviderParser{\n  static _logger = getLogger(\"OVPProviderParser\");\n\n  /**\n   * Returns parsed media entry by given OVP response objects\n   * @function getMediaEntry\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {any} mediaEntryResponse - The media entry response\n   * @returns {MediaEntry} - The media entry\n   * @static\n   * @public\n   */\n  static getMediaEntry(ks: string, partnerId: number, uiConfId: ?number, mediaEntryResponse: any): MediaEntry {\n    const mediaEntry = new MediaEntry();\n    const entry = mediaEntryResponse.entry;\n    const playbackContext = mediaEntryResponse.playBackContextResult;\n    const metadataList = mediaEntryResponse.metadataListResult;\n    const kalturaSources = playbackContext.sources;\n\n    mediaEntry.sources = OVPProviderParser._getParsedSources(kalturaSources, ks, partnerId, uiConfId, entry, playbackContext);\n    mediaEntry.metadata = this._parseMetadata(metadataList);\n    mediaEntry.metadata.description = entry.description;\n    mediaEntry.metadata.poster = entry.poster;\n    mediaEntry.id = entry.id;\n    mediaEntry.name = entry.name;\n    mediaEntry.duration = entry.duration;\n\n    let type = MediaEntry.Type.UNKNOWN;\n    switch (entry.entryType) {\n      case KalturaMediaEntry.MediaType.IMAGE.value:\n        type = MediaEntry.Type.IMAGE;\n        break;\n      case KalturaMediaEntry.MediaType.AUDIO.value:\n        type = MediaEntry.Type.AUDIO;\n        break;\n      default:\n        switch (entry.type) {\n          case KalturaMediaEntry.EntryType.MEDIA_CLIP.value:\n            type = MediaEntry.Type.VOD;\n            break;\n          case KalturaMediaEntry.EntryType.LIVE_STREAM.value:\n          case KalturaMediaEntry.EntryType.LIVE_CHANNEL.value:\n            type = MediaEntry.Type.LIVE;\n            mediaEntry.dvrStatus = entry.dvrStatus;\n            break;\n          default:\n            type = MediaEntry.Type.UNKNOWN;\n        }\n    }\n    mediaEntry.type = type;\n\n    return mediaEntry;\n  }\n\n  /**\n   * Returns the parsed sources\n   * @function _getParsedSources\n   * @param {Array<KalturaPlaybackSource>} kalturaSources - The kaltura sources\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {Object} entry - The entry\n   * @param {Object} playbackContext - The playback context\n   * @return {MediaSources} - A media sources\n   * @static\n   * @private\n   */\n  static _getParsedSources(kalturaSources: Array<KalturaPlaybackSource>, ks: string, partnerId: number, uiConfId: ?number, entry: Object, playbackContext: Object): MediaSources {\n    const sources = new MediaSources();\n    const addAdaptiveSource = (source: KalturaPlaybackSource) => {\n      const parsedSource = OVPProviderParser._parseAdaptiveSource(source, playbackContext.flavorAssets, ks, partnerId, uiConfId, entry.id);\n      const sourceFormat = SupportedStreamFormat.get(source.format);\n      sources.map(parsedSource, sourceFormat);\n    };\n    const parseAdaptiveSources = () => {\n      kalturaSources.filter((source) => !OVPProviderParser._isProgressiveSource(source)).forEach(addAdaptiveSource);\n    };\n    const parseProgressiveSources = () => {\n      const progressiveSource = kalturaSources.find(OVPProviderParser._isProgressiveSource);\n      sources.progressive = OVPProviderParser._parseProgressiveSources(progressiveSource, playbackContext.flavorAssets, ks, partnerId, uiConfId, entry.id);\n    };\n    if (kalturaSources && kalturaSources.length > 0) {\n      parseAdaptiveSources();\n      parseProgressiveSources();\n    }\n    return sources;\n  }\n\n  /**\n   * Returns a parsed adaptive source\n   * @function _parseAdaptiveSource\n   * @param {KalturaPlaybackSource} kalturaSource - A kaltura source\n   * @param {Array<KalturaFlavorAsset>} flavorAssets - The flavor Assets of the kaltura source\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {string} entryId - The entry id\n   * @returns {MediaSource} - The parsed adaptive kalturaSource\n   * @static\n   * @private\n   */\n  static _parseAdaptiveSource(kalturaSource: ?KalturaPlaybackSource, flavorAssets: Array<KalturaFlavorAsset>, ks: string, partnerId: number, uiConfId: ?number, entryId: string): MediaSource {\n    const mediaSource: MediaSource = new MediaSource();\n    if (kalturaSource) {\n      let playUrl: string = \"\";\n      const mediaFormat = SupportedStreamFormat.get(kalturaSource.format);\n      let extension: string = \"\";\n      if (mediaFormat) {\n        extension = mediaFormat.pathExt;\n        mediaSource.mimetype = mediaFormat.mimeType;\n      }\n      // in case playbackSource doesn't have flavors we don't need to build the url and we'll use the provided one.\n      if (kalturaSource.hasFlavorIds()) {\n        if (!extension && flavorAssets && flavorAssets.length > 0) {\n          extension = flavorAssets[0].fileExt;\n        }\n        playUrl = PlaySourceUrlBuilder.build({\n          entryId: entryId,\n          flavorIds: kalturaSource.flavorIds,\n          format: kalturaSource.format,\n          ks: ks,\n          partnerId: partnerId,\n          uiConfId: uiConfId,\n          extension: extension,\n          protocol: kalturaSource.getProtocol(this._getBaseProtocol())\n        });\n      } else {\n        playUrl = kalturaSource.url;\n      }\n      if (playUrl === \"\") {\n        OVPProviderParser._logger.error(`failed to create play url from source, discarding source: (${entryId}_${kalturaSource.deliveryProfileId}), ${kalturaSource.format}.`);\n        return mediaSource;\n      }\n      mediaSource.url = playUrl;\n      mediaSource.id = entryId + \"_\" + kalturaSource.deliveryProfileId + \",\" + kalturaSource.format;\n      if (kalturaSource.hasDrmData()) {\n        const drmParams: Array<Drm> = [];\n        kalturaSource.drm.forEach((drm) => {\n          drmParams.push(new Drm(drm.licenseURL, KalturaDrmPlaybackPluginData.Scheme[drm.scheme], drm.certificate));\n        });\n        mediaSource.drmData = drmParams;\n      }\n    }\n    return mediaSource;\n  }\n\n  /**\n   * Returns parsed progressive sources\n   * @function _parseProgressiveSources\n   * @param {KalturaPlaybackSource} kalturaSource - A kaltura source\n   * @param {Array<KalturaFlavorAsset>} flavorAssets - The flavor Assets of the kaltura source\n   * @param {string} ks - The ks\n   * @param {number} partnerId - The partner ID\n   * @param {number} uiConfId - The uiConf ID\n   * @param {string} entryId - The entry id\n   * @returns {Array<MediaSource>} - The parsed progressive kalturaSources\n   * @static\n   * @private\n   */\n  static _parseProgressiveSources(kalturaSource: ?KalturaPlaybackSource, flavorAssets: Array<KalturaFlavorAsset>, ks: string, partnerId: number, uiConfId: ?number, entryId: string): Array<MediaSource> {\n    const sources = [];\n    if (kalturaSource) {\n      const protocol = kalturaSource.getProtocol(this._getBaseProtocol());\n      const format = kalturaSource.format;\n      const sourceId = kalturaSource.deliveryProfileId + \",\" + kalturaSource.format;\n      flavorAssets.map((flavor) => {\n        if (flavor.height && flavor.width) {\n          const mediaSource: MediaSource = new MediaSource();\n          mediaSource.id = flavor.id + sourceId;\n          mediaSource.mimetype = 'video/mp4';\n          mediaSource.height = flavor.height;\n          mediaSource.width = flavor.width;\n          mediaSource.bandwidth = flavor.bitrate * 1024;\n          mediaSource.label = flavor.label || flavor.language;\n          mediaSource.url = PlaySourceUrlBuilder.build({\n            entryId: entryId,\n            flavorIds: flavor.id,\n            format: format,\n            ks: ks,\n            partnerId: partnerId,\n            uiConfId: uiConfId,\n            extension: 'mp4',\n            protocol: protocol\n          });\n          sources.push(mediaSource);\n        }\n      });\n    }\n    return sources;\n  }\n\n  /**\n   * Ovp metadata parser\n   * @function _parseMetaData\n   * @param {KalturaMetadataListResponse} metadataList The metadata list\n   * @returns {Object} Parsed metadata\n   * @static\n   * @private\n   */\n  static _parseMetadata(metadataList: KalturaMetadataListResponse): Object {\n    const metadata = {};\n    if (metadataList && metadataList.metas && metadataList.metas.length > 0) {\n      metadataList.metas.forEach((meta) => {\n        let metaXml: Object;\n        const domParser: DOMParser = new DOMParser();\n        meta.xml = meta.xml.replace(/\\r?\\n|\\r/g, \"\");\n        meta.xml = meta.xml.replace(/>\\s*/g, '>');\n        meta.xml = meta.xml.replace(/>\\s*/g, '>');\n        metaXml = domParser.parseFromString(meta.xml, 'text/xml');\n        const metasObj: Object = XmlParser.xmlToJson(metaXml);\n        const metaKeys = Object.keys(metasObj.metadata);\n        metaKeys.forEach((key) => {\n          metadata[key] = metasObj.metadata[key][\"#text\"];\n        })\n      })\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the base protocol\n   * @function _getBaseProtocol\n   * @returns {string} - The base protocol\n   * @static\n   * @private\n   */\n  static _getBaseProtocol(): string {\n    const config = OVPConfiguration.get();\n    const protocolRegex = /^https?:/;\n    const result = protocolRegex.exec(config.cdnUrl);\n    const protocol = result ? result[0] : document.location.protocol;\n    if (typeof protocol === \"string\") {\n      return protocol.slice(0, -1) // remove ':' from the end\n    }\n    return \"https\";\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/provider-parser.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaMediaEntry from './kaltura-media-entry'\n\nexport default class KalturaBaseEntryListResponse extends ServiceResult {\n  /**\n   * @member - The total count\n   * @type {number}\n   */\n  totalCount: number;\n  /**\n   * @member - The entries\n   * @type {Array<KalturaMediaEntry>}\n   */\n  entries: Array<KalturaMediaEntry>;\n\n  /**\n   * @constructor\n   * @param {Object} responseObj The json response\n   */\n  constructor(responseObj: Object) {\n    super(responseObj);\n    if (!this.hasError) {\n      this.totalCount = responseObj.totalCount;\n      if (this.totalCount > 0) {\n        this.entries = [];\n        responseObj.objects.map(entry => this.entries.push(new KalturaMediaEntry(entry)));\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-base-entry-list-response.js","//@flow\nexport default class KalturaMetadata {\n  static ObjectType: { [type: string]: string | number } = {\n    AD_CUE_POINT: \"adCuePointMetadata.AdCuePoint\",\n    ANNOTATION: \"annotationMetadata.Annotation\",\n    CODE_CUE_POINT: \"codeCuePointMetadata.CodeCuePoint\",\n    THUMB_CUE_POINT: \"thumbCuePointMetadata.thumbCuePoint\",\n    ENTRY: 1,\n    CATEGORY: 2,\n    USER: 3,\n    PARTNER: 4,\n    DYNAMIC_OBJECT: 5\n  };\n\n  static Status: { [status: string]: number } = {\n    VALID: 1,\n    INVALID: 2,\n    DELETED: 3\n  };\n\n  id: number;\n  metadataProfileId: number;\n  metadataProfileVersion: number;\n  metadataObjectType: string | number;\n  objectId: string;\n  version: number;\n  created: Date;\n  updated: Date;\n  status: number;\n  xml: string;\n\n  /**\n   * @constructor\n   * @param {Object} data The response\n   */\n  constructor(data: Object) {\n    this.id = data.id;\n    this.metadataProfileId = data.metadataProfileId;\n    this.metadataProfileVersion = data.metadataProfileVersion;\n    this.metadataProfileId = data.metadataProfileId;\n    this.metadataObjectType = data.metadataObjectType;\n    this.objectId = data.objectId;\n    this.version = data.version;\n    this.created = new Date(0);\n    this.created.setUTCSeconds(data.createdAt);\n    this.updated = new Date(0);\n    this.updated.setUTCSeconds(data.updatedAt);\n    this.status = data.status;\n    this.xml = data.xml;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-metadata.js","//@flow\nimport ServiceResult from '../../common/base-service-result'\nimport KalturaAccessControlMessage from '../../common/response-types/kaltura-access-control-message'\nimport KalturaPlaybackSource from './kaltura-playback-source'\nimport KalturaRuleAction from '../../common/response-types/kaltura-rule-action'\nimport KalturaFlavorAsset from './kaltura-flavor-asset'\n\nexport default class KalturaPlaybackContext extends ServiceResult {\n  /**\n   * @member - The playback sources\n   * @type {Array<KalturaPlaybackSource>}\n   */\n  sources: Array<KalturaPlaybackSource> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaRuleAction>}\n   */\n  actions: Array<KalturaRuleAction> = [];\n  /**\n   * @member - Array of actions as received from the rules that invalidated\n   * @type {Array<KalturaAccessControlMessage>}\n   */\n  messages: Array<KalturaAccessControlMessage> = [];\n  /**\n   * @member - The flavor assets\n   * @type {Array<KalturaFlavorAsset>}\n   */\n  flavorAssets: Array<KalturaFlavorAsset> = [];\n\n  /**\n   * @constructor\n   * @param {Object} response The response\n   */\n  constructor(response: Object) {\n    super(response);\n    if (!this.hasError) {\n      const messages = response.messages;\n      if (messages) {\n        messages.map(message => this.messages.push(new KalturaAccessControlMessage(message)));\n      }\n      const actions = response.actions;\n      if (actions) {\n        actions.map(action => this.actions.push(new KalturaRuleAction(action)));\n      }\n      const sources = response.sources;\n      if (sources) {\n        sources.map(source => this.sources.push(new KalturaPlaybackSource(source)));\n      }\n      const flavorAssets = response.flavorAssets;\n      if (flavorAssets) {\n        flavorAssets.map(flavor => this.flavorAssets.push(new KalturaFlavorAsset(flavor)));\n      }\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/response-types/kaltura-playback-context.js","//@flow\nimport OVPService from './ovp-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"baseEntry\";\n\nexport default class OVPBaseEntryService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for baseentry.getPlaybackContext\n   * @function getPlaybackContext\n   * @param {string} serviceUrl The service base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static getPlaybackContext(serviceUrl: string, ks: string, entryId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"getPlaybackContext\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"baseEntry-getPlaybackContext\";\n    const contextDataParams = {objectType: \"KalturaContextDataParams\", flavorTags: \"all\"};\n    request.params = {entryId: entryId, ks: ks, contextDataParams: contextDataParams};\n    return request;\n  }\n\n  /**\n   * Creates an instance of RequestBuilder for baseentry.list\n   * @function list\n   * @param {string} serviceUrl The base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static list(serviceUrl: string, ks: string, entryId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"list\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"list\";\n    request.params = OVPBaseEntryService.getEntryListReqParams(entryId, ks);\n    return request;\n  }\n\n  /**\n   * Gets  baseentry.list service params\n   * @function getEntryListReqParams\n   * @param {string} entryId The entry ID\n   * @param {string} ks The ks\n   * @returns {{ks: string, filter: {redirectFromEntryId: string}, responseProfile: {fields: string, type: number}}} The service params object\n   * @static\n   */\n  static getEntryListReqParams(entryId: string, ks: string): any {\n    const filterParams = {redirectFromEntryId: entryId};\n    const responseProfileParams = {\n      fields: \"id,name,description,thumbnailUrl,dataUrl,duration,msDuration,flavorParamsIds,mediaType,type,tags,dvrStatus\",\n      type: 1\n    };\n    return {ks: ks, filter: filterParams, responseProfile: responseProfileParams};\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/base-entry-service.js","//@flow\nimport OVPService from './ovp-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"metadata_metadata\";\n\nexport default class OVPMetadataService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for metadata_metadata.list\n   * @function getPlaybackContext\n   * @param {string} serviceUrl The service base URL\n   * @param {string} ks The ks\n   * @param {string} entryId The entry ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static list(serviceUrl: string, ks: string, entryId: string): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"list\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"metadata_metadata-list\";\n    const filter = {objectType: \"KalturaMetadataFilter\", objectIdEqual: entryId, metadataObjectTypeEqual: \"1\"};\n    request.params = {filter: filter, ks: ks};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/meta-data-service.js","//@flow\nimport OVPService from './ovp-service'\nimport RequestBuilder from '../../../util/request-builder'\n\nconst SERVICE_NAME: string = \"session\";\n\nexport default class OVPSessionService extends OVPService {\n  /**\n   * Creates an instance of RequestBuilder for session.startWidgetSession\n   * @function anonymousSession\n   * @param {string} serviceUrl The service base URL\n   * @param {string} partnerId The partner ID\n   * @returns {RequestBuilder} The request builder\n   * @static\n   */\n  static anonymousSession(serviceUrl: string, partnerId: number): RequestBuilder {\n    const headers: Map<string, string> = new Map();\n    headers.set(\"Content-Type\", \"application/json\");\n    const request = new RequestBuilder(headers);\n    request.service = SERVICE_NAME;\n    request.action = \"startWidgetSession\";\n    request.method = \"POST\";\n    request.url = request.getUrl(serviceUrl);\n    request.tag = \"session-startWidget\";\n    request.params = {widgetId: \"_\" + partnerId};\n    return request;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./k-provider/ovp/services/session-service.js","//@flow\nexport default class XmlParser {\n  /**\n   * Parses xml string to json object\n   * @param {string} xml The xml to parse\n   * @returns {{}} The parsed xml as Json object\n   * @static\n   */\n  static xmlToJson(xml: Object) {\n    let obj = {};\n    if (xml.nodeType === 1) {\n      if (xml.attributes.length > 0) {\n        obj[\"@attributes\"] = {};\n        for (let j = 0; j < xml.attributes.length; j++) {\n          let attribute = xml.attributes.item(j);\n          obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n        }\n      }\n    }\n    else if (xml.nodeType === 3) {\n      obj = xml.nodeValue;\n    }\n    if (xml.hasChildNodes()) {\n      for (let i = 0; i < xml.childNodes.length; i++) {\n        let item = xml.childNodes.item(i);\n        let nodeName = item.nodeName;\n        if (typeof (obj[nodeName]) === \"undefined\") {\n          obj[nodeName] = this.xmlToJson(item);\n        }\n        else {\n          if (typeof (obj[nodeName].push) === \"undefined\") {\n            let old = obj[nodeName];\n            obj[nodeName] = [];\n            obj[nodeName].push(old);\n          }\n          obj[nodeName].push(this.xmlToJson(item));\n        }\n      }\n    }\n    return obj;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./util/xml-parser.js"],"sourceRoot":""}